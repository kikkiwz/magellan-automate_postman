{
	"info": {
		"_postman_id": "0f443ec7-f143-4191-a21e-e3c522ec3238",
		"name": "Provisioning_SystemUser",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "SystemUser",
			"item": [
				{
					"name": "CreateSystemUser",
					"item": [
						{
							"name": "CreateSystemUser_TST_F31_1_1_001_Success_RootAdmin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"var x_ais_OrderRef_CreateSystemUser_fail = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\")\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Inquiry --------------//\r",
											"//get global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"var urlSystemUserInquirySystemUser = pm.globals.get(\"urlSystemUserInquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"// Set SystemUserId\r",
											"pm.environment.set(\"SystemUserId\",jsonData.SystemUserInfo.SystemUserId)\r",
											"// Set AccountId\r",
											"pm.environment.set(\"AccountId\",jsonData.SystemUserInfo.AccountId[0])\r",
											"\r",
											"\r",
											"pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"    pm.response.to.have.status(statusCodeCreatedSuccess);\r",
											"});\r",
											"\r",
											"pm.test('CreateSystemUser : operationStatus code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeCreatedSuccess);\r",
											"});\r",
											"\r",
											"pm.test('CreateSystemUser : operationStatus description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionCreateSystemUser);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        // console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        // console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"SystemUserId\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPost = LogDefaultValue.Other.methodPost;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameCreateSystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlCreateSystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_CreateSystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_CreateSystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : CreateSystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [CreateSystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeCreatedSuccess);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionCreateSystemUser);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        //  console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeCreatedSuccess); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionCreateSystemUser); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        // pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"                        // check custom\r",
											"                        // \t\"custom\":{ \"endPointSummary\":[ { \"no\":\"1\", \"endPointName\":\"db.ClientsCollection\", \"responseStatus\":\"Success:InquirySystemUser was successfully.\", \"processTime\":4.01 }, { \"no\":\"2\", \"endPointName\":\"db.AccountsCollection\", \"responseStatus\":\"Success:InquiryAccount was successfully.\", \"processTime\":1.892 }, { \"no\":\"3\", \"endPointName\":\"db.TenantsCollection\", \"responseStatus\":\"Success:InquiryTenant was successfully.\", \"processTime\":3.7688 }, { \"no\":\"4\", \"endPointName\":\"db.ClientsCollection\", \"responseStatus\":\"Success:InsertSystemUser was successfully.\", \"processTime\":5.5981 } ] },\r",
											"\r",
											"                        let custom = resultDataLog.custom.endPointSummary;\r",
											"                        // console.log(\"custom : : :\",custom)\r",
											"                        let countCustom = custom.length;\r",
											"\r",
											"                        // [\"db.ClientsCollection\",\"db.AccountsCollection\",\"db.TenantsCollection\",\"db.ClientsCollection\"],\r",
											"                        let dataEndPointName = LogDefaultValue.OtherSummary.stepEndpointSummary.endPointName_CreateUserSystem;\r",
											"                        // [\"Success:InquirySystemUser was successfully.\",\"Success:InquiryAccount was successfully.\",\"Success:InquiryTenant was successfully.\",\"Success:InsertSystemUser was successfully.\"]\r",
											"                        let dataResponseStatus = LogDefaultValue.OtherSummary.stepEndpointSummary.responseStatus_CreateUserSystem;\r",
											"                        let countCustomStep = dataEndPointName.length;\r",
											"                        pm.expect(countCustom).to.eql(countCustomStep); \r",
											"                        for(let i=0;i<countCustomStep;i++){\r",
											"                            let no = custom[i].no;\r",
											"                            let valueEndPointName = custom[i].endPointName;\r",
											"                            let valueResponseStatus = custom[i].responseStatus;\r",
											"                            // console.log(\"i\",i);\r",
											"                            // console.log(\"valueEndPointName\",valueEndPointName);\r",
											"                            // console.log(\"valueResponseStatus\",valueResponseStatus);\r",
											"                           \r",
											"                            console.log(\"custom.length : \" + countCustom + \" = \" + countCustomStep );\r",
											"                            console.log(\"custom.no : \" + no + \" = \" + (i+1).toString() );\r",
											"                            console.log(\"custom.endPointName : \" + valueEndPointName + \" = \" + dataEndPointName[i] );\r",
											"                            console.log(\"custom.responseStatus : \" + valueResponseStatus + \" = \" + dataResponseStatus[i] );\r",
											"                           \r",
											"                            pm.expect(no).to.eql((i+1).toString()); \r",
											"                            pm.expect(valueEndPointName).to.eql(dataEndPointName[i]); \r",
											"                            pm.expect(valueResponseStatus).to.eql(dataResponseStatus[i]);  \r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [CreateSystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [CreateSystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                                // \"\"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/CreateSystemUser\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"CreateSystemUser_202104221004935\\\",\\\"x-ais-orderdesc\\\":\\\"CreateSystemUser\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAF3ewLtzy8MApZBjTudok8wd6Uv0qq6w3KvuC4tlIIbY0IlAkkY2KW0\\\"},\\\"body\\\":{\\\"AccountId\\\":[\\\"6080f26e63fa0e0001c4a4ab\\\"],\\\"AuthenInfo\\\":{\\\"Username\\\":\\\"QATester0002\\\",\\\"Password\\\":\\\"bnZkZm5nZXJnbGtkanZlaWdqbmVvZGtsZA==\\\"},\\\"UserRole\\\":[\\\"RootAdmin\\\"]}}\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_CreateSystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_CreateSystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");          \r",
											"                            let AccountId = pm.environment.get(\"GetResponse_AccountId\");\r",
											"                            // console.log(\"AccountId : : : :,\",AccountId)\r",
											"                            let AuthenInfo_Username = pm.environment.get(\"AuthenInfo_Username\") \r",
											"                            let AuthenInfo_Password = pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\"); \r",
											"                            let UserRole = pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"                          \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);                          \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"\r",
											"    \r",
											"\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPost);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Password).to.eql(AuthenInfo_Password);\r",
											"                            pm.expect(JSON.stringify(jsonParseRequestObject.body.UserRole)).to.eql(UserRole);\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPost);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.AccountId : \" + jsonParseRequestObject.body.AccountId[0] + \" = \" + AccountId);\r",
											"                            console.log(\"resquest.body.Username : \" + jsonParseRequestObject.body.AuthenInfo.Username + \" = \" + AuthenInfo_Username);\r",
											"                            console.log(\"resquest.body.Password : \" + jsonParseRequestObject.body.AuthenInfo.Password + \" = \" + AuthenInfo_Password);\r",
											"                            console.log(\"resquest.body.UserRole : \" + JSON.stringify(jsonParseRequestObject.body.UserRole) + \" = \" + UserRole);\r",
											"                      \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"SystemUserInfo\\\":{\\\"SystemUserId\\\":\\\"6080f26f63fa0e0001c4a4ad\\\",\\\"AccountId\\\":[\\\"6080f26e63fa0e0001c4a4ab\\\"],\\\"AuthenInfo\\\":{\\\"Username\\\":\\\"QATester0002\\\"},\\\"UserRole\\\":[\\\"RootAdmin\\\"],\\\"CreatedDate\\\":\\\"2021-04-22T10:50:07.924+07:00\\\"},\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20100\\\",\\\"Description\\\":\\\"CreateSystemUser is Success\\\"}}\",\r",
											"        \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)  \r",
											"                            pm.expect(jsonParseResponseObject.SystemUserInfo.AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseResponseObject.SystemUserInfo.AuthenInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(JSON.stringify(jsonParseResponseObject.SystemUserInfo.UserRole)).to.eql(UserRole);\r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeCreatedSuccess);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionCreateSystemUser);  \r",
											"\r",
											"                            console.log(\"response.SystemUserInfo.AccountId : \" + jsonParseResponseObject.SystemUserInfo.AccountId[0] + \" = \" + AccountId);\r",
											"                            console.log(\"response.SystemUserInfo.Username : \" + jsonParseResponseObject.SystemUserInfo.AuthenInfo.Username + \" = \" + AuthenInfo_Username);  \r",
											"                            console.log(\"response.SystemUserInfo.UserRole : \" + JSON.stringify(jsonParseResponseObject.SystemUserInfo.UserRole) + \" = \" + UserRole);                  \r",
											"                            console.log(\"response.SystemUserInfo.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeCreatedSuccess);\r",
											"                            console.log(\"response.SystemUserInfo.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionCreateSystemUser);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// InquirySystemUser\r",
											"InquirySystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptInquirySystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_InquirySystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_InquirySystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestInquirySystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"SystemUserId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsInquirySystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserInquirySystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptInquirySystemUser,\r",
											"            body: httpRequestInquirySystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request InquirySystemUser');\r",
											"        let response = await reqPromise(optionsInquirySystemUser);\r",
											"        let jsonDataInquirySystemUser = await response.json();\r",
											"        // console.log('jsonDataInquirySystemUser : : : ',jsonDataInquirySystemUser)\r",
											"    \r",
											"        let operationStatusInquirySystemUser = await jsonDataInquirySystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"InquirySystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('InquirySystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusInquirySystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //InquirySystemUser is Success\r",
											"        pm.test('InquirySystemUser : OperationStatus Description is '+'\"'+ resultDescriptionInquirySystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusInquirySystemUser).to.have.property('Description', resultDescriptionInquirySystemUser);\r",
											"        });\r",
											"\r",
											"        //Check Data\r",
											"        let SystemUserInfo = await jsonDataInquirySystemUser.PartnerInfo;\r",
											"        console.log('SystemUserInfo : : :',SystemUserInfo);\r",
											"        for(let i=0;i<SystemUserInfo.length;i++){\r",
											"            pm.test('Verify DB Check Data : CreateSystemUser' , function () {\r",
											"                console.log(\"===============================================================================================================\")    \r",
											"                console.log(\"======== Verify DB Check Data ( Expected = Actual) [CreateSystemUser] ==================\");    \r",
											"                console.log(\"AccountId : \" + SystemUserInfo[i].AccountId[0] + \" = \" + pm.environment.get(\"GetResponse_AccountId\"));\r",
											"                console.log(\"Username : \" + SystemUserInfo[i].AuthenInfo.Username + \" = \" + pm.environment.get(\"AuthenInfo_Username\"));\r",
											"                console.log(\"UserRole : \" + JSON.stringify(SystemUserInfo[i].UserRole) + \" = \" + pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\"));\r",
											"                console.log(\"Code : \" + operationStatusInquirySystemUser.Code + \" = \" + resultCodeSuccess);\r",
											"                console.log(\"Description : \" + operationStatusInquirySystemUser.Description + \" = \" + resultDescriptionInquirySystemUser);\r",
											"\r",
											"                pm.expect(SystemUserInfo[i].AccountId[0]).to.eql(pm.environment.get(\"GetResponse_AccountId\"));\r",
											"                pm.expect(SystemUserInfo[i].AuthenInfo.Username).to.eql(pm.environment.get(\"AuthenInfo_Username\"));\r",
											"                pm.expect(JSON.stringify(SystemUserInfo[i].UserRole)).to.eql(pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\"));\r",
											"                pm.expect(operationStatusInquirySystemUser.Code).to.eql(resultCodeSuccess);\r",
											"                pm.expect(operationStatusInquirySystemUser.Description).to.eql(resultDescriptionInquirySystemUser);\r",
											"\r",
											"         });\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 30000); \r",
											"setTimeout(function(){InquirySystemUser();}, 40000);\r",
											"setTimeout(function(){RemoveSystemUser();}, 50000);\r",
											"setTimeout(function(){RemoveAccount();}, 60000);  \r",
											"setTimeout(function(){RemovePartner();}, 70000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"SystemUserId\");\r",
											"pm.environment.unset(\"AccountId\");\r",
											"pm.environment.unset(\"AuthenInfo_Username\");\r",
											"\r",
											"\r",
											"\r",
											"}, 80000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",JSON.stringify(fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole))\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals SystemUser_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals Account --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"CreateAccountfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount_fail\", HeaderList.Account.x_ais_OrderRef_CreateAccount_fail);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"//---------------- set url Inquirey --------------//\r",
											"//set global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"pm.globals.set(\"urlSystemUserInquirySystemUser\", urlRouteList.SystemUser.urlSystemUserInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"        // console.log(\"jsonDataCreatePartner.PartnerInfo.PartnerId : :\", jsonDataCreatePartner.PartnerInfo.PartnerId)\r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"        // console.log('jsonDataCreateAccount',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(async function(){}, 2000);\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 6000); \r",
											"setTimeout(async function(){await CreateAccount();}, 7000); \r",
											"setTimeout(async function(){}, 8000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_CreateSystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_CreateSystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"AccountId\": [\"{{GetResponse_AccountId}}\"],\r\n  \"AuthenInfo\": {\r\n    \"Username\": \"{{AuthenInfo_Username}}\",\r\n    \"Password\": \"{{Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password}}\"\r\n  },\r\n  \"UserRole\": {{Value_CreateSystemUser_TST_F31_1_1_001_UserRole}}\r\n  \r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/CreateSystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"CreateSystemUser"
									]
								},
								"description": "Type:Desire"
							},
							"response": []
						},
						{
							"name": "CreateSystemUser_TST_F31_1_1_002_Success_SupplierAdmin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"var x_ais_OrderRef_CreateSystemUser_fail = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\")\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Inquiry --------------//\r",
											"//get global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"var urlSystemUserInquirySystemUser = pm.globals.get(\"urlSystemUserInquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"// console.log(\"jsonData : : : :\", jsonData)\r",
											"// Set SystemUserId\r",
											"pm.environment.set(\"SystemUserId\",jsonData.SystemUserInfo.SystemUserId)\r",
											"// /pm.environment.set(\"SystemUserId\", jsonData.SystemUserInfo.SystemUserId);\r",
											"// console.log(\"SystemUserId : : : :\", pm.environment.get(\"SystemUserId\"))\r",
											"// Set AccountId\r",
											"pm.environment.set(\"AccountId\",jsonData.SystemUserInfo.AccountId[0])\r",
											"\r",
											"\r",
											"pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"    pm.response.to.have.status(statusCodeCreatedSuccess);\r",
											"});\r",
											"\r",
											"pm.test('CreateSystemUser : operationStatus code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeCreatedSuccess);\r",
											"});\r",
											"\r",
											"pm.test('CreateSystemUser : operationStatus description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionCreateSystemUser);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"SystemUserId\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPost = LogDefaultValue.Other.methodPost;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameCreateSystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlCreateSystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_CreateSystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_CreateSystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : CreateSystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [CreateSystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeCreatedSuccess);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionCreateSystemUser);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        //  console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeCreatedSuccess); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionCreateSystemUser); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        // pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"                        // check custom\r",
											"                        // \t\"custom\":{ \"endPointSummary\":[ { \"no\":\"1\", \"endPointName\":\"db.ClientsCollection\", \"responseStatus\":\"Success:InquirySystemUser was successfully.\", \"processTime\":4.01 }, { \"no\":\"2\", \"endPointName\":\"db.AccountsCollection\", \"responseStatus\":\"Success:InquiryAccount was successfully.\", \"processTime\":1.892 }, { \"no\":\"3\", \"endPointName\":\"db.TenantsCollection\", \"responseStatus\":\"Success:InquiryTenant was successfully.\", \"processTime\":3.7688 }, { \"no\":\"4\", \"endPointName\":\"db.ClientsCollection\", \"responseStatus\":\"Success:InsertSystemUser was successfully.\", \"processTime\":5.5981 } ] },\r",
											"\r",
											"                        let custom = resultDataLog.custom.endPointSummary;\r",
											"                        // console.log(\"custom : : :\",custom)\r",
											"                        let countCustom = custom.length;\r",
											"\r",
											"                        // [\"db.ClientsCollection\",\"db.AccountsCollection\",\"db.TenantsCollection\",\"db.ClientsCollection\"],\r",
											"                        let dataEndPointName = LogDefaultValue.OtherSummary.stepEndpointSummary.endPointName_CreateUserSystem;\r",
											"                        // [\"Success:InquirySystemUser was successfully.\",\"Success:InquiryAccount was successfully.\",\"Success:InquiryTenant was successfully.\",\"Success:InsertSystemUser was successfully.\"]\r",
											"                        let dataResponseStatus = LogDefaultValue.OtherSummary.stepEndpointSummary.responseStatus_CreateUserSystem;\r",
											"                        let countCustomStep = dataEndPointName.length;\r",
											"                        pm.expect(countCustom).to.eql(countCustomStep); \r",
											"                        for(let i=0;i<countCustomStep;i++){\r",
											"                            let no = custom[i].no;\r",
											"                            let valueEndPointName = custom[i].endPointName;\r",
											"                            let valueResponseStatus = custom[i].responseStatus;\r",
											"                            // console.log(\"i\",i);\r",
											"                            // console.log(\"valueEndPointName\",valueEndPointName);\r",
											"                            // console.log(\"valueResponseStatus\",valueResponseStatus);\r",
											"                           \r",
											"                            console.log(\"custom.length : \" + countCustom + \" = \" + countCustomStep );\r",
											"                            console.log(\"custom.no : \" + no + \" = \" + (i+1).toString() );\r",
											"                            console.log(\"custom.endPointName : \" + valueEndPointName + \" = \" + dataEndPointName[i] );\r",
											"                            console.log(\"custom.responseStatus : \" + valueResponseStatus + \" = \" + dataResponseStatus[i] );\r",
											"                           \r",
											"                            pm.expect(no).to.eql((i+1).toString()); \r",
											"                            pm.expect(valueEndPointName).to.eql(dataEndPointName[i]); \r",
											"                            pm.expect(valueResponseStatus).to.eql(dataResponseStatus[i]);  \r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [CreateSystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [CreateSystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                                // \"\"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/CreateSystemUser\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"CreateSystemUser_202104221004935\\\",\\\"x-ais-orderdesc\\\":\\\"CreateSystemUser\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAF3ewLtzy8MApZBjTudok8wd6Uv0qq6w3KvuC4tlIIbY0IlAkkY2KW0\\\"},\\\"body\\\":{\\\"AccountId\\\":[\\\"6080f26e63fa0e0001c4a4ab\\\"],\\\"AuthenInfo\\\":{\\\"Username\\\":\\\"QATester0002\\\",\\\"Password\\\":\\\"bnZkZm5nZXJnbGtkanZlaWdqbmVvZGtsZA==\\\"},\\\"UserRole\\\":[\\\"RootAdmin\\\"]}}\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_CreateSystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_CreateSystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");          \r",
											"                            let AccountId = pm.environment.get(\"accountId_role_other\");\r",
											"                            // console.log(\"AccountId : : : :,\",AccountId)\r",
											"                            let AuthenInfo_Username = pm.environment.get(\"AuthenInfo_Username\"); \r",
											"                            let AuthenInfo_Password = pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\"); \r",
											"                            let UserRole = pm.environment.get(\"UserRole\");\r",
											"\r",
											"\r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);                          \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"\r",
											"    \r",
											"\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPost);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Password).to.eql(AuthenInfo_Password);\r",
											"                            pm.expect(jsonParseRequestObject.body.UserRole[0]).to.eql(UserRole);\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPost);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.AccountId : \" + jsonParseRequestObject.body.AccountId[0] + \" = \" + AccountId);\r",
											"                            console.log(\"resquest.body.Username : \" + jsonParseRequestObject.body.AuthenInfo.Username + \" = \" + AuthenInfo_Username);\r",
											"                            console.log(\"resquest.body.Password : \" + jsonParseRequestObject.body.AuthenInfo.Password + \" = \" + AuthenInfo_Password);\r",
											"                            console.log(\"resquest.body.UserRole : \" + jsonParseRequestObject.body.UserRole[0] + \" = \" + UserRole);\r",
											"                      \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"SystemUserInfo\\\":{\\\"SystemUserId\\\":\\\"6080f26f63fa0e0001c4a4ad\\\",\\\"AccountId\\\":[\\\"6080f26e63fa0e0001c4a4ab\\\"],\\\"AuthenInfo\\\":{\\\"Username\\\":\\\"QATester0002\\\"},\\\"UserRole\\\":[\\\"RootAdmin\\\"],\\\"CreatedDate\\\":\\\"2021-04-22T10:50:07.924+07:00\\\"},\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20100\\\",\\\"Description\\\":\\\"CreateSystemUser is Success\\\"}}\",\r",
											"        \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)  \r",
											"                            pm.expect(jsonParseResponseObject.SystemUserInfo.AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseResponseObject.SystemUserInfo.AuthenInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseResponseObject.SystemUserInfo.UserRole[0]).to.eql(UserRole);\r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeCreatedSuccess);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionCreateSystemUser);  \r",
											"\r",
											"                            console.log(\"response.SystemUserInfo.AccountId : \" + jsonParseResponseObject.SystemUserInfo.AccountId[0] + \" = \" + AccountId);\r",
											"                            console.log(\"response.SystemUserInfo.Username : \" + jsonParseResponseObject.SystemUserInfo.AuthenInfo.Username + \" = \" + AuthenInfo_Username);  \r",
											"                            console.log(\"response.SystemUserInfo.UserRole : \" + jsonParseResponseObject.SystemUserInfo.UserRole[0] + \" = \" + UserRole);                  \r",
											"                            console.log(\"response.SystemUserInfo.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeCreatedSuccess);\r",
											"                            console.log(\"response.SystemUserInfo.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionCreateSystemUser);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// InquirySystemUser\r",
											"InquirySystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptInquirySystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_InquirySystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_InquirySystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestInquirySystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"SystemUserId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsInquirySystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserInquirySystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptInquirySystemUser,\r",
											"            body: httpRequestInquirySystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request InquirySystemUser');\r",
											"        let response = await reqPromise(optionsInquirySystemUser);\r",
											"        let jsonDataInquirySystemUser = await response.json();\r",
											"        // console.log('jsonDataInquirySystemUser : : : ',jsonDataInquirySystemUser)\r",
											"    \r",
											"        let operationStatusInquirySystemUser = await jsonDataInquirySystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"InquirySystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('InquirySystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusInquirySystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //InquirySystemUser is Success\r",
											"        pm.test('InquirySystemUser : OperationStatus Description is '+'\"'+ resultDescriptionInquirySystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusInquirySystemUser).to.have.property('Description', resultDescriptionInquirySystemUser);\r",
											"        });\r",
											"\r",
											"        //Check Data\r",
											"        let SystemUserInfo = await jsonDataInquirySystemUser.PartnerInfo;\r",
											"        console.log('SystemUserInfo : : :',SystemUserInfo);\r",
											"        for(let i=0;i<SystemUserInfo.length;i++){\r",
											"            pm.test('Verify DB Check Data : CreateSystemUser' , function () {\r",
											"                console.log(\"===============================================================================================================\")    \r",
											"                console.log(\"======== Verify DB Check Data ( Expected = Actual) [CreateSystemUser] ==================\");    \r",
											"                console.log(\"AccountId : \" + SystemUserInfo[i].AccountId[0] + \" = \" + pm.environment.get(\"accountId_role_other\"));\r",
											"                console.log(\"Username : \" + SystemUserInfo[i].AuthenInfo.Username + \" = \" + pm.environment.get(\"AuthenInfo_Username\"));\r",
											"                console.log(\"UserRole : \" + SystemUserInfo[i].UserRole[0] + \" = \" + pm.environment.get(\"UserRole\"));\r",
											"                console.log(\"Code : \" + operationStatusInquirySystemUser.Code + \" = \" + resultCodeSuccess);\r",
											"                console.log(\"Description : \" + operationStatusInquirySystemUser.Description + \" = \" + resultDescriptionInquirySystemUser);\r",
											"\r",
											"                pm.expect(SystemUserInfo[i].AccountId[0]).to.eql(pm.environment.get(\"accountId_role_other\"));\r",
											"                pm.expect(SystemUserInfo[i].AuthenInfo.Username).to.eql(pm.environment.get(\"AuthenInfo_Username\"));\r",
											"                pm.expect(SystemUserInfo[i].UserRole[0]).to.eql(pm.environment.get(\"UserRole\"));\r",
											"                pm.expect(operationStatusInquirySystemUser.Code).to.eql(resultCodeSuccess);\r",
											"                pm.expect(operationStatusInquirySystemUser.Description).to.eql(resultDescriptionInquirySystemUser);\r",
											"\r",
											"         });\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 20000); \r",
											"setTimeout(function(){InquirySystemUser();}, 40000);\r",
											"setTimeout(function(){RemoveSystemUser();}, 50000);\r",
											"\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"SystemUserId\");\r",
											"pm.environment.unset(\"AccountId\");\r",
											"pm.environment.unset(\"AuthenInfo_Username\");\r",
											"\r",
											"\r",
											"}, 60000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"var Username2 = pm.environment.get(\"Username_SupplierAdmin\");\r",
											"var Password2 = pm.environment.get(\"Password_SupplierAdmin\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals SystemUser_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals Account --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"CreateAccountfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount_fail\", HeaderList.Account.x_ais_OrderRef_CreateAccount_fail);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"//---------------- set url Inquirey --------------//\r",
											"//set global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"pm.globals.set(\"urlSystemUserInquirySystemUser\", urlRouteList.SystemUser.urlSystemUserInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username2,\r",
											"                password:Password2\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // console.log(\"jsonDataSignin : : :\",jsonDataSignin)\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"        // setUserRole\r",
											"        await pm.environment.set(\"UserRole\" , jsonDataSignin.UserRole[0]);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"\r",
											"        //set Username\r",
											"         let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"  \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){}, 6000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_CreateSystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_CreateSystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"AccountId\": [\"{{accountId_role_other}}\"],\r\n  \"AuthenInfo\": {\r\n    \"Username\": \"{{AuthenInfo_Username}}\",\r\n    \"Password\": \"{{Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password}}\"\r\n  },\r\n  \"UserRole\": [\"{{UserRole}}\"]\r\n  \r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/CreateSystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"CreateSystemUser"
									]
								},
								"description": "Type:Desire"
							},
							"response": []
						},
						{
							"name": "CreateSystemUser_TST_F31_1_1_003_Success_CustomerAdmin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"var x_ais_OrderRef_CreateSystemUser_fail = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\")\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Inquiry --------------//\r",
											"//get global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"var urlSystemUserInquirySystemUser = pm.globals.get(\"urlSystemUserInquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"// console.log(\"jsonData : : : :\", jsonData)\r",
											"// Set SystemUserId\r",
											"pm.environment.set(\"SystemUserId\",jsonData.SystemUserInfo.SystemUserId)\r",
											"// /pm.environment.set(\"SystemUserId\", jsonData.SystemUserInfo.SystemUserId);\r",
											"// console.log(\"SystemUserId : : : :\", pm.environment.get(\"SystemUserId\"))\r",
											"// Set AccountId\r",
											"pm.environment.set(\"AccountId\",jsonData.SystemUserInfo.AccountId[0])\r",
											"\r",
											"\r",
											"pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"    pm.response.to.have.status(statusCodeCreatedSuccess);\r",
											"});\r",
											"\r",
											"pm.test('CreateSystemUser : operationStatus code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeCreatedSuccess);\r",
											"});\r",
											"\r",
											"pm.test('CreateSystemUser : operationStatus description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionCreateSystemUser);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"SystemUserId\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPost = LogDefaultValue.Other.methodPost;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameCreateSystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlCreateSystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_CreateSystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_CreateSystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : CreateSystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [CreateSystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeCreatedSuccess);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionCreateSystemUser);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        //  console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeCreatedSuccess); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionCreateSystemUser); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        // pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"                        // check custom\r",
											"                        // \t\"custom\":{ \"endPointSummary\":[ { \"no\":\"1\", \"endPointName\":\"db.ClientsCollection\", \"responseStatus\":\"Success:InquirySystemUser was successfully.\", \"processTime\":4.01 }, { \"no\":\"2\", \"endPointName\":\"db.AccountsCollection\", \"responseStatus\":\"Success:InquiryAccount was successfully.\", \"processTime\":1.892 }, { \"no\":\"3\", \"endPointName\":\"db.TenantsCollection\", \"responseStatus\":\"Success:InquiryTenant was successfully.\", \"processTime\":3.7688 }, { \"no\":\"4\", \"endPointName\":\"db.ClientsCollection\", \"responseStatus\":\"Success:InsertSystemUser was successfully.\", \"processTime\":5.5981 } ] },\r",
											"\r",
											"                        let custom = resultDataLog.custom.endPointSummary;\r",
											"                        // console.log(\"custom : : :\",custom)\r",
											"                        let countCustom = custom.length;\r",
											"\r",
											"                        // [\"db.ClientsCollection\",\"db.AccountsCollection\",\"db.TenantsCollection\",\"db.ClientsCollection\"],\r",
											"                        let dataEndPointName = LogDefaultValue.OtherSummary.stepEndpointSummary.endPointName_CreateUserSystem;\r",
											"                        // [\"Success:InquirySystemUser was successfully.\",\"Success:InquiryAccount was successfully.\",\"Success:InquiryTenant was successfully.\",\"Success:InsertSystemUser was successfully.\"]\r",
											"                        let dataResponseStatus = LogDefaultValue.OtherSummary.stepEndpointSummary.responseStatus_CreateUserSystem;\r",
											"                        let countCustomStep = dataEndPointName.length;\r",
											"                        pm.expect(countCustom).to.eql(countCustomStep); \r",
											"                        for(let i=0;i<countCustomStep;i++){\r",
											"                            let no = custom[i].no;\r",
											"                            let valueEndPointName = custom[i].endPointName;\r",
											"                            let valueResponseStatus = custom[i].responseStatus;\r",
											"                            // console.log(\"i\",i);\r",
											"                            // console.log(\"valueEndPointName\",valueEndPointName);\r",
											"                            // console.log(\"valueResponseStatus\",valueResponseStatus);\r",
											"                           \r",
											"                            console.log(\"custom.length : \" + countCustom + \" = \" + countCustomStep );\r",
											"                            console.log(\"custom.no : \" + no + \" = \" + (i+1).toString() );\r",
											"                            console.log(\"custom.endPointName : \" + valueEndPointName + \" = \" + dataEndPointName[i] );\r",
											"                            console.log(\"custom.responseStatus : \" + valueResponseStatus + \" = \" + dataResponseStatus[i] );\r",
											"                           \r",
											"                            pm.expect(no).to.eql((i+1).toString()); \r",
											"                            pm.expect(valueEndPointName).to.eql(dataEndPointName[i]); \r",
											"                            pm.expect(valueResponseStatus).to.eql(dataResponseStatus[i]);  \r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [CreateSystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [CreateSystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                                // \"\"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/CreateSystemUser\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"CreateSystemUser_202104221004935\\\",\\\"x-ais-orderdesc\\\":\\\"CreateSystemUser\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAF3ewLtzy8MApZBjTudok8wd6Uv0qq6w3KvuC4tlIIbY0IlAkkY2KW0\\\"},\\\"body\\\":{\\\"AccountId\\\":[\\\"6080f26e63fa0e0001c4a4ab\\\"],\\\"AuthenInfo\\\":{\\\"Username\\\":\\\"QATester0002\\\",\\\"Password\\\":\\\"bnZkZm5nZXJnbGtkanZlaWdqbmVvZGtsZA==\\\"},\\\"UserRole\\\":[\\\"RootAdmin\\\"]}}\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_CreateSystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_CreateSystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");          \r",
											"                            let AccountId = pm.environment.get(\"accountId_role_other\");\r",
											"                            // console.log(\"AccountId : : : :,\",AccountId)\r",
											"                            let AuthenInfo_Username = pm.environment.get(\"AuthenInfo_Username\"); \r",
											"                            let AuthenInfo_Password = pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\"); \r",
											"                            let UserRole = pm.environment.get(\"UserRole\");\r",
											"\r",
											"\r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);                          \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"\r",
											"    \r",
											"\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPost);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Password).to.eql(AuthenInfo_Password);\r",
											"                            pm.expect(jsonParseRequestObject.body.UserRole[0]).to.eql(UserRole);\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPost);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.AccountId : \" + jsonParseRequestObject.body.AccountId[0] + \" = \" + AccountId);\r",
											"                            console.log(\"resquest.body.Username : \" + jsonParseRequestObject.body.AuthenInfo.Username + \" = \" + AuthenInfo_Username);\r",
											"                            console.log(\"resquest.body.Password : \" + jsonParseRequestObject.body.AuthenInfo.Password + \" = \" + AuthenInfo_Password);\r",
											"                            console.log(\"resquest.body.UserRole : \" + jsonParseRequestObject.body.UserRole[0] + \" = \" + UserRole);\r",
											"                      \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"SystemUserInfo\\\":{\\\"SystemUserId\\\":\\\"6080f26f63fa0e0001c4a4ad\\\",\\\"AccountId\\\":[\\\"6080f26e63fa0e0001c4a4ab\\\"],\\\"AuthenInfo\\\":{\\\"Username\\\":\\\"QATester0002\\\"},\\\"UserRole\\\":[\\\"RootAdmin\\\"],\\\"CreatedDate\\\":\\\"2021-04-22T10:50:07.924+07:00\\\"},\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20100\\\",\\\"Description\\\":\\\"CreateSystemUser is Success\\\"}}\",\r",
											"        \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)  \r",
											"                            pm.expect(jsonParseResponseObject.SystemUserInfo.AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseResponseObject.SystemUserInfo.AuthenInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseResponseObject.SystemUserInfo.UserRole[0]).to.eql(UserRole);\r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeCreatedSuccess);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionCreateSystemUser);  \r",
											"\r",
											"                            console.log(\"response.SystemUserInfo.AccountId : \" + jsonParseResponseObject.SystemUserInfo.AccountId[0] + \" = \" + AccountId);\r",
											"                            console.log(\"response.SystemUserInfo.Username : \" + jsonParseResponseObject.SystemUserInfo.AuthenInfo.Username + \" = \" + AuthenInfo_Username);  \r",
											"                            console.log(\"response.SystemUserInfo.UserRole : \" + jsonParseResponseObject.SystemUserInfo.UserRole[0] + \" = \" + UserRole);                  \r",
											"                            console.log(\"response.SystemUserInfo.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeCreatedSuccess);\r",
											"                            console.log(\"response.SystemUserInfo.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionCreateSystemUser);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// InquirySystemUser\r",
											"InquirySystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptInquirySystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_InquirySystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_InquirySystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestInquirySystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"SystemUserId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsInquirySystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserInquirySystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptInquirySystemUser,\r",
											"            body: httpRequestInquirySystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request InquirySystemUser');\r",
											"        let response = await reqPromise(optionsInquirySystemUser);\r",
											"        let jsonDataInquirySystemUser = await response.json();\r",
											"        // console.log('jsonDataInquirySystemUser : : : ',jsonDataInquirySystemUser)\r",
											"    \r",
											"        let operationStatusInquirySystemUser = await jsonDataInquirySystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"InquirySystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('InquirySystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusInquirySystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //InquirySystemUser is Success\r",
											"        pm.test('InquirySystemUser : OperationStatus Description is '+'\"'+ resultDescriptionInquirySystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusInquirySystemUser).to.have.property('Description', resultDescriptionInquirySystemUser);\r",
											"        });\r",
											"\r",
											"        //Check Data\r",
											"        let SystemUserInfo = await jsonDataInquirySystemUser.PartnerInfo;\r",
											"        console.log('SystemUserInfo : : :',SystemUserInfo);\r",
											"        for(let i=0;i<SystemUserInfo.length;i++){\r",
											"            pm.test('Verify DB Check Data : CreateSystemUser' , function () {\r",
											"                console.log(\"===============================================================================================================\")    \r",
											"                console.log(\"======== Verify DB Check Data ( Expected = Actual) [CreateSystemUser] ==================\");    \r",
											"                console.log(\"AccountId : \" + SystemUserInfo[i].AccountId[0] + \" = \" + pm.environment.get(\"accountId_role_other\"));\r",
											"                console.log(\"Username : \" + SystemUserInfo[i].AuthenInfo.Username + \" = \" + pm.environment.get(\"AuthenInfo_Username\"));\r",
											"                console.log(\"UserRole : \" + SystemUserInfo[i].UserRole[0] + \" = \" + pm.environment.get(\"UserRole\"));\r",
											"                console.log(\"Code : \" + operationStatusInquirySystemUser.Code + \" = \" + resultCodeSuccess);\r",
											"                console.log(\"Description : \" + operationStatusInquirySystemUser.Description + \" = \" + resultDescriptionInquirySystemUser);\r",
											"\r",
											"                pm.expect(SystemUserInfo[i].AccountId[0]).to.eql(pm.environment.get(\"accountId_role_other\"));\r",
											"                pm.expect(SystemUserInfo[i].AuthenInfo.Username).to.eql(pm.environment.get(\"AuthenInfo_Username\"));\r",
											"                pm.expect(SystemUserInfo[i].UserRole[0]).to.eql(pm.environment.get(\"UserRole\"));\r",
											"                pm.expect(operationStatusInquirySystemUser.Code).to.eql(resultCodeSuccess);\r",
											"                pm.expect(operationStatusInquirySystemUser.Description).to.eql(resultDescriptionInquirySystemUser);\r",
											"\r",
											"         });\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 20000); \r",
											"setTimeout(function(){InquirySystemUser();}, 40000);\r",
											"setTimeout(function(){RemoveSystemUser();}, 50000);\r",
											"\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"SystemUserId\");\r",
											"pm.environment.unset(\"AccountId\");\r",
											"pm.environment.unset(\"AuthenInfo_Username\");\r",
											"\r",
											"\r",
											"}, 60000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"var Username2 = pm.environment.get(\"Username_CustomerAdmin\");\r",
											"var Password2 = pm.environment.get(\"Password_CustomerAdmin\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals SystemUser_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals Account --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"CreateAccountfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount_fail\", HeaderList.Account.x_ais_OrderRef_CreateAccount_fail);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"//---------------- set url Inquirey --------------//\r",
											"//set global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"pm.globals.set(\"urlSystemUserInquirySystemUser\", urlRouteList.SystemUser.urlSystemUserInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username2,\r",
											"                password:Password2\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // console.log(\"jsonDataSignin : : :\",jsonDataSignin)\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"        // setUserRole\r",
											"        await pm.environment.set(\"UserRole\" , jsonDataSignin.UserRole[0]);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"\r",
											"        //set Username\r",
											"         let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"  \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){}, 6000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_CreateSystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_CreateSystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"AccountId\": [\"{{accountId_role_other}}\"],\r\n  \"AuthenInfo\": {\r\n    \"Username\": \"{{AuthenInfo_Username}}\",\r\n    \"Password\": \"{{Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password}}\"\r\n  },\r\n  \"UserRole\": [\"{{UserRole}}\"]\r\n  \r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/CreateSystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"CreateSystemUser"
									]
								},
								"description": "Type:Desire"
							},
							"response": []
						},
						{
							"name": "CreateSystemUser_TST_F31_0_2_002_Error_AccountIdNotObjectId",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",JSON.stringify(fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole))\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_0_2_002_AccountId\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_0_2_002_AccountId)\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"//set global variable to statusCode 403\r",
											"pm.globals.set(\"statusCodeForbidden\", statusCodeList.statusCodeForbidden);\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"//set global variable to resultCode \"40300\"\r",
											"pm.globals.set(\"resultCodeForbiddenMissingOrInvalidParameter\", resultCodeList.resultCodeForbiddenMissingOrInvalidParameter);\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionErrorList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionErrorList = JSON.parse(pm.environment.get(\"resultDescriptionErrorList\"));\r",
											"//set global variable to resultDescription \"The PartnerId field is not Object Id.\"\r",
											"pm.globals.set(\"resultDescriptionTheAccountIdFieldIsNotObjectId\", resultDescriptionErrorList.resultDescriptionTheAccountIdFieldIsNotObjectId)\r",
											"\r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals SystemUser_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals Account --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"CreateAccountfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount_fail\", HeaderList.Account.x_ais_OrderRef_CreateAccount_fail);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"        // console.log(\"jsonDataCreatePartner.PartnerInfo.PartnerId : :\", jsonDataCreatePartner.PartnerInfo.PartnerId)\r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"        // console.log('jsonDataCreateAccount',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 5000); \r",
											"setTimeout(async function(){await CreateAccount();}, 6000); \r",
											"setTimeout(async function(){}, 7000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"var x_ais_OrderRef_CreateSystemUser_fail = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"\r",
											"\r",
											"\r",
											"//get global variable to statusCode 403\r",
											"var statusCodeForbidden = pm.globals.get(\"statusCodeForbidden\");\r",
											"//get global variable to resultCode \"40300\"\r",
											"var resultCodeForbiddenMissingOrInvalidParameter = pm.globals.get(\"resultCodeForbiddenMissingOrInvalidParameter\");\r",
											"//get global variable to resultDescription \"The AccountId field is not Object Id.\"\r",
											"var resultDescriptionTheAccountIdFieldIsNotObjectId = pm.globals.get(\"resultDescriptionTheAccountIdFieldIsNotObjectId\");\r",
											"\r",
											"\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"CreateSystemUser : Status code is \" + statusCodeForbidden, function () {\r",
											"    pm.response.to.have.status(statusCodeForbidden);\r",
											"});\r",
											"\r",
											"pm.test('CreateSystemUser : operationStatus code is '+'\"'+ resultCodeForbiddenMissingOrInvalidParameter +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeForbiddenMissingOrInvalidParameter);\r",
											"});\r",
											"\r",
											"pm.test('CreateSystemUser : operationStatus description is '+'\"'+ resultDescriptionTheAccountIdFieldIsNotObjectId+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionTheAccountIdFieldIsNotObjectId);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        // console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        // console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPost = LogDefaultValue.Other.methodPost;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameCreateSystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlCreateSystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_CreateSystemUser_fail + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;    \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_CreateSystemUser_fail + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : CreateSystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [CreateSystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeForbiddenMissingOrInvalidParameter);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionTheAccountIdFieldIsNotObjectId);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeForbiddenMissingOrInvalidParameter); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionTheAccountIdFieldIsNotObjectId); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [CreateSystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [CreateSystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                                // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/CreateSystemUser\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"CreateSystemUserfail_202104221404335\\\",\\\"x-ais-orderdesc\\\":\\\"CreateSystemUser\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAF3ewLtzy8MAuuubiRwbrkykk3T6sn9eGmDoYgnNvJATUIlAkkY2KW0\\\"},\\\"body\\\":{\\\"AccountId\\\":[\\\"608127d463fa0e0001c4b3e1xx\\\"]\\\"AuthenInfo\\\":{\\\"Username\\\":\\\"QATester0002\\\",\\\"Password\\\":\\\"bnZkZm5nZXJnbGtkanZlaWdqbmVvZGtsZA==\\\"},\\\"UserRole\\\":[\\\"RootAdmin\\\"]}}\",\r",
											"                            \r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_CreateSystemUser_fail + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_CreateSystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");\r",
											"                            let AccountId = pm.environment.get(\"GetResponse_AccountId\") + pm.environment.get(\"Value_CreateSystemUser_TST_F31_0_2_002_AccountId\");\r",
											"                            let AuthenInfo_Username = pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\"); \r",
											"                            let AuthenInfo_Password = pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\"); \r",
											"                            let UserRole = pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);   \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);       \r",
											"\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPost);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Password).to.eql(AuthenInfo_Password);\r",
											"                            pm.expect(JSON.stringify(jsonParseRequestObject.body.UserRole)).to.eql(UserRole);\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPost);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.AccountId : \" + jsonParseRequestObject.body.AccountId[0] + \" = \" + AccountId);\r",
											"                            console.log(\"resquest.body.Username : \" + jsonParseRequestObject.body.AuthenInfo.Username + \" = \" + AuthenInfo_Username);\r",
											"                            console.log(\"resquest.body.Password : \" + jsonParseRequestObject.body.AuthenInfo.Password + \" = \" + AuthenInfo_Password);\r",
											"                            console.log(\"resquest.body.UserRole : \" + JSON.stringify(jsonParseRequestObject.body.UserRole) + \" = \" + UserRole);\r",
											"      \r",
											"                          \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"OperationStatus\\\":{\\\"Code\\\":\\\"40300\\\",\\\"Description\\\":\\\"The AccountId field is not Object Id.\\\"}}\",\r",
											"\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeForbiddenMissingOrInvalidParameter);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionTheAccountIdFieldIsNotObjectId);  \r",
											"\r",
											"               \r",
											"                            console.log(\"response.SystemUserInfo.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeForbiddenMissingOrInvalidParameter);\r",
											"                            console.log(\"response.SystemUserInfo.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionTheAccountIdFieldIsNotObjectId);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 8000); \r",
											"setTimeout(function(){CheckLog();}, 20000); \r",
											"setTimeout(function(){RemoveAccount();}, 40000);  \r",
											"setTimeout(function(){RemovePartner();}, 50000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_0_2_002_AccountId\");\r",
											"pm.environment.unset(\"tid\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"}, 60000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_CreateSystemUser_fail}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_CreateSystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"AccountId\": [\r\n    \"{{GetResponse_AccountId}}{{Value_CreateSystemUser_TST_F31_0_2_002_AccountId}}\"\r\n  ],\r\n  \"AuthenInfo\": {\r\n    \"Username\": \"{{Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username}}\",\r\n    \"Password\": \"{{Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password}}\"\r\n  },\r\n  \"UserRole\": {{Value_CreateSystemUser_TST_F31_1_1_001_UserRole}}\r\n  \r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/CreateSystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"CreateSystemUser"
									]
								},
								"description": "Type:Desire"
							},
							"response": []
						},
						{
							"name": "CreateSystemUser_TST_F31_0_2_004_Error_Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"var x_ais_OrderRef_CreateSystemUser_fail = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\")\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Inquiry --------------//\r",
											"//get global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"var urlSystemUserInquirySystemUser = pm.globals.get(\"urlSystemUserInquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"//get global variable to statusCode 403\r",
											"var statusCodeForbidden = pm.globals.get(\"statusCodeForbidden\");\r",
											"//get global variable to resultCode \"40308\"\r",
											"var resultCodeRoleInvalid = pm.globals.get(\"resultCodeRoleInvalid\");\r",
											"//get global variable to resultDescription \"Role Invalid\"\r",
											"var resultDescriptionRoleInvalid = pm.globals.get(\"resultDescriptionRoleInvalid\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"pm.test(\"CreateSystemUser : Status code is \" + statusCodeForbidden, function () {\r",
											"    pm.response.to.have.status(statusCodeForbidden);\r",
											"});\r",
											"\r",
											"pm.test('CreateSystemUser : operationStatus code is '+'\"'+ resultCodeRoleInvalid +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeRoleInvalid);\r",
											"});\r",
											"\r",
											"pm.test('CreateSystemUser : operationStatus description is '+'\"'+ resultDescriptionRoleInvalid+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPost = LogDefaultValue.Other.methodPost;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameCreateSystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlCreateSystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_CreateSystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_CreateSystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : CreateSystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [CreateSystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeRoleInvalid);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"                     \r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [CreateSystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [CreateSystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                                // \"\"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/CreateSystemUser\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"CreateSystemUser_202104221004935\\\",\\\"x-ais-orderdesc\\\":\\\"CreateSystemUser\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAF3ewLtzy8MApZBjTudok8wd6Uv0qq6w3KvuC4tlIIbY0IlAkkY2KW0\\\"},\\\"body\\\":{\\\"AccountId\\\":[\\\"6080f26e63fa0e0001c4a4ab\\\"],\\\"AuthenInfo\\\":{\\\"Username\\\":\\\"QATester0002\\\",\\\"Password\\\":\\\"bnZkZm5nZXJnbGtkanZlaWdqbmVvZGtsZA==\\\"},\\\"UserRole\\\":[\\\"RootAdmin\\\"]}}\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_CreateSystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_CreateSystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");          \r",
											"                            let AccountId = pm.environment.get(\"accountId_role_other\");\r",
											"                            // console.log(\"AccountId : : : :,\",AccountId)\r",
											"                            let AuthenInfo_Username = pm.environment.get(\"AuthenInfo_Username\"); \r",
											"                            let AuthenInfo_Password = pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\"); \r",
											"                            let UserRole = pm.environment.get(\"UserRole\");\r",
											"\r",
											"\r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);                          \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"\r",
											"    \r",
											"\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPost);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Password).to.eql(AuthenInfo_Password);\r",
											"                            pm.expect(jsonParseRequestObject.body.UserRole[0]).to.eql(UserRole);\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPost);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.AccountId : \" + jsonParseRequestObject.body.AccountId[0] + \" = \" + AccountId);\r",
											"                            console.log(\"resquest.body.Username : \" + jsonParseRequestObject.body.AuthenInfo.Username + \" = \" + AuthenInfo_Username);\r",
											"                            console.log(\"resquest.body.Password : \" + jsonParseRequestObject.body.AuthenInfo.Password + \" = \" + AuthenInfo_Password);\r",
											"                            console.log(\"resquest.body.UserRole : \" + jsonParseRequestObject.body.UserRole[0] + \" = \" + UserRole);\r",
											"                      \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"SystemUserInfo\\\":{\\\"SystemUserId\\\":\\\"6080f26f63fa0e0001c4a4ad\\\",\\\"AccountId\\\":[\\\"6080f26e63fa0e0001c4a4ab\\\"],\\\"AuthenInfo\\\":{\\\"Username\\\":\\\"QATester0002\\\"},\\\"UserRole\\\":[\\\"RootAdmin\\\"],\\\"CreatedDate\\\":\\\"2021-04-22T10:50:07.924+07:00\\\"},\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20100\\\",\\\"Description\\\":\\\"CreateSystemUser is Success\\\"}}\",\r",
											"        \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)  \r",
											"\r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeRoleInvalid);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);  \r",
											"\r",
											"               \r",
											"                            console.log(\"response.SystemUserInfo.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeRoleInvalid);\r",
											"                            console.log(\"response.SystemUserInfo.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 30000); \r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"SystemUserId\");\r",
											"pm.environment.unset(\"AccountId\");\r",
											"\r",
											"}, 40000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"var Username2 = pm.environment.get(\"Username_Customer\");\r",
											"var Password2 = pm.environment.get(\"Password_Customer\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"//set global variable to statusCode 403\r",
											"pm.globals.set(\"statusCodeForbidden\", statusCodeList.statusCodeForbidden);\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"//set global variable to resultCode \"40308\"\r",
											"pm.globals.set(\"resultCodeRoleInvalid\", resultCodeList.resultCodeRoleInvalid);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"\r",
											"//---------------- resultDescriptionErrorList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionErrorList = JSON.parse(pm.environment.get(\"resultDescriptionErrorList\"));\r",
											"//set global variable to resultDescription \"Role Invalid\"\r",
											"pm.globals.set(\"resultDescriptionRoleInvalid\", resultDescriptionErrorList.resultDescriptionRoleInvalid);\r",
											"\r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals SystemUser_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals Account --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"CreateAccountfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount_fail\", HeaderList.Account.x_ais_OrderRef_CreateAccount_fail);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"//---------------- set url Inquirey --------------//\r",
											"//set global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"pm.globals.set(\"urlSystemUserInquirySystemUser\", urlRouteList.SystemUser.urlSystemUserInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username2,\r",
											"                password:Password2\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"        // setUserRole\r",
											"        await pm.environment.set(\"UserRole\" , jsonDataSignin.UserRole[0]);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"\r",
											"        //set Username\r",
											"         let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 6000); \r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_CreateSystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_CreateSystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"AccountId\": [\"{{accountId_role_other}}\"],\r\n  \"AuthenInfo\": {\r\n    \"Username\": \"{{AuthenInfo_Username}}\",\r\n    \"Password\": \"{{Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password}}\"\r\n  },\r\n  \"UserRole\": [\"{{UserRole}}\"]\r\n  \r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/CreateSystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"CreateSystemUser"
									]
								},
								"description": "Type:Desire"
							},
							"response": []
						},
						{
							"name": "CreateSystemUser_TST_F31_0_2_003_Error_Supplier",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"var x_ais_OrderRef_CreateSystemUser_fail = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\")\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Inquiry --------------//\r",
											"//get global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"var urlSystemUserInquirySystemUser = pm.globals.get(\"urlSystemUserInquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"//get global variable to statusCode 403\r",
											"var statusCodeForbidden = pm.globals.get(\"statusCodeForbidden\");\r",
											"//get global variable to resultCode \"40308\"\r",
											"var resultCodeRoleInvalid = pm.globals.get(\"resultCodeRoleInvalid\");\r",
											"//get global variable to resultDescription \"Role Invalid\"\r",
											"var resultDescriptionRoleInvalid = pm.globals.get(\"resultDescriptionRoleInvalid\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"pm.test(\"CreateSystemUser : Status code is \" + statusCodeForbidden, function () {\r",
											"    pm.response.to.have.status(statusCodeForbidden);\r",
											"});\r",
											"\r",
											"pm.test('CreateSystemUser : operationStatus code is '+'\"'+ resultCodeRoleInvalid +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeRoleInvalid);\r",
											"});\r",
											"\r",
											"pm.test('CreateSystemUser : operationStatus description is '+'\"'+ resultDescriptionRoleInvalid+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPost = LogDefaultValue.Other.methodPost;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameCreateSystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlCreateSystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_CreateSystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_CreateSystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : CreateSystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [CreateSystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeRoleInvalid);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"                     \r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [CreateSystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [CreateSystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                                // \"\"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/CreateSystemUser\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"CreateSystemUser_202104221004935\\\",\\\"x-ais-orderdesc\\\":\\\"CreateSystemUser\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAF3ewLtzy8MApZBjTudok8wd6Uv0qq6w3KvuC4tlIIbY0IlAkkY2KW0\\\"},\\\"body\\\":{\\\"AccountId\\\":[\\\"6080f26e63fa0e0001c4a4ab\\\"],\\\"AuthenInfo\\\":{\\\"Username\\\":\\\"QATester0002\\\",\\\"Password\\\":\\\"bnZkZm5nZXJnbGtkanZlaWdqbmVvZGtsZA==\\\"},\\\"UserRole\\\":[\\\"RootAdmin\\\"]}}\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_CreateSystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_CreateSystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");          \r",
											"                            let AccountId = pm.environment.get(\"accountId_role_other\");\r",
											"                            // console.log(\"AccountId : : : :,\",AccountId)\r",
											"                            let AuthenInfo_Username = pm.environment.get(\"AuthenInfo_Username\"); \r",
											"                            let AuthenInfo_Password = pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\"); \r",
											"                            let UserRole = pm.environment.get(\"UserRole\");\r",
											"\r",
											"\r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);                          \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"\r",
											"    \r",
											"\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPost);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Password).to.eql(AuthenInfo_Password);\r",
											"                            pm.expect(jsonParseRequestObject.body.UserRole[0]).to.eql(UserRole);\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPost);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.AccountId : \" + jsonParseRequestObject.body.AccountId[0] + \" = \" + AccountId);\r",
											"                            console.log(\"resquest.body.Username : \" + jsonParseRequestObject.body.AuthenInfo.Username + \" = \" + AuthenInfo_Username);\r",
											"                            console.log(\"resquest.body.Password : \" + jsonParseRequestObject.body.AuthenInfo.Password + \" = \" + AuthenInfo_Password);\r",
											"                            console.log(\"resquest.body.UserRole : \" + jsonParseRequestObject.body.UserRole[0] + \" = \" + UserRole);\r",
											"                      \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"SystemUserInfo\\\":{\\\"SystemUserId\\\":\\\"6080f26f63fa0e0001c4a4ad\\\",\\\"AccountId\\\":[\\\"6080f26e63fa0e0001c4a4ab\\\"],\\\"AuthenInfo\\\":{\\\"Username\\\":\\\"QATester0002\\\"},\\\"UserRole\\\":[\\\"RootAdmin\\\"],\\\"CreatedDate\\\":\\\"2021-04-22T10:50:07.924+07:00\\\"},\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20100\\\",\\\"Description\\\":\\\"CreateSystemUser is Success\\\"}}\",\r",
											"        \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)  \r",
											"\r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeRoleInvalid);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);  \r",
											"\r",
											"               \r",
											"                            console.log(\"response.SystemUserInfo.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeRoleInvalid);\r",
											"                            console.log(\"response.SystemUserInfo.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 30000); \r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"SystemUserId\");\r",
											"pm.environment.unset(\"AccountId\");\r",
											"\r",
											"}, 40000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"var Username2 = pm.environment.get(\"Username_Supplier\");\r",
											"var Password2 = pm.environment.get(\"Password_Supplier\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"//set global variable to statusCode 403\r",
											"pm.globals.set(\"statusCodeForbidden\", statusCodeList.statusCodeForbidden);\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"//set global variable to resultCode \"40308\"\r",
											"pm.globals.set(\"resultCodeRoleInvalid\", resultCodeList.resultCodeRoleInvalid);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"\r",
											"//---------------- resultDescriptionErrorList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionErrorList = JSON.parse(pm.environment.get(\"resultDescriptionErrorList\"));\r",
											"//set global variable to resultDescription \"Role Invalid\"\r",
											"pm.globals.set(\"resultDescriptionRoleInvalid\", resultDescriptionErrorList.resultDescriptionRoleInvalid);\r",
											"\r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals SystemUser_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals Account --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"CreateAccountfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount_fail\", HeaderList.Account.x_ais_OrderRef_CreateAccount_fail);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"//---------------- set url Inquirey --------------//\r",
											"//set global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"pm.globals.set(\"urlSystemUserInquirySystemUser\", urlRouteList.SystemUser.urlSystemUserInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username2,\r",
											"                password:Password2\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"        // setUserRole\r",
											"        await pm.environment.set(\"UserRole\" , jsonDataSignin.UserRole[0]);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"\r",
											"        //set Username\r",
											"         let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 6000); \r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_CreateSystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_CreateSystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"AccountId\": [\"{{accountId_role_other}}\"],\r\n  \"AuthenInfo\": {\r\n    \"Username\": \"{{AuthenInfo_Username}}\",\r\n    \"Password\": \"{{Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password}}\"\r\n  },\r\n  \"UserRole\": [\"{{UserRole}}\"]\r\n  \r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/CreateSystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"CreateSystemUser"
									]
								},
								"description": "Type:Desire"
							},
							"response": []
						}
					]
				},
				{
					"name": "UpdateSystemUser",
					"item": [
						{
							"name": "UpdateSystemUser_TST_F32_1_1_001_Success_RootAdmin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_UserRole\",JSON.stringify(fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_UserRole))\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"UpdateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionUpdateSystemUser\", resultDescriptionSuccessList.resultDescriptionUpdateSystemUser);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"UpdateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_UpdateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_UpdateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"UpdateSystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_UpdateSystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_UpdateSystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"UpdateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UpdateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_UpdateSystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- set url Inquirey --------------//\r",
											"//set global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"pm.globals.set(\"urlSystemUserInquirySystemUser\", urlRouteList.SystemUser.urlSystemUserInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue_Update = fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Update\", userNameValue_Update + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"      \r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"\r",
											"        // console.log('jsonDataCreateAccount : :',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"GetResponse_AccountId\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\")\r",
											"                \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"        // console.log(\"TEST : : : : :\",pm.environment.get(\"GetResponse_SystemUserId\"))\r",
											"      \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 5000); \r",
											"setTimeout(async function(){await CreateAccount();}, 8000);\r",
											"setTimeout(async function(){await CreateSystemUser();}, 10000);  \r",
											"setTimeout(async function(){}, 15000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"UpdateSystemUser_\"\r",
											"var x_ais_OrderRef_UpdateSystemUser = pm.globals.get(\"x_ais_OrderRef_UpdateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"UpdateSystemUser_\"\r",
											"var x_ais_OrderRef_UpdateSystemUser_fail = pm.globals.get(\"x_ais_OrderRef_UpdateSystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"UpdateSystemUser\"\r",
											"var x_ais_OrderDesc_UpdateSystemUser = pm.globals.get(\"x_ais_OrderDesc_UpdateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Inquiry --------------//\r",
											"//get global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"var urlSystemUserInquirySystemUser = pm.globals.get(\"urlSystemUserInquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"UpdateSystemUser is Success\"\r",
											"var resultDescriptionUpdateSystemUser = pm.globals.get(\"resultDescriptionUpdateSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"// console.log(\"jsonData : : :\",jsonData)\r",
											"\r",
											"pm.environment.set(\"GetResponse_SystemUserId_updateSuccess\", jsonData.UserInfo.SystemUserId);\r",
											"\r",
											"// console.log(\"GetResponse_SystemUserId_updateSuccess : : :\",pm.environment.get(\"GetResponse_SystemUserId_updateSuccess\"))\r",
											"\r",
											"pm.test(\"UpdateSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"    pm.response.to.have.status(statusCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('UpdateSystemUser : operationStatus code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('UpdateSystemUser : operationStatus description is '+'\"'+ resultDescriptionUpdateSystemUser+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionUpdateSystemUser);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        // console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        // console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId_updateSuccess\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPut = LogDefaultValue.Other.methodPut;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameUpdateSystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlUpdateSystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_UpdateSystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_UpdateSystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : UpdateSystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [UpdateSystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeSuccess);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionUpdateSystemUser);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        //  console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeSuccess); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionUpdateSystemUser); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        // pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"                        let custom = resultDataLog.custom.endPointSummary;\r",
											"                        // console.log(\"custom : : :\",custom)\r",
											"                        let countCustom = custom.length;\r",
											"\r",
											"                        // [\"db.ClientsCollection\",\"db.ClientsCollection\",\"db.SystemUserCollection\"],\r",
											"                        let dataEndPointName = LogDefaultValue.OtherSummary.stepEndpointSummary.endPointName_UpdateUserSystem;\r",
											"                        // [\"Success:InquirySystemUser was successfully.\",\"Success:InquiryUsername was successfully.\",\"Success:UpdateSystemUser was successfully.\"]\r",
											"                        let dataResponseStatus = LogDefaultValue.OtherSummary.stepEndpointSummary.responseStatus_UpdateUserSystem;\r",
											"                        let countCustomStep = dataEndPointName.length;\r",
											"                        pm.expect(countCustom).to.eql(countCustomStep); \r",
											"                        for(let i=0;i<countCustomStep;i++){\r",
											"                            let no = custom[i].no;\r",
											"                            let valueEndPointName = custom[i].endPointName;\r",
											"                            let valueResponseStatus = custom[i].responseStatus;\r",
											"                            // console.log(\"i\",i);\r",
											"                            // console.log(\"valueEndPointName\",valueEndPointName);\r",
											"                            // console.log(\"valueResponseStatus\",valueResponseStatus);\r",
											"                           \r",
											"                            console.log(\"custom.length : \" + countCustom + \" = \" + countCustomStep );\r",
											"                            console.log(\"custom.no : \" + no + \" = \" + (i+1).toString() );\r",
											"                            console.log(\"custom.endPointName : \" + valueEndPointName + \" = \" + dataEndPointName[i] );\r",
											"                            console.log(\"custom.responseStatus : \" + valueResponseStatus + \" = \" + dataResponseStatus[i] );\r",
											"                           \r",
											"                            pm.expect(no).to.eql((i+1).toString()); \r",
											"                            pm.expect(valueEndPointName).to.eql(dataEndPointName[i]); \r",
											"                            pm.expect(valueResponseStatus).to.eql(dataResponseStatus[i]);  \r",
											"                        }\r",
											"\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [UpdateSystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [UpdateSystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                                // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/Partner/CreatePartner\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"CreatePartner_202103231503693\\\",\\\"x-ais-orderdesc\\\":\\\"CreatePartner\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAFGqEAZd8xJfDiWnmUTQnUILTUz2eudCOyvuC4tlIIbY0IlAkkY2KW0\\\"},\\\"body\\\":{\\\"PartnerName\\\":\\\"QATestPartner1111111\\\",\\\"PartnerType\\\":[\\\"Supplier\\\",\\\"Customer\\\"],\\\"PartnerDetail\\\":{\\\"MerchantContact\\\":\\\"QATestPartner01@ais.co.th\\\",\\\"CPID\\\":\\\"QATestPartner01@ais.co.th\\\"},\\\"Property\\\":{\\\"RouteEngine\\\":false}}}\"\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_UpdateSystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_UpdateSystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\");\r",
											"                            let PartnerId = pm.environment.get(\"GetResponse_PartnerId\");\r",
											"                            let AccountId = pm.environment.get(\"GetResponse_AccountId\");\r",
											"                            let AuthenInfo_Username = pm.environment.get(\"AuthenInfo_Username_Update\"); \r",
											"                            let AuthenInfo_Password = pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password\"); \r",
											"                            let AuthenInfo_SecretKey = pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey\");\r",
											"                            let UserRole = pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_UserRole\");\r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);                            \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPut);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"                            pm.expect(jsonParseRequestObject.body.AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Password).to.eql(AuthenInfo_Password);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.SecretKey).to.eql(AuthenInfo_SecretKey);\r",
											"                            pm.expect(JSON.stringify(jsonParseRequestObject.body.UserRole)).to.eql(UserRole);\r",
											"\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPut);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.AccountId : \" + jsonParseRequestObject.body.AccountId[0] + \" = \" + AccountId);\r",
											"                            console.log(\"resquest.body.Username : \" + jsonParseRequestObject.body.AuthenInfo.Username + \" = \" + AuthenInfo_Username);\r",
											"                            console.log(\"resquest.body.Password : \" + jsonParseRequestObject.body.AuthenInfo.Password + \" = \" + AuthenInfo_Password);\r",
											"                            console.log(\"resquest.body.SecretKey : \" + jsonParseRequestObject.body.AuthenInfo.SecretKey + \" = \" + AuthenInfo_SecretKey);\r",
											"                            console.log(\"resquest.body.UserRole : \" + JSON.stringify(jsonParseRequestObject.body.UserRole) + \" = \" + UserRole);\r",
											"      \r",
											"                          \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"UserInfo\\\":{\\\"SystemUserId\\\":\\\"608153bd63fa0e0001c4c5fb\\\",\\\"AccountId\\\":[\\\"608153bc63fa0e0001c4c5f9\\\"],\\\"PartnerId\\\":\\\"608153bb63fa0e0001c4c5f6\\\",\\\"Username\\\":\\\"QATester0012\\\",\\\"UserRole\\\":[\\\"RootAdmin\\\",\\\"Customer\\\"]},\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20000\\\",\\\"Description\\\":\\\"UpdateSystemUser is Success\\\"}}\",\r",
											"\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)  \r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"                            pm.expect(jsonParseResponseObject.UserInfo.PartnerId).to.eql(PartnerId);\r",
											"                            pm.expect(jsonParseResponseObject.UserInfo.AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseResponseObject.UserInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(JSON.stringify(jsonParseRequestObject.body.UserRole)).to.eql(UserRole);     \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeSuccess);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionUpdateSystemUser);  \r",
											"\r",
											"                            console.log(\"response.UserInfo.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"                            console.log(\"response.UserInfo.PartnerId : \" + jsonParseResponseObject.UserInfo.PartnerId + \" = \" + PartnerId); \r",
											"                            console.log(\"response.UserInfo.AccountId : \" + jsonParseResponseObject.UserInfo.AccountId[0] + \" = \" + AccountId);\r",
											"                            console.log(\"response.UserInfo.Username : \" + jsonParseResponseObject.UserInfo.Username + \" = \" + AuthenInfo_Username);  \r",
											"                            console.log(\"response.UserInfo.UserRole : \" + JSON.stringify(jsonParseRequestObject.body.UserRole) + \" = \" + UserRole);                  \r",
											"                            console.log(\"response.UserInfo.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeSuccess);\r",
											"                            console.log(\"response.UserInfo.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionUpdateSystemUser);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// InquirySystemUser\r",
											"InquirySystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptInquirySystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_InquirySystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_InquirySystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestInquirySystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId_updateSuccess\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsInquirySystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserInquirySystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptInquirySystemUser,\r",
											"            body: httpRequestInquirySystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request InquirySystemUser');\r",
											"        let response = await reqPromise(optionsInquirySystemUser);\r",
											"        let jsonDataInquirySystemUser = await response.json();\r",
											"        console.log('jsonDataInquirySystemUser : : : ',jsonDataInquirySystemUser)\r",
											"    \r",
											"        let operationStatusInquirySystemUser = await jsonDataInquirySystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"InquirySystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('InquirySystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusInquirySystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //InquirySystemUser is Success\r",
											"        pm.test('InquirySystemUser : OperationStatus Description is '+'\"'+ resultDescriptionInquirySystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusInquirySystemUser).to.have.property('Description', resultDescriptionInquirySystemUser);\r",
											"        });\r",
											"\r",
											"        //Check Data\r",
											"        let SystemUserInfo = await jsonDataInquirySystemUser.PartnerInfo;\r",
											"        console.log('SystemUserInfo : : :',SystemUserInfo);\r",
											"        // console.log('jsonData : : :',jsonData);\r",
											"        for(let i=0;i<SystemUserInfo.length;i++){\r",
											"            pm.test('Verify DB Check Data : UpdateSystemUser' , function () {\r",
											"                console.log(\"===============================================================================================================\")    \r",
											"                console.log(\"======== Verify DB Check Data ( Expected = Actual) [UpdateSystemUser] ==================\");  \r",
											"                console.log(\"SystemUserId : \" + SystemUserInfo[i].SystemUserId + \" = \" + pm.environment.get(\"GetResponse_SystemUserId\"));  \r",
											"                console.log(\"AccountId : \" + SystemUserInfo[i].AccountId[0] + \" = \" + pm.environment.get(\"GetResponse_AccountId\"));\r",
											"                console.log(\"Username : \" + SystemUserInfo[i].AuthenInfo.Username + \" = \" + pm.environment.get(\"AuthenInfo_Username_Update\"));\r",
											"                console.log(\"UserRole : \" + JSON.stringify(SystemUserInfo[i].UserRole) + \" = \" + pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_UserRole\"));\r",
											"                console.log(\"Code : \" + operationStatusInquirySystemUser.Code + \" = \" + resultCodeSuccess);\r",
											"                console.log(\"Description : \" + operationStatusInquirySystemUser.Description + \" = \" + resultDescriptionInquirySystemUser);\r",
											"\r",
											"                pm.expect(SystemUserInfo[i].SystemUserId).to.eql(pm.environment.get(\"GetResponse_SystemUserId\"));\r",
											"                pm.expect(SystemUserInfo[i].AccountId[0]).to.eql(pm.environment.get(\"GetResponse_AccountId\"));\r",
											"                pm.expect(SystemUserInfo[i].AuthenInfo.Username).to.eql(pm.environment.get(\"AuthenInfo_Username_Update\"));    \r",
											"                pm.expect(JSON.stringify(SystemUserInfo[i].UserRole)).to.eql(pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_UserRole\"));\r",
											"                pm.expect(jsonDataInquirySystemUser.OperationStatus.Code).to.eql(resultCodeSuccess);\r",
											"                pm.expect(jsonDataInquirySystemUser.OperationStatus.Description).to.eql(resultDescriptionInquirySystemUser);\r",
											"\r",
											"\r",
											"         });\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 20000); \r",
											"setTimeout(function(){CheckLog();}, 50000); \r",
											"setTimeout(function(){InquirySystemUser();}, 60000);\r",
											"setTimeout(function(){RemoveSystemUser();}, 70000);\r",
											"setTimeout(function(){RemoveAccount();}, 80000);  \r",
											"setTimeout(function(){RemovePartner();}, 90000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"AuthenInfo_Username\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Update\");\r",
											"\r",
											"\r",
											"}, 100000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_UpdateSystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_UpdateSystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"SystemUserId\": \"{{GetResponse_SystemUserId}}\",\r\n  \"AccountId\": [\r\n    \"{{GetResponse_AccountId}}\"\r\n  ],\r\n  \"AuthenInfo\": {\r\n    \"Username\": \"{{AuthenInfo_Username_Update}}\",\r\n    \"Password\" : \"{{Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password}}\",\r\n    \"SecretKey\" : \"{{Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey}}\"\r\n  },\r\n  \"UserRole\": {{Value_UpdateSystemUser_TST_F32_1_1_001_UserRole}}\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/UpdateSystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"UpdateSystemUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateSystemUser_TST_F32_1_1_002_Success_SupplierAdmin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"var Username2 = pm.environment.get(\"Username_SupplierAdmin\");\r",
											"var Password2 = pm.environment.get(\"Password_SupplierAdmin\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_UserRole\",JSON.stringify(fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_UserRole))\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"UpdateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionUpdateSystemUser\", resultDescriptionSuccessList.resultDescriptionUpdateSystemUser);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"UpdateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_UpdateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_UpdateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"UpdateSystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_UpdateSystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_UpdateSystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"UpdateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UpdateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_UpdateSystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- set url Inquirey --------------//\r",
											"//set global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"pm.globals.set(\"urlSystemUserInquirySystemUser\", urlRouteList.SystemUser.urlSystemUserInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username2,\r",
											"                password:Password2\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        // setUserRoleUserRole\r",
											"        await pm.environment.set(\"UserRole\" , jsonDataSignin.UserRole);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        //set Username_Update\r",
											"        let userNameValue_Update = fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Update\", userNameValue_Update + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"accountId_role_other\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\")\r",
											"                \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"     \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreateSystemUser();}, 8000);  \r",
											"setTimeout(async function(){}, 9000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"UpdateSystemUser_\"\r",
											"var x_ais_OrderRef_UpdateSystemUser = pm.globals.get(\"x_ais_OrderRef_UpdateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"UpdateSystemUser_\"\r",
											"var x_ais_OrderRef_UpdateSystemUser_fail = pm.globals.get(\"x_ais_OrderRef_UpdateSystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"UpdateSystemUser\"\r",
											"var x_ais_OrderDesc_UpdateSystemUser = pm.globals.get(\"x_ais_OrderDesc_UpdateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Inquiry --------------//\r",
											"//get global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"var urlSystemUserInquirySystemUser = pm.globals.get(\"urlSystemUserInquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"UpdateSystemUser is Success\"\r",
											"var resultDescriptionUpdateSystemUser = pm.globals.get(\"resultDescriptionUpdateSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"GetResponse_SystemUserId_updateSuccess\", jsonData.UserInfo.SystemUserId);\r",
											"\r",
											"pm.test(\"UpdateSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"    pm.response.to.have.status(statusCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('UpdateSystemUser : operationStatus code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('UpdateSystemUser : operationStatus description is '+'\"'+ resultDescriptionUpdateSystemUser+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionUpdateSystemUser);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId_updateSuccess\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPut = LogDefaultValue.Other.methodPut;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameUpdateSystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlUpdateSystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_UpdateSystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_UpdateSystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : UpdateSystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [UpdateSystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeSuccess);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionUpdateSystemUser);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        //  console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeSuccess); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionUpdateSystemUser); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        // pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"                        let custom = resultDataLog.custom.endPointSummary;\r",
											"                        // console.log(\"custom : : :\",custom)\r",
											"                        let countCustom = custom.length;\r",
											"\r",
											"                        // [\"db.ClientsCollection\",\"db.ClientsCollection\",\"db.SystemUserCollection\"],\r",
											"                        let dataEndPointName = LogDefaultValue.OtherSummary.stepEndpointSummary.endPointName_UpdateUserSystem;\r",
											"                        // [\"Success:InquirySystemUser was successfully.\",\"Success:InquiryUsername was successfully.\",\"Success:UpdateSystemUser was successfully.\"]\r",
											"                        let dataResponseStatus = LogDefaultValue.OtherSummary.stepEndpointSummary.responseStatus_UpdateUserSystem;\r",
											"                        let countCustomStep = dataEndPointName.length;\r",
											"                        pm.expect(countCustom).to.eql(countCustomStep); \r",
											"                        for(let i=0;i<countCustomStep;i++){\r",
											"                            let no = custom[i].no;\r",
											"                            let valueEndPointName = custom[i].endPointName;\r",
											"                            let valueResponseStatus = custom[i].responseStatus;\r",
											"                            // console.log(\"i\",i);\r",
											"                            // console.log(\"valueEndPointName\",valueEndPointName);\r",
											"                            // console.log(\"valueResponseStatus\",valueResponseStatus);\r",
											"                           \r",
											"                            console.log(\"custom.length : \" + countCustom + \" = \" + countCustomStep );\r",
											"                            console.log(\"custom.no : \" + no + \" = \" + (i+1).toString() );\r",
											"                            console.log(\"custom.endPointName : \" + valueEndPointName + \" = \" + dataEndPointName[i] );\r",
											"                            console.log(\"custom.responseStatus : \" + valueResponseStatus + \" = \" + dataResponseStatus[i] );\r",
											"                           \r",
											"                            pm.expect(no).to.eql((i+1).toString()); \r",
											"                            pm.expect(valueEndPointName).to.eql(dataEndPointName[i]); \r",
											"                            pm.expect(valueResponseStatus).to.eql(dataResponseStatus[i]);  \r",
											"                        }\r",
											"\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [UpdateSystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [UpdateSystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                                // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/Partner/CreatePartner\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"CreatePartner_202103231503693\\\",\\\"x-ais-orderdesc\\\":\\\"CreatePartner\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAFGqEAZd8xJfDiWnmUTQnUILTUz2eudCOyvuC4tlIIbY0IlAkkY2KW0\\\"},\\\"body\\\":{\\\"PartnerName\\\":\\\"QATestPartner1111111\\\",\\\"PartnerType\\\":[\\\"Supplier\\\",\\\"Customer\\\"],\\\"PartnerDetail\\\":{\\\"MerchantContact\\\":\\\"QATestPartner01@ais.co.th\\\",\\\"CPID\\\":\\\"QATestPartner01@ais.co.th\\\"},\\\"Property\\\":{\\\"RouteEngine\\\":false}}}\"\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_UpdateSystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_UpdateSystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId_updateSuccess\");\r",
											"                            let PartnerId = pm.environment.get(\"partnerId_role_other\");\r",
											"                            let AccountId = pm.environment.get(\"accountId_role_other\");\r",
											"                            let AuthenInfo_Username = pm.environment.get(\"AuthenInfo_Username_Update\"); \r",
											"                            let AuthenInfo_Password = pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password\"); \r",
											"                            let AuthenInfo_SecretKey = pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey\");\r",
											"                            let UserRole = pm.environment.get(\"UserRole\");\r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);                            \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPut);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"                            pm.expect(jsonParseRequestObject.body.AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Password).to.eql(AuthenInfo_Password);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.SecretKey).to.eql(AuthenInfo_SecretKey);\r",
											"                            pm.expect(jsonParseRequestObject.body.UserRole).to.eql(UserRole);\r",
											"\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPut);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.AccountId : \" + jsonParseRequestObject.body.AccountId[0] + \" = \" + AccountId);\r",
											"                            console.log(\"resquest.body.Username : \" + jsonParseRequestObject.body.AuthenInfo.Username + \" = \" + AuthenInfo_Username);\r",
											"                            console.log(\"resquest.body.Password : \" + jsonParseRequestObject.body.AuthenInfo.Password + \" = \" + AuthenInfo_Password);\r",
											"                            console.log(\"resquest.body.SecretKey : \" + jsonParseRequestObject.body.AuthenInfo.SecretKey + \" = \" + AuthenInfo_SecretKey);\r",
											"                            console.log(\"resquest.body.UserRole : \" + jsonParseRequestObject.body.UserRole + \" = \" + UserRole);\r",
											"      \r",
											"                          \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"UserInfo\\\":{\\\"SystemUserId\\\":\\\"608153bd63fa0e0001c4c5fb\\\",\\\"AccountId\\\":[\\\"608153bc63fa0e0001c4c5f9\\\"],\\\"PartnerId\\\":\\\"608153bb63fa0e0001c4c5f6\\\",\\\"Username\\\":\\\"QATester0012\\\",\\\"UserRole\\\":[\\\"RootAdmin\\\",\\\"Customer\\\"]},\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20000\\\",\\\"Description\\\":\\\"UpdateSystemUser is Success\\\"}}\",\r",
											"\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)  \r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"                            pm.expect(jsonParseResponseObject.UserInfo.PartnerId).to.eql(PartnerId);\r",
											"                            pm.expect(jsonParseResponseObject.UserInfo.AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseResponseObject.UserInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseRequestObject.body.UserRole).to.eql(UserRole);     \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeSuccess);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionUpdateSystemUser);  \r",
											"\r",
											"                            console.log(\"response.UserInfo.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"                            console.log(\"response.UserInfo.PartnerId : \" + jsonParseResponseObject.UserInfo.PartnerId + \" = \" + PartnerId); \r",
											"                            console.log(\"response.UserInfo.AccountId : \" + jsonParseResponseObject.UserInfo.AccountId[0] + \" = \" + AccountId);\r",
											"                            console.log(\"response.UserInfo.Username : \" + jsonParseResponseObject.UserInfo.Username + \" = \" + AuthenInfo_Username);  \r",
											"                            console.log(\"response.UserInfo.UserRole : \" + jsonParseRequestObject.body.UserRole + \" = \" + UserRole);                  \r",
											"                            console.log(\"response.UserInfo.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeSuccess);\r",
											"                            console.log(\"response.UserInfo.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionUpdateSystemUser);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// InquirySystemUser\r",
											"InquirySystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptInquirySystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_InquirySystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_InquirySystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestInquirySystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsInquirySystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserInquirySystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptInquirySystemUser,\r",
											"            body: httpRequestInquirySystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request InquirySystemUser');\r",
											"        let response = await reqPromise(optionsInquirySystemUser);\r",
											"        let jsonDataInquirySystemUser = await response.json();\r",
											"        console.log('jsonDataInquirySystemUser : : : ',jsonDataInquirySystemUser)\r",
											"    \r",
											"        let operationStatusInquirySystemUser = await jsonDataInquirySystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"InquirySystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('InquirySystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusInquirySystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //InquirySystemUser is Success\r",
											"        pm.test('InquirySystemUser : OperationStatus Description is '+'\"'+ resultDescriptionInquirySystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusInquirySystemUser).to.have.property('Description', resultDescriptionInquirySystemUser);\r",
											"        });\r",
											"\r",
											"        //Check Data\r",
											"        let SystemUserInfo = await jsonDataInquirySystemUser.PartnerInfo;\r",
											"        console.log('SystemUserInfo : : :',SystemUserInfo);\r",
											"        // console.log('jsonData : : :',jsonData);\r",
											"        for(let i=0;i<SystemUserInfo.length;i++){\r",
											"            pm.test('Verify DB Check Data : UpdateSystemUser' , function () {\r",
											"                console.log(\"===============================================================================================================\")    \r",
											"                console.log(\"======== Verify DB Check Data ( Expected = Actual) [UpdateSystemUser] ==================\");  \r",
											"                console.log(\"SystemUserId : \" + SystemUserInfo[i].SystemUserId + \" = \" + pm.environment.get(\"GetResponse_SystemUserId_updateSuccess\"));  \r",
											"                console.log(\"AccountId : \" + SystemUserInfo[i].AccountId[0] + \" = \" + pm.environment.get(\"accountId_role_other\"));\r",
											"                console.log(\"Username : \" + SystemUserInfo[i].AuthenInfo.Username + \" = \" + pm.environment.get(\"AuthenInfo_Username_Update\"));\r",
											"                console.log(\"UserRole : \" + SystemUserInfo[i].UserRole + \" = \" + pm.environment.get(\"UserRole\"));\r",
											"                console.log(\"Code : \" + operationStatusInquirySystemUser.Code + \" = \" + resultCodeSuccess);\r",
											"                console.log(\"Description : \" + operationStatusInquirySystemUser.Description + \" = \" + resultDescriptionInquirySystemUser);\r",
											"\r",
											"                pm.expect(SystemUserInfo[i].SystemUserId).to.eql(pm.environment.get(\"GetResponse_SystemUserId_updateSuccess\"));\r",
											"                pm.expect(SystemUserInfo[i].AccountId[0]).to.eql(pm.environment.get(\"accountId_role_other\"));\r",
											"                pm.expect(SystemUserInfo[i].AuthenInfo.Username).to.eql(pm.environment.get(\"AuthenInfo_Username_Update\"));    \r",
											"                pm.expect(SystemUserInfo[i].UserRole).to.eql(pm.environment.get(\"UserRole\"));\r",
											"                pm.expect(jsonDataInquirySystemUser.OperationStatus.Code).to.eql(resultCodeSuccess);\r",
											"                pm.expect(jsonDataInquirySystemUser.OperationStatus.Description).to.eql(resultDescriptionInquirySystemUser);\r",
											"\r",
											"\r",
											"         });\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 10000); \r",
											"setTimeout(function(){CheckLog();}, 40000); \r",
											"setTimeout(function(){InquirySystemUser();}, 50000);\r",
											"setTimeout(function(){RemoveSystemUser();}, 60000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey\");\r",
											"pm.environment.unset(\"UserRole\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"AccessToken2\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Update\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId_updateSuccess\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"}, 90000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_UpdateSystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_UpdateSystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"SystemUserId\": \"{{GetResponse_SystemUserId}}\",\r\n  \"AccountId\": [\r\n    \"{{accountId_role_other}}\"\r\n  ],\r\n  \"AuthenInfo\": {\r\n    \"Username\": \"{{AuthenInfo_Username_Update}}\",\r\n    \"Password\" : \"{{Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password}}\",\r\n    \"SecretKey\" : \"{{Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey}}\"\r\n  },\r\n  \"UserRole\": [\"{{UserRole}}\"]\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/UpdateSystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"UpdateSystemUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateSystemUser_TST_F32_1_1_003_Success_CustomerAdmin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"var Username2 = pm.environment.get(\"Username_CustomerAdmin\");\r",
											"var Password2 = pm.environment.get(\"Password_CustomerAdmin\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_UserRole\",JSON.stringify(fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_UserRole))\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"UpdateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionUpdateSystemUser\", resultDescriptionSuccessList.resultDescriptionUpdateSystemUser);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"UpdateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_UpdateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_UpdateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"UpdateSystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_UpdateSystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_UpdateSystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"UpdateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UpdateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_UpdateSystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- set url Inquirey --------------//\r",
											"//set global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"pm.globals.set(\"urlSystemUserInquirySystemUser\", urlRouteList.SystemUser.urlSystemUserInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username2,\r",
											"                password:Password2\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"UserRole\" , jsonDataSignin.UserRole);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue_Update = fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Update\", userNameValue_Update + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"accountId_role_other\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\")\r",
											"                \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"     \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreateSystemUser();}, 8000);  \r",
											"setTimeout(async function(){}, 9000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"UpdateSystemUser_\"\r",
											"var x_ais_OrderRef_UpdateSystemUser = pm.globals.get(\"x_ais_OrderRef_UpdateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"UpdateSystemUser_\"\r",
											"var x_ais_OrderRef_UpdateSystemUser_fail = pm.globals.get(\"x_ais_OrderRef_UpdateSystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"UpdateSystemUser\"\r",
											"var x_ais_OrderDesc_UpdateSystemUser = pm.globals.get(\"x_ais_OrderDesc_UpdateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Inquiry --------------//\r",
											"//get global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"var urlSystemUserInquirySystemUser = pm.globals.get(\"urlSystemUserInquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"UpdateSystemUser is Success\"\r",
											"var resultDescriptionUpdateSystemUser = pm.globals.get(\"resultDescriptionUpdateSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"GetResponse_SystemUserId_updateSuccess\", jsonData.UserInfo.SystemUserId);\r",
											"\r",
											"pm.test(\"UpdateSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"    pm.response.to.have.status(statusCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('UpdateSystemUser : operationStatus code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('UpdateSystemUser : operationStatus description is '+'\"'+ resultDescriptionUpdateSystemUser+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionUpdateSystemUser);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId_updateSuccess\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPut = LogDefaultValue.Other.methodPut;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameUpdateSystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlUpdateSystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_UpdateSystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_UpdateSystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : UpdateSystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [UpdateSystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeSuccess);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionUpdateSystemUser);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        //  console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeSuccess); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionUpdateSystemUser); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        // pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"                        let custom = resultDataLog.custom.endPointSummary;\r",
											"                        // console.log(\"custom : : :\",custom)\r",
											"                        let countCustom = custom.length;\r",
											"\r",
											"                        // [\"db.ClientsCollection\",\"db.ClientsCollection\",\"db.SystemUserCollection\"],\r",
											"                        let dataEndPointName = LogDefaultValue.OtherSummary.stepEndpointSummary.endPointName_UpdateUserSystem;\r",
											"                        // [\"Success:InquirySystemUser was successfully.\",\"Success:InquiryUsername was successfully.\",\"Success:UpdateSystemUser was successfully.\"]\r",
											"                        let dataResponseStatus = LogDefaultValue.OtherSummary.stepEndpointSummary.responseStatus_UpdateUserSystem;\r",
											"                        let countCustomStep = dataEndPointName.length;\r",
											"                        pm.expect(countCustom).to.eql(countCustomStep); \r",
											"                        for(let i=0;i<countCustomStep;i++){\r",
											"                            let no = custom[i].no;\r",
											"                            let valueEndPointName = custom[i].endPointName;\r",
											"                            let valueResponseStatus = custom[i].responseStatus;\r",
											"                            // console.log(\"i\",i);\r",
											"                            // console.log(\"valueEndPointName\",valueEndPointName);\r",
											"                            // console.log(\"valueResponseStatus\",valueResponseStatus);\r",
											"                           \r",
											"                            console.log(\"custom.length : \" + countCustom + \" = \" + countCustomStep );\r",
											"                            console.log(\"custom.no : \" + no + \" = \" + (i+1).toString() );\r",
											"                            console.log(\"custom.endPointName : \" + valueEndPointName + \" = \" + dataEndPointName[i] );\r",
											"                            console.log(\"custom.responseStatus : \" + valueResponseStatus + \" = \" + dataResponseStatus[i] );\r",
											"                           \r",
											"                            pm.expect(no).to.eql((i+1).toString()); \r",
											"                            pm.expect(valueEndPointName).to.eql(dataEndPointName[i]); \r",
											"                            pm.expect(valueResponseStatus).to.eql(dataResponseStatus[i]);  \r",
											"                        }\r",
											"\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [UpdateSystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [UpdateSystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                                // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/Partner/CreatePartner\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"CreatePartner_202103231503693\\\",\\\"x-ais-orderdesc\\\":\\\"CreatePartner\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAFGqEAZd8xJfDiWnmUTQnUILTUz2eudCOyvuC4tlIIbY0IlAkkY2KW0\\\"},\\\"body\\\":{\\\"PartnerName\\\":\\\"QATestPartner1111111\\\",\\\"PartnerType\\\":[\\\"Supplier\\\",\\\"Customer\\\"],\\\"PartnerDetail\\\":{\\\"MerchantContact\\\":\\\"QATestPartner01@ais.co.th\\\",\\\"CPID\\\":\\\"QATestPartner01@ais.co.th\\\"},\\\"Property\\\":{\\\"RouteEngine\\\":false}}}\"\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_UpdateSystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_UpdateSystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId_updateSuccess\");\r",
											"                            let PartnerId = pm.environment.get(\"partnerId_role_other\");\r",
											"                            let AccountId = pm.environment.get(\"accountId_role_other\");\r",
											"                            let AuthenInfo_Username = pm.environment.get(\"AuthenInfo_Username_Update\"); \r",
											"                            let AuthenInfo_Password = pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password\"); \r",
											"                            let AuthenInfo_SecretKey = pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey\");\r",
											"                            let UserRole = pm.environment.get(\"UserRole\");\r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);                            \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPut);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"                            pm.expect(jsonParseRequestObject.body.AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Password).to.eql(AuthenInfo_Password);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.SecretKey).to.eql(AuthenInfo_SecretKey);\r",
											"                            pm.expect(jsonParseRequestObject.body.UserRole).to.eql(UserRole);\r",
											"\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPut);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.AccountId : \" + jsonParseRequestObject.body.AccountId[0] + \" = \" + AccountId);\r",
											"                            console.log(\"resquest.body.Username : \" + jsonParseRequestObject.body.AuthenInfo.Username + \" = \" + AuthenInfo_Username);\r",
											"                            console.log(\"resquest.body.Password : \" + jsonParseRequestObject.body.AuthenInfo.Password + \" = \" + AuthenInfo_Password);\r",
											"                            console.log(\"resquest.body.SecretKey : \" + jsonParseRequestObject.body.AuthenInfo.SecretKey + \" = \" + AuthenInfo_SecretKey);\r",
											"                            console.log(\"resquest.body.UserRole : \" + jsonParseRequestObject.body.UserRole + \" = \" + UserRole);\r",
											"      \r",
											"                          \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"UserInfo\\\":{\\\"SystemUserId\\\":\\\"608153bd63fa0e0001c4c5fb\\\",\\\"AccountId\\\":[\\\"608153bc63fa0e0001c4c5f9\\\"],\\\"PartnerId\\\":\\\"608153bb63fa0e0001c4c5f6\\\",\\\"Username\\\":\\\"QATester0012\\\",\\\"UserRole\\\":[\\\"RootAdmin\\\",\\\"Customer\\\"]},\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20000\\\",\\\"Description\\\":\\\"UpdateSystemUser is Success\\\"}}\",\r",
											"\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)  \r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"                            pm.expect(jsonParseResponseObject.UserInfo.PartnerId).to.eql(PartnerId);\r",
											"                            pm.expect(jsonParseResponseObject.UserInfo.AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseResponseObject.UserInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseRequestObject.body.UserRole).to.eql(UserRole);     \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeSuccess);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionUpdateSystemUser);  \r",
											"\r",
											"                            console.log(\"response.UserInfo.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"                            console.log(\"response.UserInfo.PartnerId : \" + jsonParseResponseObject.UserInfo.PartnerId + \" = \" + PartnerId); \r",
											"                            console.log(\"response.UserInfo.AccountId : \" + jsonParseResponseObject.UserInfo.AccountId[0] + \" = \" + AccountId);\r",
											"                            console.log(\"response.UserInfo.Username : \" + jsonParseResponseObject.UserInfo.Username + \" = \" + AuthenInfo_Username);  \r",
											"                            console.log(\"response.UserInfo.UserRole : \" + jsonParseRequestObject.body.UserRole + \" = \" + UserRole);                  \r",
											"                            console.log(\"response.UserInfo.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeSuccess);\r",
											"                            console.log(\"response.UserInfo.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionUpdateSystemUser);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// InquirySystemUser\r",
											"InquirySystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptInquirySystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_InquirySystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_InquirySystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestInquirySystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsInquirySystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserInquirySystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptInquirySystemUser,\r",
											"            body: httpRequestInquirySystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request InquirySystemUser');\r",
											"        let response = await reqPromise(optionsInquirySystemUser);\r",
											"        let jsonDataInquirySystemUser = await response.json();\r",
											"        console.log('jsonDataInquirySystemUser : : : ',jsonDataInquirySystemUser)\r",
											"    \r",
											"        let operationStatusInquirySystemUser = await jsonDataInquirySystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"InquirySystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('InquirySystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusInquirySystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //InquirySystemUser is Success\r",
											"        pm.test('InquirySystemUser : OperationStatus Description is '+'\"'+ resultDescriptionInquirySystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusInquirySystemUser).to.have.property('Description', resultDescriptionInquirySystemUser);\r",
											"        });\r",
											"\r",
											"        //Check Data\r",
											"        let SystemUserInfo = await jsonDataInquirySystemUser.PartnerInfo;\r",
											"        console.log('SystemUserInfo : : :',SystemUserInfo);\r",
											"        // console.log('jsonData : : :',jsonData);\r",
											"        for(let i=0;i<SystemUserInfo.length;i++){\r",
											"            pm.test('Verify DB Check Data : UpdateSystemUser' , function () {\r",
											"                console.log(\"===============================================================================================================\")    \r",
											"                console.log(\"======== Verify DB Check Data ( Expected = Actual) [UpdateSystemUser] ==================\");  \r",
											"                console.log(\"SystemUserId : \" + SystemUserInfo[i].SystemUserId + \" = \" + pm.environment.get(\"GetResponse_SystemUserId_updateSuccess\"));  \r",
											"                console.log(\"AccountId : \" + SystemUserInfo[i].AccountId[0] + \" = \" + pm.environment.get(\"accountId_role_other\"));\r",
											"                console.log(\"Username : \" + SystemUserInfo[i].AuthenInfo.Username + \" = \" + pm.environment.get(\"AuthenInfo_Username_Update\"));\r",
											"                console.log(\"UserRole : \" + SystemUserInfo[i].UserRole + \" = \" + pm.environment.get(\"UserRole\"));\r",
											"                console.log(\"Code : \" + operationStatusInquirySystemUser.Code + \" = \" + resultCodeSuccess);\r",
											"                console.log(\"Description : \" + operationStatusInquirySystemUser.Description + \" = \" + resultDescriptionInquirySystemUser);\r",
											"\r",
											"                pm.expect(SystemUserInfo[i].SystemUserId).to.eql(pm.environment.get(\"GetResponse_SystemUserId_updateSuccess\"));\r",
											"                pm.expect(SystemUserInfo[i].AccountId[0]).to.eql(pm.environment.get(\"accountId_role_other\"));\r",
											"                pm.expect(SystemUserInfo[i].AuthenInfo.Username).to.eql(pm.environment.get(\"AuthenInfo_Username_Update\"));    \r",
											"                pm.expect(SystemUserInfo[i].UserRole).to.eql(pm.environment.get(\"UserRole\"));\r",
											"                pm.expect(jsonDataInquirySystemUser.OperationStatus.Code).to.eql(resultCodeSuccess);\r",
											"                pm.expect(jsonDataInquirySystemUser.OperationStatus.Description).to.eql(resultDescriptionInquirySystemUser);\r",
											"\r",
											"\r",
											"         });\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 10000); \r",
											"setTimeout(function(){CheckLog();}, 40000); \r",
											"setTimeout(function(){InquirySystemUser();}, 50000);\r",
											"setTimeout(function(){RemoveSystemUser();}, 60000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey\");\r",
											"pm.environment.unset(\"UserRole\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"AccessToken2\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Update\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId_updateSuccess\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"}, 90000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_UpdateSystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_UpdateSystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"SystemUserId\": \"{{GetResponse_SystemUserId}}\",\r\n  \"AccountId\": [\r\n    \"{{accountId_role_other}}\"\r\n  ],\r\n  \"AuthenInfo\": {\r\n    \"Username\": \"{{AuthenInfo_Username_Update}}\",\r\n    \"Password\" : \"{{Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password}}\",\r\n    \"SecretKey\" : \"{{Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey}}\"\r\n  },\r\n  \"UserRole\": [\"{{UserRole}}\"]\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/UpdateSystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"UpdateSystemUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateSystemUser_TST_F32_0_2_002_Error_UpdateSystemUserNotFound",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_0_2_002_SystemUserId\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_0_2_002_SystemUserId)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_UserRole\",JSON.stringify(fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_UserRole))\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"//set global variable to statusCode 404\r",
											"pm.globals.set(\"statusCodeNotFound\", statusCodeList.statusCodeNotFound);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"//set global variable to resultCode \"40400\"\r",
											"pm.globals.set(\"resultCodeNotFound\", resultCodeList.resultCodeNotFound);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"UpdateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionUpdateSystemUser\", resultDescriptionSuccessList.resultDescriptionUpdateSystemUser);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionErrorList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionErrorList = JSON.parse(pm.environment.get(\"resultDescriptionErrorList\"));\r",
											"//set global variable to resultDescription \"The SystemUserId \"\r",
											"pm.globals.set(\"resultDescriptionErrorTheSystemUserId\", resultDescriptionErrorList.resultDescriptionErrorTheSystemUserId);\r",
											"//set global variable to resultDescription \" is Not Found\"\r",
											"pm.globals.set(\"resultDescriptionErrorTheThingIsNotFound\", resultDescriptionErrorList.resultDescriptionErrorTheThingIsNotFound);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"UpdateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_UpdateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_UpdateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"UpdateSystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_UpdateSystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_UpdateSystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"UpdateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UpdateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_UpdateSystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Create\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"      \r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"\r",
											"        console.log('jsonDataCreateAccount : :',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"GetResponse_AccountId\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username_Create\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\")\r",
											"                \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"        // console.log(\"TEST : : : : :\",pm.environment.get(\"GetResponse_SystemUserId\"))\r",
											"      \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 5000); \r",
											"setTimeout(async function(){await CreateAccount();}, 6000);\r",
											"setTimeout(async function(){await CreateSystemUser();}, 7000);  \r",
											"setTimeout(async function(){}, 8000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"UpdateSystemUser_\"\r",
											"var x_ais_OrderRef_UpdateSystemUser = pm.globals.get(\"x_ais_OrderRef_UpdateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"UpdateSystemUser_\"\r",
											"var x_ais_OrderRef_UpdateSystemUser_fail = pm.globals.get(\"x_ais_OrderRef_UpdateSystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"UpdateSystemUser\"\r",
											"var x_ais_OrderDesc_UpdateSystemUser = pm.globals.get(\"x_ais_OrderDesc_UpdateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"\r",
											"\r",
											"//get global variable to statusCode 404\r",
											"var statusCodeNotFound = pm.globals.get(\"statusCodeNotFound\");\r",
											"//get global variable to resultCode \"40400\"\r",
											"var resultCodeNotFound = pm.globals.get(\"resultCodeNotFound\");\r",
											"//get global variable to resultDescription resultDescriptionErrorTheSystemUserId\r",
											"var resultDescriptionErrorTheSystemUserId = pm.globals.get(\"resultDescriptionErrorTheSystemUserId\");\r",
											"//get global variable to resultDescription \" is Not Found\"\r",
											"var resultDescriptionErrorTheThingIsNotFound = pm.globals.get(\"resultDescriptionErrorTheThingIsNotFound\");\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"UpdateSystemUser : Status code is \" + statusCodeNotFound, function () {\r",
											"    pm.response.to.have.status(statusCodeNotFound);\r",
											"});\r",
											"\r",
											"pm.test('UpdateSystemUser : operationStatus code is '+'\"'+ resultCodeNotFound +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeNotFound);\r",
											"});\r",
											"\r",
											"pm.test('UpdateSystemUser : operationStatus description is '+'\"'+ resultDescriptionErrorTheSystemUserId + pm.environment.get(\"Value_UpdateSystemUser_TST_F32_0_2_002_SystemUserId\") + resultDescriptionErrorTheThingIsNotFound+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionErrorTheSystemUserId + pm.environment.get(\"Value_UpdateSystemUser_TST_F32_0_2_002_SystemUserId\") + resultDescriptionErrorTheThingIsNotFound);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        // console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        // console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPut = LogDefaultValue.Other.methodPut;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameUpdateSystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlUpdateSystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_UpdateSystemUser_fail + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_UpdateSystemUser_fail + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                pm.test(\"Check Summary Log : UpdateSystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [UpdateSystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeNotFound);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionErrorTheSystemUserId + pm.environment.get(\"Value_UpdateSystemUser_TST_F32_0_2_002_SystemUserId\") + resultDescriptionErrorTheThingIsNotFound);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        //  console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeNotFound); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionErrorTheSystemUserId + pm.environment.get(\"Value_UpdateSystemUser_TST_F32_0_2_002_SystemUserId\") + resultDescriptionErrorTheThingIsNotFound); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        // pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"                        let custom = resultDataLog.custom.endPointSummary;\r",
											"                        // console.log(\"custom : : :\",custom)\r",
											"                        let countCustom = custom.length;\r",
											"\r",
											"                        //[\"db.ClientsCollection\"]\r",
											"                        let dataEndPointName = LogDefaultValue.OtherSummary.stepEndpointSummary.endPointName_UpdateUserSystem_002;\r",
											"                        //[\"Success:InquirySystemUser was successfully.\"]\r",
											"                        let dataResponseStatus = LogDefaultValue.OtherSummary.stepEndpointSummary.responseStatus_UpdateUserSystem_002;\r",
											"                        let countCustomStep = dataEndPointName.length;\r",
											"                        pm.expect(countCustom).to.eql(countCustomStep); \r",
											"                        for(let i=0;i<countCustomStep;i++){\r",
											"                            let no = custom[i].no;\r",
											"                            let valueEndPointName = custom[i].endPointName;\r",
											"                            let valueResponseStatus = custom[i].responseStatus;\r",
											"                            // console.log(\"i\",i);\r",
											"                            // console.log(\"valueEndPointName\",valueEndPointName);\r",
											"                            // console.log(\"valueResponseStatus\",valueResponseStatus);\r",
											"                           \r",
											"                            console.log(\"custom.length : \" + countCustom + \" = \" + countCustomStep );\r",
											"                            console.log(\"custom.no : \" + no + \" = \" + (i+1).toString() );\r",
											"                            console.log(\"custom.endPointName : \" + valueEndPointName + \" = \" + dataEndPointName[i] );\r",
											"                            console.log(\"custom.responseStatus : \" + valueResponseStatus + \" = \" + dataResponseStatus[i] );\r",
											"                           \r",
											"                            pm.expect(no).to.eql((i+1).toString()); \r",
											"                            pm.expect(valueEndPointName).to.eql(dataEndPointName[i]); \r",
											"                            pm.expect(valueResponseStatus).to.eql(dataResponseStatus[i]);  \r",
											"                        }\r",
											"\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [UpdateSystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [UpdateSystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                                // \\\"requestObject\\\":\\\"{ \\\\\\\"url\\\\\\\":\\\\\\\"mg-iot.sandais.com/api/v1/SystemUser/UpdateSystemUser\\\\\\\", \\\\\\\"method\\\\\\\":\\\\\\\"PUT\\\\\\\", \\\\\\\"headers\\\\\\\":{ \\\\\\\"x-ais-username\\\\\\\":\\\\\\\"AisPartner\\\\\\\", \\\\\\\"x-ais-orderref\\\\\\\":\\\\\\\"UpdateSystemUserfail_202105191305217\\\\\\\", \\\\\\\"x-ais-orderdesc\\\\\\\":\\\\\\\"UpdateSystemUser\\\\\\\", \\\\\\\"x-ais-accesstoken\\\\\\\":\\\\\\\"Bearer ibnxnVhs5Rx3IwglWv7/gVA/1TpQnKqAOBAADlRDvYhOpXwmlpYOEb5yfY5aZpoj0YRWRZM26i9HOqtc1fc1jpNDOK5JpISttmMEy59g2py7nLWonDe2YW2OPRGWSowk6+9ZihLU1fZ5d5jAqqrZaKlOAAI3N1TXDNLsHuKcOJMcERbCcaMqRaku+MY4/kzE+eyIdkfwwbjT91S2VQq+Wk2ooMWuLk6/DHVJhwbMP7YiUGe8yn7Zxc+c2ElOlmPuZX+Dpa9K434HGIfmF+eiNg==\\\\\\\" }, \\\\\\\"body\\\\\\\":{ \\\\\\\"SystemUserId\\\\\\\":\\\\\\\"5faba7ce6102c6000138a1f9\\\\\\\", \\\\\\\"AccountId\\\\\\\":[ \\\\\\\"60a4addd0b133b00013232b1\\\\\\\" ], \\\\\\\"AuthenInfo\\\\\\\":{ \\\\\\\"Username\\\\\\\":\\\\\\\"QATester1\\\\\\\", \\\\\\\"Password\\\\\\\":\\\\\\\"bWludHRlc3QwMDE=\\\\\\\", \\\\\\\"SecretKey\\\\\\\":\\\\\\\"ZGJiYmZkM2EtMTVhOS00ZTY0LTlhYWEtOGQyYjk1ZWZmZmI0\\\\\\\" }, \\\\\\\"UserRole\\\\\\\":[ \\\\\\\"RootAdmin\\\\\\\", \\\\\\\"Customer\\\\\\\" ] } }\\\"\r",
											"                            \r",
											"                            let url = urlCheckLog + requestObjectUrlStaging;  \r",
											"                            let x_ais_orderref = x_ais_OrderRef_UpdateSystemUser_fail + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_UpdateSystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");\r",
											"                            let SystemUserId = pm.environment.get(\"Value_UpdateSystemUser_TST_F32_0_2_002_SystemUserId\");\r",
											"                            let AccountId = pm.environment.get(\"GetResponse_AccountId\");\r",
											"                            let AuthenInfo_Username = pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username\"); \r",
											"                            let AuthenInfo_Password = pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password\"); \r",
											"                            let AuthenInfo_SecretKey = pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey\");\r",
											"                            let UserRole = pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_UserRole\");\r",
											"                          \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);                        \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPut);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"                            pm.expect(jsonParseRequestObject.body.AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Password).to.eql(AuthenInfo_Password);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.SecretKey).to.eql(AuthenInfo_SecretKey);\r",
											"                            pm.expect(JSON.stringify(jsonParseRequestObject.body.UserRole)).to.eql(UserRole);\r",
											"                            \r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPut);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"                            console.log(\"resquest.body.AccountId : \" + jsonParseRequestObject.body.AccountId[0] + \" = \" + AccountId);\r",
											"                            console.log(\"resquest.body.Username : \" + jsonParseRequestObject.body.AuthenInfo.Username + \" = \" + AuthenInfo_Username);\r",
											"                            console.log(\"resquest.body.Password : \" + jsonParseRequestObject.body.AuthenInfo.Password + \" = \" + AuthenInfo_Password);\r",
											"                            console.log(\"resquest.body.SecretKey : \" + jsonParseRequestObject.body.AuthenInfo.SecretKey + \" = \" + AuthenInfo_SecretKey);\r",
											"                            console.log(\"resquest.body.UserRole : \" + JSON.stringify(jsonParseRequestObject.body.UserRole) + \" = \" + UserRole);\r",
											"                         \r",
											"                            // check responseObject\r",
											"                            // \\\"responseObject\\\":\\\"{ \\\\\\\"OperationStatus\\\\\\\":{ \\\\\\\"Code\\\\\\\":\\\\\\\"40400\\\\\\\", \\\\\\\"Description\\\\\\\":\\\\\\\"The SystemUserId 5faba7ce6102c6000138a1f9 is Not Found\\\\\\\" } }\\\"\r",
											"              \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)       \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeNotFound);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionErrorTheSystemUserId + pm.environment.get(\"Value_UpdateSystemUser_TST_F32_0_2_002_SystemUserId\") + resultDescriptionErrorTheThingIsNotFound);  \r",
											"\r",
											"                            console.log(\"response.UserInfo.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeNotFound);\r",
											"                            console.log(\"response.UserInfo.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionErrorTheSystemUserId + pm.environment.get(\"Value_UpdateSystemUser_TST_F32_0_2_002_SystemUserId\") + resultDescriptionErrorTheThingIsNotFound);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 30000); \r",
											"setTimeout(function(){RemoveSystemUser();}, 40000);\r",
											"setTimeout(function(){RemoveAccount();}, 50000);  \r",
											"setTimeout(function(){RemovePartner();}, 60000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_0_2_002_SystemUserId\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Create\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"}, 70000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_UpdateSystemUser_fail}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_UpdateSystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"SystemUserId\": \"{{Value_UpdateSystemUser_TST_F32_0_2_002_SystemUserId}}\",\r\n  \"AccountId\": [\r\n    \"{{GetResponse_AccountId}}\"\r\n  ],\r\n  \"AuthenInfo\": {\r\n    \"Username\": \"{{Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username}}\",\r\n    \"Password\" : \"{{Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password}}\",\r\n    \"SecretKey\" : \"{{Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey}}\"\r\n  },\r\n  \"UserRole\": {{Value_UpdateSystemUser_TST_F32_1_1_001_UserRole}}\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/UpdateSystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"UpdateSystemUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateSystemUser_TST_F32_0_2_003_Error_Supplier",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"var Username2 = pm.environment.get(\"Username_Supplier\");\r",
											"var Password2 = pm.environment.get(\"Password_Supplier\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_UserRole\",JSON.stringify(fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_UserRole))\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"//set global variable to statusCode 403\r",
											"pm.globals.set(\"statusCodeForbidden\", statusCodeList.statusCodeForbidden);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"//set global variable to resultCode \"40308\"\r",
											"pm.globals.set(\"resultCodeRoleInvalid\", resultCodeList.resultCodeRoleInvalid);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"UpdateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionUpdateSystemUser\", resultDescriptionSuccessList.resultDescriptionUpdateSystemUser);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"\r",
											"//---------------- resultDescriptionErrorList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionErrorList = JSON.parse(pm.environment.get(\"resultDescriptionErrorList\"));\r",
											"//set global variable to resultDescription \"Role Invalid\"\r",
											"pm.globals.set(\"resultDescriptionRoleInvalid\", resultDescriptionErrorList.resultDescriptionRoleInvalid);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"UpdateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_UpdateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_UpdateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"UpdateSystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_UpdateSystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_UpdateSystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"UpdateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UpdateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_UpdateSystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- set url Inquirey --------------//\r",
											"//set global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"pm.globals.set(\"urlSystemUserInquirySystemUser\", urlRouteList.SystemUser.urlSystemUserInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Create\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"      \r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"\r",
											"        // console.log('jsonDataCreateAccount : :',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"GetResponse_AccountId\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username_Create\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\")\r",
											"                \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"        // console.log(\"TEST : : : : :\",pm.environment.get(\"GetResponse_SystemUserId\"))\r",
											"\r",
											"        //systemUser_Username\r",
											"        let systemUser_Username = pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username\"); // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Update\", systemUser_Username + pm.environment.get(\"random_number\"))\r",
											"      \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// Signin get token\r",
											"Signin2 = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username2,\r",
											"                password:Password2\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken2\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        await pm.environment.set(\"UserRole\" , jsonDataSignin.UserRole);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 6000); \r",
											"setTimeout(async function(){await CreateAccount();}, 9000);\r",
											"setTimeout(async function(){await CreateSystemUser();}, 10000);  \r",
											"setTimeout(async function(){await Signin2();}, 18000); \r",
											"setTimeout(async function(){}, 22000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"UpdateSystemUser_\"\r",
											"var x_ais_OrderRef_UpdateSystemUser = pm.globals.get(\"x_ais_OrderRef_UpdateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"UpdateSystemUser_\"\r",
											"var x_ais_OrderRef_UpdateSystemUser_fail = pm.globals.get(\"x_ais_OrderRef_UpdateSystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"UpdateSystemUser\"\r",
											"var x_ais_OrderDesc_UpdateSystemUser = pm.globals.get(\"x_ais_OrderDesc_UpdateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Inquiry --------------//\r",
											"//get global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"var urlSystemUserInquirySystemUser = pm.globals.get(\"urlSystemUserInquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"UpdateSystemUser is Success\"\r",
											"var resultDescriptionUpdateSystemUser = pm.globals.get(\"resultDescriptionUpdateSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"//get global variable to statusCode 403\r",
											"var statusCodeForbidden = pm.globals.get(\"statusCodeForbidden\");\r",
											"//get global variable to resultCode \"40308\"\r",
											"var resultCodeRoleInvalid = pm.globals.get(\"resultCodeRoleInvalid\");\r",
											"//get global variable to resultDescription \"Role Invalid\"\r",
											"var resultDescriptionRoleInvalid = pm.globals.get(\"resultDescriptionRoleInvalid\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"// pm.environment.set(\"GetResponse_SystemUserId\", jsonData.SystemUserInfo.SystemUserId);\r",
											"\r",
											"pm.test(\"UpdateSystemUser : Status code is \" + statusCodeForbidden, function () {\r",
											"    pm.response.to.have.status(statusCodeForbidden);\r",
											"});\r",
											"\r",
											"pm.test('UpdateSystemUser : operationStatus code is '+'\"'+ resultCodeRoleInvalid +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeRoleInvalid);\r",
											"});\r",
											"\r",
											"pm.test('UpdateSystemUser : operationStatus description is '+'\"'+ resultDescriptionRoleInvalid+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        // console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        // console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPut = LogDefaultValue.Other.methodPut;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameUpdateSystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlUpdateSystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_UpdateSystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_UpdateSystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : UpdateSystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [UpdateSystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeRoleInvalid);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                         console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [UpdateSystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [UpdateSystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                                // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/Partner/CreatePartner\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"CreatePartner_202103231503693\\\",\\\"x-ais-orderdesc\\\":\\\"CreatePartner\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAFGqEAZd8xJfDiWnmUTQnUILTUz2eudCOyvuC4tlIIbY0IlAkkY2KW0\\\"},\\\"body\\\":{\\\"PartnerName\\\":\\\"QATestPartner1111111\\\",\\\"PartnerType\\\":[\\\"Supplier\\\",\\\"Customer\\\"],\\\"PartnerDetail\\\":{\\\"MerchantContact\\\":\\\"QATestPartner01@ais.co.th\\\",\\\"CPID\\\":\\\"QATestPartner01@ais.co.th\\\"},\\\"Property\\\":{\\\"RouteEngine\\\":false}}}\"\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_UpdateSystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_UpdateSystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken2\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\");\r",
											"                            let PartnerId = pm.environment.get(\"GetResponse_PartnerId\");\r",
											"                            let AccountId = pm.environment.get(\"GetResponse_AccountId\");\r",
											"                            let AuthenInfo_Username = pm.environment.get(\"AuthenInfo_Username_Update\"); \r",
											"                            let AuthenInfo_Password = pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password\"); \r",
											"                            let AuthenInfo_SecretKey = pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey\");\r",
											"                            let UserRole = pm.environment.get(\"UserRole\");\r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);                            \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPut);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"                            pm.expect(jsonParseRequestObject.body.AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Password).to.eql(AuthenInfo_Password);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.SecretKey).to.eql(AuthenInfo_SecretKey);\r",
											"                            pm.expect(jsonParseRequestObject.body.UserRole).to.eql(UserRole);\r",
											"\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPut);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.AccountId : \" + jsonParseRequestObject.body.AccountId[0] + \" = \" + AccountId);\r",
											"                            console.log(\"resquest.body.Username : \" + jsonParseRequestObject.body.AuthenInfo.Username + \" = \" + AuthenInfo_Username);\r",
											"                            console.log(\"resquest.body.Password : \" + jsonParseRequestObject.body.AuthenInfo.Password + \" = \" + AuthenInfo_Password);\r",
											"                            console.log(\"resquest.body.SecretKey : \" + jsonParseRequestObject.body.AuthenInfo.SecretKey + \" = \" + AuthenInfo_SecretKey);\r",
											"                            console.log(\"resquest.body.UserRole : \" + jsonParseRequestObject.body.UserRole + \" = \" + UserRole);\r",
											"      \r",
											"                          \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"UserInfo\\\":{\\\"SystemUserId\\\":\\\"608153bd63fa0e0001c4c5fb\\\",\\\"AccountId\\\":[\\\"608153bc63fa0e0001c4c5f9\\\"],\\\"PartnerId\\\":\\\"608153bb63fa0e0001c4c5f6\\\",\\\"Username\\\":\\\"QATester0012\\\",\\\"UserRole\\\":[\\\"RootAdmin\\\",\\\"Customer\\\"]},\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20000\\\",\\\"Description\\\":\\\"UpdateSystemUser is Success\\\"}}\",\r",
											"\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)  \r",
											" \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeRoleInvalid);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);  \r",
											"\r",
											"               \r",
											"                            console.log(\"response.UserInfo.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeRoleInvalid);\r",
											"                            console.log(\"response.UserInfo.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 30000); \r",
											"setTimeout(function(){CheckLog();}, 40000); \r",
											"setTimeout(function(){RemoveAccount();}, 50000);  \r",
											"setTimeout(function(){RemovePartner();}, 60000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"AuthenInfo_Username\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Update\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey\");\r",
											"pm.environment.unset(\"UserRole\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"AccessToken2\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username\");\r",
											"\r",
											"\r",
											"\r",
											"}, 70000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_UpdateSystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_UpdateSystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken2}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"SystemUserId\": \"{{GetResponse_SystemUserId}}\",\r\n  \"AccountId\": [\r\n    \"{{GetResponse_AccountId}}\"\r\n  ],\r\n  \"AuthenInfo\": {\r\n    \"Username\": \"{{AuthenInfo_Username_Update}}\",\r\n    \"Password\" : \"{{Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password}}\",\r\n    \"SecretKey\" : \"{{Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey}}\"\r\n  },\r\n  \"UserRole\": [\"{{UserRole}}\"]\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/UpdateSystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"UpdateSystemUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateSystemUser_TST_F32_0_2_004_Error_Customer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"var Username2 = pm.environment.get(\"Username_Customer\");\r",
											"var Password2 = pm.environment.get(\"Password_Customer\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey\",fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey)\r",
											"pm.environment.set(\"Value_UpdateSystemUser_TST_F32_1_1_001_UserRole\",JSON.stringify(fieldDataValue.Provisioning.SystemUser.UpdateSystemUser.Value_UpdateSystemUser_TST_F32_1_1_001_UserRole))\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"//set global variable to statusCode 403\r",
											"pm.globals.set(\"statusCodeForbidden\", statusCodeList.statusCodeForbidden);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"//set global variable to resultCode \"40308\"\r",
											"pm.globals.set(\"resultCodeRoleInvalid\", resultCodeList.resultCodeRoleInvalid);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"UpdateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionUpdateSystemUser\", resultDescriptionSuccessList.resultDescriptionUpdateSystemUser);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"\r",
											"//---------------- resultDescriptionErrorList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionErrorList = JSON.parse(pm.environment.get(\"resultDescriptionErrorList\"));\r",
											"//set global variable to resultDescription \"Role Invalid\"\r",
											"pm.globals.set(\"resultDescriptionRoleInvalid\", resultDescriptionErrorList.resultDescriptionRoleInvalid);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"UpdateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_UpdateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_UpdateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"UpdateSystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_UpdateSystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_UpdateSystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"UpdateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UpdateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_UpdateSystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- set url Inquirey --------------//\r",
											"//set global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"pm.globals.set(\"urlSystemUserInquirySystemUser\", urlRouteList.SystemUser.urlSystemUserInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Create\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"      \r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"\r",
											"        // console.log('jsonDataCreateAccount : :',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"GetResponse_AccountId\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username_Create\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\")\r",
											"                \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"        // console.log(\"TEST : : : : :\",pm.environment.get(\"GetResponse_SystemUserId\"))\r",
											"\r",
											"        //systemUser_Username\r",
											"        let systemUser_Username = pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username\"); // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Update\", systemUser_Username + pm.environment.get(\"random_number\"))\r",
											"      \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// Signin get token\r",
											"Signin2 = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username2,\r",
											"                password:Password2\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken2\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        await pm.environment.set(\"UserRole\" , jsonDataSignin.UserRole);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 6000); \r",
											"setTimeout(async function(){await CreateAccount();}, 9000);\r",
											"setTimeout(async function(){await CreateSystemUser();}, 10000);  \r",
											"setTimeout(async function(){await Signin2();}, 18000); \r",
											"setTimeout(async function(){}, 22000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"UpdateSystemUser_\"\r",
											"var x_ais_OrderRef_UpdateSystemUser = pm.globals.get(\"x_ais_OrderRef_UpdateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"UpdateSystemUser_\"\r",
											"var x_ais_OrderRef_UpdateSystemUser_fail = pm.globals.get(\"x_ais_OrderRef_UpdateSystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"UpdateSystemUser\"\r",
											"var x_ais_OrderDesc_UpdateSystemUser = pm.globals.get(\"x_ais_OrderDesc_UpdateSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Inquiry --------------//\r",
											"//get global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"var urlSystemUserInquirySystemUser = pm.globals.get(\"urlSystemUserInquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"UpdateSystemUser is Success\"\r",
											"var resultDescriptionUpdateSystemUser = pm.globals.get(\"resultDescriptionUpdateSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"//get global variable to statusCode 403\r",
											"var statusCodeForbidden = pm.globals.get(\"statusCodeForbidden\");\r",
											"//get global variable to resultCode \"40308\"\r",
											"var resultCodeRoleInvalid = pm.globals.get(\"resultCodeRoleInvalid\");\r",
											"//get global variable to resultDescription \"Role Invalid\"\r",
											"var resultDescriptionRoleInvalid = pm.globals.get(\"resultDescriptionRoleInvalid\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"// pm.environment.set(\"GetResponse_SystemUserId\", jsonData.SystemUserInfo.SystemUserId);\r",
											"\r",
											"pm.test(\"UpdateSystemUser : Status code is \" + statusCodeForbidden, function () {\r",
											"    pm.response.to.have.status(statusCodeForbidden);\r",
											"});\r",
											"\r",
											"pm.test('UpdateSystemUser : operationStatus code is '+'\"'+ resultCodeRoleInvalid +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeRoleInvalid);\r",
											"});\r",
											"\r",
											"pm.test('UpdateSystemUser : operationStatus description is '+'\"'+ resultDescriptionRoleInvalid+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        // console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        // console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPut = LogDefaultValue.Other.methodPut;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameUpdateSystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlUpdateSystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_UpdateSystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_UpdateSystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : UpdateSystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [UpdateSystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeRoleInvalid);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                         console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [UpdateSystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [UpdateSystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                                // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/Partner/CreatePartner\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"CreatePartner_202103231503693\\\",\\\"x-ais-orderdesc\\\":\\\"CreatePartner\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAFGqEAZd8xJfDiWnmUTQnUILTUz2eudCOyvuC4tlIIbY0IlAkkY2KW0\\\"},\\\"body\\\":{\\\"PartnerName\\\":\\\"QATestPartner1111111\\\",\\\"PartnerType\\\":[\\\"Supplier\\\",\\\"Customer\\\"],\\\"PartnerDetail\\\":{\\\"MerchantContact\\\":\\\"QATestPartner01@ais.co.th\\\",\\\"CPID\\\":\\\"QATestPartner01@ais.co.th\\\"},\\\"Property\\\":{\\\"RouteEngine\\\":false}}}\"\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_UpdateSystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_UpdateSystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken2\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\");\r",
											"                            let PartnerId = pm.environment.get(\"GetResponse_PartnerId\");\r",
											"                            let AccountId = pm.environment.get(\"GetResponse_AccountId\");\r",
											"                            let AuthenInfo_Username = pm.environment.get(\"AuthenInfo_Username_Update\"); \r",
											"                            let AuthenInfo_Password = pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password\"); \r",
											"                            let AuthenInfo_SecretKey = pm.environment.get(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey\");\r",
											"                            let UserRole = pm.environment.get(\"UserRole\");\r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);                            \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPut);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"                            pm.expect(jsonParseRequestObject.body.AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.Password).to.eql(AuthenInfo_Password);\r",
											"                            pm.expect(jsonParseRequestObject.body.AuthenInfo.SecretKey).to.eql(AuthenInfo_SecretKey);\r",
											"                            pm.expect(jsonParseRequestObject.body.UserRole).to.eql(UserRole);\r",
											"\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPut);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.AccountId : \" + jsonParseRequestObject.body.AccountId[0] + \" = \" + AccountId);\r",
											"                            console.log(\"resquest.body.Username : \" + jsonParseRequestObject.body.AuthenInfo.Username + \" = \" + AuthenInfo_Username);\r",
											"                            console.log(\"resquest.body.Password : \" + jsonParseRequestObject.body.AuthenInfo.Password + \" = \" + AuthenInfo_Password);\r",
											"                            console.log(\"resquest.body.SecretKey : \" + jsonParseRequestObject.body.AuthenInfo.SecretKey + \" = \" + AuthenInfo_SecretKey);\r",
											"                            console.log(\"resquest.body.UserRole : \" + jsonParseRequestObject.body.UserRole + \" = \" + UserRole);\r",
											"      \r",
											"                          \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"UserInfo\\\":{\\\"SystemUserId\\\":\\\"608153bd63fa0e0001c4c5fb\\\",\\\"AccountId\\\":[\\\"608153bc63fa0e0001c4c5f9\\\"],\\\"PartnerId\\\":\\\"608153bb63fa0e0001c4c5f6\\\",\\\"Username\\\":\\\"QATester0012\\\",\\\"UserRole\\\":[\\\"RootAdmin\\\",\\\"Customer\\\"]},\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20000\\\",\\\"Description\\\":\\\"UpdateSystemUser is Success\\\"}}\",\r",
											"\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)  \r",
											" \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeRoleInvalid);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);  \r",
											"\r",
											"               \r",
											"                            console.log(\"response.UserInfo.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeRoleInvalid);\r",
											"                            console.log(\"response.UserInfo.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 30000); \r",
											"setTimeout(function(){CheckLog();}, 40000); \r",
											"setTimeout(function(){RemoveAccount();}, 50000);  \r",
											"setTimeout(function(){RemovePartner();}, 60000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"AuthenInfo_Username\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Update\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey\");\r",
											"pm.environment.unset(\"UserRole\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"AccessToken2\");\r",
											"pm.environment.unset(\"Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Username\");\r",
											"\r",
											"\r",
											"\r",
											"}, 70000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_UpdateSystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_UpdateSystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken2}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"SystemUserId\": \"{{GetResponse_SystemUserId}}\",\r\n  \"AccountId\": [\r\n    \"{{GetResponse_AccountId}}\"\r\n  ],\r\n  \"AuthenInfo\": {\r\n    \"Username\": \"{{AuthenInfo_Username_Update}}\",\r\n    \"Password\" : \"{{Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_Password}}\",\r\n    \"SecretKey\" : \"{{Value_UpdateSystemUser_TST_F32_1_1_001_AuthenInfo_SecretKey}}\"\r\n  },\r\n  \"UserRole\": [\"{{UserRole}}\"]\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/UpdateSystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"UpdateSystemUser"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "RemoveSystemUser",
					"item": [
						{
							"name": "RemoveSystemUser_TST_F33_1_1_001_Success_RootAdmin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"UpdateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionUpdateSystemUser\", resultDescriptionSuccessList.resultDescriptionUpdateSystemUser);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"//---------------- set url Inquirey --------------//\r",
											"//set global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"pm.globals.set(\"urlSystemUserInquirySystemUser\", urlRouteList.SystemUser.urlSystemUserInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"      \r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"\r",
											"        // console.log('jsonDataCreateAccount : :',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"GetResponse_AccountId\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\")\r",
											"                \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"      \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 5000); \r",
											"setTimeout(async function(){await CreateAccount();}, 6000);\r",
											"setTimeout(async function(){await CreateSystemUser();}, 7000);  \r",
											"setTimeout(async function(){}, 8000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUserfail_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser_fail = pm.globals.get(\"x_ais_OrderRef_removeSystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Inquiry --------------//\r",
											"//get global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"var urlSystemUserInquirySystemUser = pm.globals.get(\"urlSystemUserInquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"    pm.response.to.have.status(statusCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('RemoveSystemUser : operationStatus code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('RemoveSystemUser : operationStatus description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionRemoveSystemUser);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        // console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        // console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodDelete = LogDefaultValue.Other.methodDelete;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameRemoveSystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlRemoveSystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_RemoveSystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_RemoveSystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : RemoveSystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [RemoveSystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeSuccess);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionRemoveSystemUser);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        //  console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeSuccess); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionRemoveSystemUser); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        // pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"                        let custom = resultDataLog.custom.endPointSummary;\r",
											"                        console.log(\"custom : : :\",custom)\r",
											"                        let countCustom = custom.length;\r",
											"\r",
											"                        //  [\"db.ClientsCollection\",\"db.ClientsCollection\"],\r",
											"                        let dataEndPointName = LogDefaultValue.OtherSummary.stepEndpointSummary.endPointName_RemoveUserSystem;\r",
											"                        // [\"Success:InquiryClients was successfully.\",\"Success:DeleteClients was successfully.\"]\r",
											"                        let dataResponseStatus = LogDefaultValue.OtherSummary.stepEndpointSummary.responseStatus_RemoveUserSystem;\r",
											"                        let countCustomStep = dataEndPointName.length;\r",
											"                        pm.expect(countCustom).to.eql(countCustomStep); \r",
											"                        for(let i=0;i<countCustomStep;i++){\r",
											"                            let no = custom[i].no;\r",
											"                            let valueEndPointName = custom[i].endPointName;\r",
											"                            let valueResponseStatus = custom[i].responseStatus;\r",
											"                            // console.log(\"i\",i);\r",
											"                            // console.log(\"valueEndPointName\",valueEndPointName);\r",
											"                            // console.log(\"valueResponseStatus\",valueResponseStatus);\r",
											"                           \r",
											"                            console.log(\"custom.length : \" + countCustom + \" = \" + countCustomStep );\r",
											"                            console.log(\"custom.no : \" + no + \" = \" + (i+1).toString() );\r",
											"                            console.log(\"custom.endPointName : \" + valueEndPointName + \" = \" + dataEndPointName[i] );\r",
											"                            console.log(\"custom.responseStatus : \" + valueResponseStatus + \" = \" + dataResponseStatus[i] );\r",
											"                           \r",
											"                            pm.expect(no).to.eql((i+1).toString()); \r",
											"                            pm.expect(valueEndPointName).to.eql(dataEndPointName[i]); \r",
											"                            pm.expect(valueResponseStatus).to.eql(dataResponseStatus[i]);  \r",
											"                        }\r",
											"\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [RemoveSystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [RemoveSystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                            // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/RemoveSystemUser\\\",\\\"method\\\":\\\"DELETE\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"RemoveSystemUser_202104231004900\\\",\\\"x-ais-orderdesc\\\":\\\"RemoveSystemUser\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAGP3PDNBW/95CHWHEF7Y2yqts+mRFXKi50LJG3c2Ik+TEIlAkkY2KW0\\\"},\\\"body\\\":{\\\"SystemUserId\\\":\\\"60823f2963fa0e0001c5109c\\\"}}\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_RemoveSystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_RemoveSystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\");\r",
											"\r",
											"                        \r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);         \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);                         \r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodDelete);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodDelete);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"\r",
											"                         \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20000\\\",\\\"Description\\\":\\\"RemoveSystemUser is Success\\\"}}\",\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)      \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeSuccess);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionRemoveSystemUser);  \r",
											"\r",
											"                            console.log(\"response.UserInfo.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeSuccess);\r",
											"                            console.log(\"response.UserInfo.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionRemoveSystemUser);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// InquirySystemUser\r",
											"InquirySystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptInquirySystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_InquirySystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_InquirySystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestInquirySystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsInquirySystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserInquirySystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptInquirySystemUser,\r",
											"            body: httpRequestInquirySystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request InquirySystemUser');\r",
											"        let response = await reqPromise(optionsInquirySystemUser);\r",
											"        let jsonDataInquirySystemUser = await response.json();\r",
											"        console.log('jsonDataInquirySystemUser : : : ',jsonDataInquirySystemUser)\r",
											"    \r",
											"        let operationStatusInquirySystemUser = await jsonDataInquirySystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusInquirySystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //InquirySystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionInquirySystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusInquirySystemUser).to.have.property('Description', resultDescriptionInquirySystemUser);\r",
											"        });\r",
											"\r",
											"        //Check Data\r",
											"        let SystemUserInfo = await jsonDataInquirySystemUser.PartnerInfo;\r",
											"        console.log('SystemUserInfo : : :',SystemUserInfo);\r",
											"            pm.test('Verify DB Check Data : RemoveSystemUser' , function () {\r",
											"                console.log(\"===============================================================================================================\")    \r",
											"                console.log(\"======== Verify DB Check Data ( Expected = Actual) [RemoveSystemUser] ==================\");  \r",
											"                console.log(\"Code : \" + operationStatusInquirySystemUser.Code + \" = \" + resultCodeSuccess);\r",
											"                console.log(\"Description : \" + operationStatusInquirySystemUser.Description + \" = \" + resultDescriptionInquirySystemUser);\r",
											"                console.log(\"SystemUserInfo : \" + SystemUserInfo + \" = \" + JSON.stringify([]));  \r",
											"\r",
											"                pm.expect(operationStatusInquirySystemUser.Code).to.eql(resultCodeSuccess);\r",
											"                pm.expect(operationStatusInquirySystemUser.Description).to.eql(resultDescriptionInquirySystemUser);\r",
											"                pm.expect(SystemUserInfo).to.eql([]);\r",
											"         });\r",
											"    \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 20000); \r",
											"setTimeout(function(){InquirySystemUser();}, 30000);\r",
											"setTimeout(function(){RemoveAccount();}, 40000);  \r",
											"setTimeout(function(){RemovePartner();}, 50000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Create\");\r",
											"pm.environment.unset(\"AuthenInfo_Username\");\r",
											"\r",
											"\r",
											"\r",
											"}, 60000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_RemoveSystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_RemoveSystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"SystemUserId\": \"{{GetResponse_SystemUserId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/RemoveSystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"RemoveSystemUser"
									]
								},
								"description": "Type:Desire"
							},
							"response": []
						},
						{
							"name": "RemoveSystemUser_TST_F33_1_1_002_Success_SupplierAdmin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"var Username2 = pm.environment.get(\"Username_SupplierAdmin\");\r",
											"var Password2 = pm.environment.get(\"Password_SupplierAdmin\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"UpdateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionUpdateSystemUser\", resultDescriptionSuccessList.resultDescriptionUpdateSystemUser);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"//---------------- set url Inquirey --------------//\r",
											"//set global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"pm.globals.set(\"urlSystemUserInquirySystemUser\", urlRouteList.SystemUser.urlSystemUserInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username2,\r",
											"                password:Password2\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        // setUserRoleUserRole\r",
											"        await pm.environment.set(\"UserRole\" , jsonDataSignin.UserRole);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"accountId_role_other\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    pm.environment.get(\"UserRole\")\r",
											"                    \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"      \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreateSystemUser();}, 6000);  \r",
											"setTimeout(async function(){}, 7000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUserfail_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser_fail = pm.globals.get(\"x_ais_OrderRef_removeSystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Inquiry --------------//\r",
											"//get global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"var urlSystemUserInquirySystemUser = pm.globals.get(\"urlSystemUserInquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"    pm.response.to.have.status(statusCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('RemoveSystemUser : operationStatus code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('RemoveSystemUser : operationStatus description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionRemoveSystemUser);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodDelete = LogDefaultValue.Other.methodDelete;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameRemoveSystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlRemoveSystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_RemoveSystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_RemoveSystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : RemoveSystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [RemoveSystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeSuccess);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionRemoveSystemUser);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        //  console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeSuccess); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionRemoveSystemUser); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        // pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"                        let custom = resultDataLog.custom.endPointSummary;\r",
											"                        console.log(\"custom : : :\",custom)\r",
											"                        let countCustom = custom.length;\r",
											"\r",
											"                        //  [\"db.ClientsCollection\",\"db.ClientsCollection\"],\r",
											"                        let dataEndPointName = LogDefaultValue.OtherSummary.stepEndpointSummary.endPointName_RemoveUserSystem;\r",
											"                        // [\"Success:InquiryClients was successfully.\",\"Success:DeleteClients was successfully.\"]\r",
											"                        let dataResponseStatus = LogDefaultValue.OtherSummary.stepEndpointSummary.responseStatus_RemoveUserSystem;\r",
											"                        let countCustomStep = dataEndPointName.length;\r",
											"                        pm.expect(countCustom).to.eql(countCustomStep); \r",
											"                        for(let i=0;i<countCustomStep;i++){\r",
											"                            let no = custom[i].no;\r",
											"                            let valueEndPointName = custom[i].endPointName;\r",
											"                            let valueResponseStatus = custom[i].responseStatus;\r",
											"                            // console.log(\"i\",i);\r",
											"                            // console.log(\"valueEndPointName\",valueEndPointName);\r",
											"                            // console.log(\"valueResponseStatus\",valueResponseStatus);\r",
											"                           \r",
											"                            console.log(\"custom.length : \" + countCustom + \" = \" + countCustomStep );\r",
											"                            console.log(\"custom.no : \" + no + \" = \" + (i+1).toString() );\r",
											"                            console.log(\"custom.endPointName : \" + valueEndPointName + \" = \" + dataEndPointName[i] );\r",
											"                            console.log(\"custom.responseStatus : \" + valueResponseStatus + \" = \" + dataResponseStatus[i] );\r",
											"                           \r",
											"                            pm.expect(no).to.eql((i+1).toString()); \r",
											"                            pm.expect(valueEndPointName).to.eql(dataEndPointName[i]); \r",
											"                            pm.expect(valueResponseStatus).to.eql(dataResponseStatus[i]);  \r",
											"                        }\r",
											"\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [RemoveSystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [RemoveSystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                            // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/RemoveSystemUser\\\",\\\"method\\\":\\\"DELETE\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"RemoveSystemUser_202104231004900\\\",\\\"x-ais-orderdesc\\\":\\\"RemoveSystemUser\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAGP3PDNBW/95CHWHEF7Y2yqts+mRFXKi50LJG3c2Ik+TEIlAkkY2KW0\\\"},\\\"body\\\":{\\\"SystemUserId\\\":\\\"60823f2963fa0e0001c5109c\\\"}}\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_RemoveSystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_RemoveSystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\");\r",
											"\r",
											"                        \r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);         \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);                         \r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodDelete);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodDelete);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"\r",
											"                         \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20000\\\",\\\"Description\\\":\\\"RemoveSystemUser is Success\\\"}}\",\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)      \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeSuccess);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionRemoveSystemUser);  \r",
											"\r",
											"                            console.log(\"response.UserInfo.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeSuccess);\r",
											"                            console.log(\"response.UserInfo.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionRemoveSystemUser);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// InquirySystemUser\r",
											"InquirySystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptInquirySystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_InquirySystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_InquirySystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestInquirySystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsInquirySystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserInquirySystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptInquirySystemUser,\r",
											"            body: httpRequestInquirySystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request InquirySystemUser');\r",
											"        let response = await reqPromise(optionsInquirySystemUser);\r",
											"        let jsonDataInquirySystemUser = await response.json();\r",
											"        // console.log('jsonDataInquirySystemUser : : : ',jsonDataInquirySystemUser)\r",
											"    \r",
											"        let operationStatusInquirySystemUser = await jsonDataInquirySystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"InquirySystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('InquirySystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusInquirySystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //InquirySystemUser is Success\r",
											"        pm.test('InquirySystemUser : OperationStatus Description is '+'\"'+ resultDescriptionInquirySystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusInquirySystemUser).to.have.property('Description', resultDescriptionInquirySystemUser);\r",
											"        });\r",
											"\r",
											"        //Check Data\r",
											"        let SystemUserInfo = await jsonDataInquirySystemUser.PartnerInfo;\r",
											"        console.log('SystemUserInfo : : :',SystemUserInfo);\r",
											"            pm.test('Verify DB Check Data : RemoveSystemUser' , function () {\r",
											"                console.log(\"===============================================================================================================\")    \r",
											"                console.log(\"======== Verify DB Check Data ( Expected = Actual) [RemoveSystemUser] ==================\");  \r",
											"                console.log(\"Code : \" + operationStatusInquirySystemUser.Code + \" = \" + resultCodeSuccess);\r",
											"                console.log(\"Description : \" + operationStatusInquirySystemUser.Description + \" = \" + resultDescriptionInquirySystemUser);\r",
											"                console.log(\"SystemUserInfo : \" + SystemUserInfo + \" = \" + JSON.stringify([]));  \r",
											"\r",
											"                pm.expect(operationStatusInquirySystemUser.Code).to.eql(resultCodeSuccess);\r",
											"                pm.expect(operationStatusInquirySystemUser.Description).to.eql(resultDescriptionInquirySystemUser);\r",
											"                pm.expect(SystemUserInfo).to.eql([]);\r",
											"         });\r",
											"    \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 30000); \r",
											"setTimeout(function(){InquirySystemUser();}, 40000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"AccessToken2\");\r",
											"pm.environment.unset(\"UserRole\");\r",
											"pm.environment.unset(\"AuthenInfo_Username\");\r",
											"\r",
											"\r",
											"}, 50000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_RemoveSystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_RemoveSystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"SystemUserId\": \"{{GetResponse_SystemUserId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/RemoveSystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"RemoveSystemUser"
									]
								},
								"description": "Type:Desire"
							},
							"response": []
						},
						{
							"name": "RemoveSystemUser_TST_F33_1_1_003_Success_CustomerAdmin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"var Username2 = pm.environment.get(\"Username_CustomerAdmin\");\r",
											"var Password2 = pm.environment.get(\"Password_CustomerAdmin\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"UpdateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionUpdateSystemUser\", resultDescriptionSuccessList.resultDescriptionUpdateSystemUser);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"//---------------- set url Inquirey --------------//\r",
											"//set global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"pm.globals.set(\"urlSystemUserInquirySystemUser\", urlRouteList.SystemUser.urlSystemUserInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username2,\r",
											"                password:Password2\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        // setUserRoleUserRole\r",
											"        await pm.environment.set(\"UserRole\" , jsonDataSignin.UserRole);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"accountId_role_other\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    pm.environment.get(\"UserRole\")\r",
											"                    \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"      \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreateSystemUser();}, 8000);  \r",
											"setTimeout(async function(){}, 9000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUserfail_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser_fail = pm.globals.get(\"x_ais_OrderRef_removeSystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Inquiry --------------//\r",
											"//get global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"var urlSystemUserInquirySystemUser = pm.globals.get(\"urlSystemUserInquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"    pm.response.to.have.status(statusCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('RemoveSystemUser : operationStatus code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('RemoveSystemUser : operationStatus description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionRemoveSystemUser);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodDelete = LogDefaultValue.Other.methodDelete;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameRemoveSystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlRemoveSystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_RemoveSystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_RemoveSystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : RemoveSystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [RemoveSystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeSuccess);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionRemoveSystemUser);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        //  console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeSuccess); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionRemoveSystemUser); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        // pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"                        let custom = resultDataLog.custom.endPointSummary;\r",
											"                        console.log(\"custom : : :\",custom)\r",
											"                        let countCustom = custom.length;\r",
											"\r",
											"                        //  [\"db.ClientsCollection\",\"db.ClientsCollection\"],\r",
											"                        let dataEndPointName = LogDefaultValue.OtherSummary.stepEndpointSummary.endPointName_RemoveUserSystem;\r",
											"                        // [\"Success:InquiryClients was successfully.\",\"Success:DeleteClients was successfully.\"]\r",
											"                        let dataResponseStatus = LogDefaultValue.OtherSummary.stepEndpointSummary.responseStatus_RemoveUserSystem;\r",
											"                        let countCustomStep = dataEndPointName.length;\r",
											"                        pm.expect(countCustom).to.eql(countCustomStep); \r",
											"                        for(let i=0;i<countCustomStep;i++){\r",
											"                            let no = custom[i].no;\r",
											"                            let valueEndPointName = custom[i].endPointName;\r",
											"                            let valueResponseStatus = custom[i].responseStatus;\r",
											"                            // console.log(\"i\",i);\r",
											"                            // console.log(\"valueEndPointName\",valueEndPointName);\r",
											"                            // console.log(\"valueResponseStatus\",valueResponseStatus);\r",
											"                           \r",
											"                            console.log(\"custom.length : \" + countCustom + \" = \" + countCustomStep );\r",
											"                            console.log(\"custom.no : \" + no + \" = \" + (i+1).toString() );\r",
											"                            console.log(\"custom.endPointName : \" + valueEndPointName + \" = \" + dataEndPointName[i] );\r",
											"                            console.log(\"custom.responseStatus : \" + valueResponseStatus + \" = \" + dataResponseStatus[i] );\r",
											"                           \r",
											"                            pm.expect(no).to.eql((i+1).toString()); \r",
											"                            pm.expect(valueEndPointName).to.eql(dataEndPointName[i]); \r",
											"                            pm.expect(valueResponseStatus).to.eql(dataResponseStatus[i]);  \r",
											"                        }\r",
											"\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [RemoveSystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [RemoveSystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                            // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/RemoveSystemUser\\\",\\\"method\\\":\\\"DELETE\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"RemoveSystemUser_202104231004900\\\",\\\"x-ais-orderdesc\\\":\\\"RemoveSystemUser\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAGP3PDNBW/95CHWHEF7Y2yqts+mRFXKi50LJG3c2Ik+TEIlAkkY2KW0\\\"},\\\"body\\\":{\\\"SystemUserId\\\":\\\"60823f2963fa0e0001c5109c\\\"}}\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_RemoveSystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_RemoveSystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\");\r",
											"\r",
											"                        \r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);         \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);                         \r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodDelete);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodDelete);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"\r",
											"                         \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20000\\\",\\\"Description\\\":\\\"RemoveSystemUser is Success\\\"}}\",\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)      \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeSuccess);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionRemoveSystemUser);  \r",
											"\r",
											"                            console.log(\"response.UserInfo.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeSuccess);\r",
											"                            console.log(\"response.UserInfo.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionRemoveSystemUser);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// InquirySystemUser\r",
											"InquirySystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptInquirySystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_InquirySystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_InquirySystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestInquirySystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsInquirySystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserInquirySystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptInquirySystemUser,\r",
											"            body: httpRequestInquirySystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request InquirySystemUser');\r",
											"        let response = await reqPromise(optionsInquirySystemUser);\r",
											"        let jsonDataInquirySystemUser = await response.json();\r",
											"        // console.log('jsonDataInquirySystemUser : : : ',jsonDataInquirySystemUser)\r",
											"    \r",
											"        let operationStatusInquirySystemUser = await jsonDataInquirySystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"InquirySystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('InquirySystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusInquirySystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //InquirySystemUser is Success\r",
											"        pm.test('InquirySystemUser : OperationStatus Description is '+'\"'+ resultDescriptionInquirySystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusInquirySystemUser).to.have.property('Description', resultDescriptionInquirySystemUser);\r",
											"        });\r",
											"\r",
											"        //Check Data\r",
											"        let SystemUserInfo = await jsonDataInquirySystemUser.PartnerInfo;\r",
											"        console.log('SystemUserInfo : : :',SystemUserInfo);\r",
											"            pm.test('Verify DB Check Data : RemoveSystemUser' , function () {\r",
											"                console.log(\"===============================================================================================================\")    \r",
											"                console.log(\"======== Verify DB Check Data ( Expected = Actual) [RemoveSystemUser] ==================\");  \r",
											"                console.log(\"Code : \" + operationStatusInquirySystemUser.Code + \" = \" + resultCodeSuccess);\r",
											"                console.log(\"Description : \" + operationStatusInquirySystemUser.Description + \" = \" + resultDescriptionInquirySystemUser);\r",
											"                console.log(\"SystemUserInfo : \" + SystemUserInfo + \" = \" + JSON.stringify([]));  \r",
											"\r",
											"                pm.expect(operationStatusInquirySystemUser.Code).to.eql(resultCodeSuccess);\r",
											"                pm.expect(operationStatusInquirySystemUser.Description).to.eql(resultDescriptionInquirySystemUser);\r",
											"                pm.expect(SystemUserInfo).to.eql([]);\r",
											"         });\r",
											"    \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 10000); \r",
											"setTimeout(function(){CheckLog();}, 30000); \r",
											"setTimeout(function(){InquirySystemUser();}, 40000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"AccessToken2\");\r",
											"pm.environment.unset(\"UserRole\");\r",
											"pm.environment.unset(\"AuthenInfo_Username\");\r",
											"\r",
											"\r",
											"}, 50000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_RemoveSystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_RemoveSystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"SystemUserId\": \"{{GetResponse_SystemUserId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/RemoveSystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"RemoveSystemUser"
									]
								},
								"description": "Type:Desire"
							},
							"response": []
						},
						{
							"name": "RemoveSystemUser_TST_F33_0_2_002_Error_RemoveSystemUserNotFound",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"pm.environment.set(\"Value_DeleteSystemUser_TST_F33_0_2_002_SystemUserId\",fieldDataValue.Provisioning.SystemUser.DeleteSystemUser.Value_DeleteSystemUser_TST_F33_0_2_002_SystemUserId)\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"//set global variable to statusCode 404\r",
											"pm.globals.set(\"statusCodeNotFound\", statusCodeList.statusCodeNotFound);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"//set global variable to resultCode \"40400\"\r",
											"pm.globals.set(\"resultCodeNotFound\", resultCodeList.resultCodeNotFound);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"UpdateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionUpdateSystemUser\", resultDescriptionSuccessList.resultDescriptionUpdateSystemUser);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionErrorList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionErrorList = JSON.parse(pm.environment.get(\"resultDescriptionErrorList\"));\r",
											"//set global variable to resultDescription \"The RemoveSystemUser is Not Found\"\r",
											"pm.globals.set(\"resultDescriptionTheRemoveSystemUserIsNotFound\", resultDescriptionErrorList.resultDescriptionTheRemoveSystemUserIsNotFound);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Create\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"      \r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"\r",
											"        console.log('jsonDataCreateAccount : :',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"GetResponse_AccountId\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username_Create\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\")\r",
											"                \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"        // console.log(\"TEST : : : : :\",pm.environment.get(\"GetResponse_SystemUserId\"))\r",
											"      \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 5000); \r",
											"setTimeout(async function(){await CreateAccount();}, 6000);\r",
											"setTimeout(async function(){await CreateSystemUser();}, 7000);  \r",
											"setTimeout(async function(){}, 8000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUserfail_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser_fail = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"\r",
											"\r",
											"//get global variable to statusCode 404\r",
											"var statusCodeNotFound = pm.globals.get(\"statusCodeNotFound\");\r",
											"//get global variable to resultCode \"40400\"\r",
											"var resultCodeNotFound = pm.globals.get(\"resultCodeNotFound\");\r",
											"//get global variable to resultDescription \"The UpdateSystemUser is Not Found\"\r",
											"var resultDescriptionTheRemoveSystemUserIsNotFound = pm.globals.get(\"resultDescriptionTheRemoveSystemUserIsNotFound\");\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"RemoveSystemUser : Status code is \" + statusCodeNotFound, function () {\r",
											"    pm.response.to.have.status(statusCodeNotFound);\r",
											"});\r",
											"\r",
											"pm.test('RemoveSystemUser : operationStatus code is '+'\"'+ resultCodeNotFound +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeNotFound);\r",
											"});\r",
											"\r",
											"pm.test('RemoveSystemUser : operationStatus description is '+'\"'+ resultDescriptionTheRemoveSystemUserIsNotFound+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionTheRemoveSystemUserIsNotFound);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        // console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        // console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodDelete = LogDefaultValue.Other.methodDelete;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameRemoveSystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlRemoveSystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_RemoveSystemUser_fail + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log('logType',logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_RemoveSystemUser_fail + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : RemoveSystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [RemoveSystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeNotFound);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionTheRemoveSystemUserIsNotFound);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                         console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeNotFound); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionTheRemoveSystemUserIsNotFound); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        // pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"                        let custom = resultDataLog.custom.endPointSummary;\r",
											"                        console.log(\"custom : : :\",custom)\r",
											"                        let countCustom = custom.length;\r",
											"\r",
											"                        // [\"db.ClientsCollection\"],,\r",
											"                        let dataEndPointName = LogDefaultValue.OtherSummary.stepEndpointSummary.endPointName_RemoveUserSystem_002;\r",
											"                        // [\"Success:InquiryClients was successfully.\"]\r",
											"                        let dataResponseStatus = LogDefaultValue.OtherSummary.stepEndpointSummary.responseStatus_RemoveUserSystem_002;\r",
											"                        let countCustomStep = dataEndPointName.length;\r",
											"                        pm.expect(countCustom).to.eql(countCustomStep); \r",
											"                        for(let i=0;i<countCustomStep;i++){\r",
											"                            let no = custom[i].no;\r",
											"                            let valueEndPointName = custom[i].endPointName;\r",
											"                            let valueResponseStatus = custom[i].responseStatus;\r",
											"                            // console.log(\"i\",i);\r",
											"                            // console.log(\"valueEndPointName\",valueEndPointName);\r",
											"                            // console.log(\"valueResponseStatus\",valueResponseStatus);\r",
											"                           \r",
											"                            console.log(\"custom.length : \" + countCustom + \" = \" + countCustomStep );\r",
											"                            console.log(\"custom.no : \" + no + \" = \" + (i+1).toString() );\r",
											"                            console.log(\"custom.endPointName : \" + valueEndPointName + \" = \" + dataEndPointName[i] );\r",
											"                            console.log(\"custom.responseStatus : \" + valueResponseStatus + \" = \" + dataResponseStatus[i] );\r",
											"                           \r",
											"                            pm.expect(no).to.eql((i+1).toString()); \r",
											"                            pm.expect(valueEndPointName).to.eql(dataEndPointName[i]); \r",
											"                            pm.expect(valueResponseStatus).to.eql(dataResponseStatus[i]);  \r",
											"                        }\r",
											"\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [RemoveSystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [RemoveSystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                                // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/Partner/CreatePartner\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"CreatePartner_202103231503693\\\",\\\"x-ais-orderdesc\\\":\\\"CreatePartner\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAFGqEAZd8xJfDiWnmUTQnUILTUz2eudCOyvuC4tlIIbY0IlAkkY2KW0\\\"},\\\"body\\\":{\\\"PartnerName\\\":\\\"QATestPartner1111111\\\",\\\"PartnerType\\\":[\\\"Supplier\\\",\\\"Customer\\\"],\\\"PartnerDetail\\\":{\\\"MerchantContact\\\":\\\"QATestPartner01@ais.co.th\\\",\\\"CPID\\\":\\\"QATestPartner01@ais.co.th\\\"},\\\"Property\\\":{\\\"RouteEngine\\\":false}}}\"\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_RemoveSystemUser_fail + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_RemoveSystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");\r",
											"                            let SystemUserId = pm.environment.get(\"Value_DeleteSystemUser_TST_F33_0_2_002_SystemUserId\");\r",
											"\r",
											"\r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);                        \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);                       \r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodDelete);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodDelete);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"\r",
											"      \r",
											"                          \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"PartnerInfo\\\":{\\\"CustomerId\\\":\\\"6059a4f863fa0e0001b9d2ef\\\",\\\"PartnerId\\\":\\\"6059a4f863fa0e0001b9d2f0\\\",\\\"PartnerName\\\":\\\"QATestPartner1111111\\\",\\\"PartnerType\\\":[\\\"Supplier\\\",\\\"Customer\\\"],\\\"PartnerDetail\\\":{\\\"MerchantContact\\\":\\\"QATestPartner01@ais.co.th\\\",\\\"CPID\\\":\\\"QATestPartner01@ais.co.th\\\"},\\\"Property\\\":{\\\"RouteEngine\\\":false},\\\"CreateDate\\\":\\\"2021-03-23T15:21:12.6726951+07:00\\\"},\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20100\\\",\\\"Description\\\":\\\"CreatePartner is Success\\\"}}\",\"activityLog\":{\"startTime\":\"2021-03-23T15:21:12.6619894+07:00\",\"endTime\":\"2021-03-23T15:21:12.6785132+07:00\",\"processTime\":16.5238}}\r",
											"\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);     \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeNotFound);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionTheRemoveSystemUserIsNotFound);  \r",
											"\r",
											"\r",
											"                            console.log(\"response.UserInfo.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeNotFound);\r",
											"                            console.log(\"response.UserInfo.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionTheRemoveSystemUserIsNotFound);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 20000); \r",
											"setTimeout(function(){RemoveAccount();}, 30000);  \r",
											"setTimeout(function(){RemovePartner();}, 40000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"Value_DeleteSystemUser_TST_F33_0_2_002_SystemUserId\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Create\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"}, 50000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_RemoveSystemUser_fail}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_RemoveSystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"SystemUserId\": \"{{Value_DeleteSystemUser_TST_F33_0_2_002_SystemUserId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/RemoveSystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"RemoveSystemUser"
									]
								},
								"description": "Type:Desire"
							},
							"response": []
						},
						{
							"name": "RemoveSystemUser_TST_F33_0_2_003_Error_Supplier",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"var Username2 = pm.environment.get(\"Username_Supplier\");\r",
											"var Password2 = pm.environment.get(\"Password_Supplier\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"//set global variable to statusCode 403\r",
											"pm.globals.set(\"statusCodeForbidden\", statusCodeList.statusCodeForbidden);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"//set global variable to resultCode \"40308\"\r",
											"pm.globals.set(\"resultCodeRoleInvalid\", resultCodeList.resultCodeRoleInvalid);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"UpdateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionUpdateSystemUser\", resultDescriptionSuccessList.resultDescriptionUpdateSystemUser);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionErrorList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionErrorList = JSON.parse(pm.environment.get(\"resultDescriptionErrorList\"));\r",
											"//set global variable to resultDescription \"Role Invalid\"\r",
											"pm.globals.set(\"resultDescriptionRoleInvalid\", resultDescriptionErrorList.resultDescriptionRoleInvalid);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"//---------------- set url Inquirey --------------//\r",
											"//set global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"pm.globals.set(\"urlSystemUserInquirySystemUser\", urlRouteList.SystemUser.urlSystemUserInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"  \r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Create\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"      \r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"\r",
											"        // console.log('jsonDataCreateAccount : :',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"GetResponse_AccountId\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username_Create\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    \r",
											"                        pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\")\r",
											"                    \r",
											"                    \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"      \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// Signin get token\r",
											"Signin2 = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username2,\r",
											"                password:Password2\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken2\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 5000); \r",
											"setTimeout(async function(){await CreateAccount();}, 8000);\r",
											"setTimeout(async function(){await CreateSystemUser();}, 9000);  \r",
											"setTimeout(async function(){await Signin2();}, 10000);\r",
											"setTimeout(async function(){}, 12000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUserfail_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser_fail = pm.globals.get(\"x_ais_OrderRef_removeSystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Inquiry --------------//\r",
											"//get global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"var urlSystemUserInquirySystemUser = pm.globals.get(\"urlSystemUserInquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"//get global variable to statusCode 403\r",
											"var statusCodeForbidden = pm.globals.get(\"statusCodeForbidden\");\r",
											"//get global variable to resultCode \"40308\"\r",
											"var resultCodeRoleInvalid = pm.globals.get(\"resultCodeRoleInvalid\");\r",
											"//get global variable to resultDescription \"Role Invalid\"\r",
											"var resultDescriptionRoleInvalid = pm.globals.get(\"resultDescriptionRoleInvalid\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"RemoveSystemUser : Status code is \" + statusCodeForbidden, function () {\r",
											"    pm.response.to.have.status(statusCodeForbidden);\r",
											"});\r",
											"\r",
											"pm.test('RemoveSystemUser : operationStatus code is '+'\"'+ resultCodeRoleInvalid +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeRoleInvalid);\r",
											"});\r",
											"\r",
											"pm.test('RemoveSystemUser : operationStatus description is '+'\"'+ resultDescriptionRoleInvalid+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        // console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        // console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodDelete = LogDefaultValue.Other.methodDelete;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameRemoveSystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlRemoveSystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_RemoveSystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_RemoveSystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : RemoveSystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [RemoveSystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeRoleInvalid);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [RemoveSystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [RemoveSystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                            // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/RemoveSystemUser\\\",\\\"method\\\":\\\"DELETE\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"RemoveSystemUser_202104231004900\\\",\\\"x-ais-orderdesc\\\":\\\"RemoveSystemUser\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAGP3PDNBW/95CHWHEF7Y2yqts+mRFXKi50LJG3c2Ik+TEIlAkkY2KW0\\\"},\\\"body\\\":{\\\"SystemUserId\\\":\\\"60823f2963fa0e0001c5109c\\\"}}\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_RemoveSystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_RemoveSystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken2\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\");\r",
											"\r",
											"                        \r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);         \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);                         \r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodDelete);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodDelete);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"\r",
											"                         \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20000\\\",\\\"Description\\\":\\\"RemoveSystemUser is Success\\\"}}\",\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)      \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeRoleInvalid);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);  \r",
											"\r",
											"                            console.log(\"response.UserInfo.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeRoleInvalid);\r",
											"                            console.log(\"response.UserInfo.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 20000); \r",
											"setTimeout(function(){CheckLog();}, 40000); \r",
											"setTimeout(function(){RemoveAccount();}, 50000);  \r",
											"setTimeout(function(){RemovePartner();}, 60000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"AccessToken2\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Create\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"}, 70000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_RemoveSystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_RemoveSystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken2}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"SystemUserId\": \"{{GetResponse_SystemUserId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/RemoveSystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"RemoveSystemUser"
									]
								},
								"description": "Type:Desire"
							},
							"response": []
						},
						{
							"name": "RemoveSystemUser_TST_F33_0_2_004_Error_Customer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"var Username2 = pm.environment.get(\"Username_Customer\");\r",
											"var Password2 = pm.environment.get(\"Password_Customer\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"//set global variable to statusCode 403\r",
											"pm.globals.set(\"statusCodeForbidden\", statusCodeList.statusCodeForbidden);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"//set global variable to resultCode \"40308\"\r",
											"pm.globals.set(\"resultCodeRoleInvalid\", resultCodeList.resultCodeRoleInvalid);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"UpdateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionUpdateSystemUser\", resultDescriptionSuccessList.resultDescriptionUpdateSystemUser);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionErrorList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionErrorList = JSON.parse(pm.environment.get(\"resultDescriptionErrorList\"));\r",
											"//set global variable to resultDescription \"Role Invalid\"\r",
											"pm.globals.set(\"resultDescriptionRoleInvalid\", resultDescriptionErrorList.resultDescriptionRoleInvalid);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"//---------------- set url Inquirey --------------//\r",
											"//set global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"pm.globals.set(\"urlSystemUserInquirySystemUser\", urlRouteList.SystemUser.urlSystemUserInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"  \r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Create\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"      \r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"\r",
											"        // console.log('jsonDataCreateAccount : :',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"GetResponse_AccountId\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username_Create\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    \r",
											"                        pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\")\r",
											"                    \r",
											"                    \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"      \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// Signin get token\r",
											"Signin2 = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username2,\r",
											"                password:Password2\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken2\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 5000); \r",
											"setTimeout(async function(){await CreateAccount();}, 8000);\r",
											"setTimeout(async function(){await CreateSystemUser();}, 9000);  \r",
											"setTimeout(async function(){await Signin2();}, 10000);\r",
											"setTimeout(async function(){}, 12000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUserfail_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser_fail = pm.globals.get(\"x_ais_OrderRef_removeSystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Inquiry --------------//\r",
											"//get global variable to url \"/api/v1/SystemUser/InquirySystemUser\"\r",
											"var urlSystemUserInquirySystemUser = pm.globals.get(\"urlSystemUserInquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"//get global variable to statusCode 403\r",
											"var statusCodeForbidden = pm.globals.get(\"statusCodeForbidden\");\r",
											"//get global variable to resultCode \"40308\"\r",
											"var resultCodeRoleInvalid = pm.globals.get(\"resultCodeRoleInvalid\");\r",
											"//get global variable to resultDescription \"Role Invalid\"\r",
											"var resultDescriptionRoleInvalid = pm.globals.get(\"resultDescriptionRoleInvalid\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"RemoveSystemUser : Status code is \" + statusCodeForbidden, function () {\r",
											"    pm.response.to.have.status(statusCodeForbidden);\r",
											"});\r",
											"\r",
											"pm.test('RemoveSystemUser : operationStatus code is '+'\"'+ resultCodeRoleInvalid +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeRoleInvalid);\r",
											"});\r",
											"\r",
											"pm.test('RemoveSystemUser : operationStatus description is '+'\"'+ resultDescriptionRoleInvalid+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        // console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        // console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodDelete = LogDefaultValue.Other.methodDelete;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameRemoveSystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlRemoveSystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_RemoveSystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_RemoveSystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : RemoveSystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [RemoveSystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeRoleInvalid);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [RemoveSystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [RemoveSystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                            // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/RemoveSystemUser\\\",\\\"method\\\":\\\"DELETE\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"RemoveSystemUser_202104231004900\\\",\\\"x-ais-orderdesc\\\":\\\"RemoveSystemUser\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAGP3PDNBW/95CHWHEF7Y2yqts+mRFXKi50LJG3c2Ik+TEIlAkkY2KW0\\\"},\\\"body\\\":{\\\"SystemUserId\\\":\\\"60823f2963fa0e0001c5109c\\\"}}\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_RemoveSystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_RemoveSystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken2\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\");\r",
											"\r",
											"                        \r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);         \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);                         \r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodDelete);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodDelete);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"\r",
											"                         \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20000\\\",\\\"Description\\\":\\\"RemoveSystemUser is Success\\\"}}\",\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)      \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeRoleInvalid);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);  \r",
											"\r",
											"                            console.log(\"response.UserInfo.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeRoleInvalid);\r",
											"                            console.log(\"response.UserInfo.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 20000); \r",
											"setTimeout(function(){CheckLog();}, 40000); \r",
											"setTimeout(function(){RemoveAccount();}, 50000);  \r",
											"setTimeout(function(){RemovePartner();}, 60000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"AccessToken2\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Create\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"}, 70000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_RemoveSystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_RemoveSystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken2}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"SystemUserId\": \"{{GetResponse_SystemUserId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/RemoveSystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"RemoveSystemUser"
									]
								},
								"description": "Type:Desire"
							},
							"response": []
						}
					]
				},
				{
					"name": "InquirySystemUser",
					"item": [
						{
							"name": "InquirySystemUser_TST_F34_1_1_001_Success_RootAdmin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"      \r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"\r",
											"        // console.log('jsonDataCreateAccount : :',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"GetResponse_AccountId\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\")\r",
											"                \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"      \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 5000); \r",
											"setTimeout(async function(){await CreateAccount();}, 6000);\r",
											"setTimeout(async function(){await CreateSystemUser();}, 7000);  \r",
											"setTimeout(async function(){}, 8000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"InquirySystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"    pm.response.to.have.status(statusCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('InquirySystemUser : operationStatus code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('InquirySystemUser : operationStatus description is '+'\"'+ resultDescriptionInquirySystemUser+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionInquirySystemUser);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        // console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        // console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPost = LogDefaultValue.Other.methodPost;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameInquirySystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlInquirySystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_InquirySystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_InquirySystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : InquirySystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [InquirySystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeSuccess);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionInquirySystemUser);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        //  console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeSuccess); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionInquirySystemUser); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        // pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"                        let custom = resultDataLog.custom.endPointSummary;\r",
											"                        console.log(\"custom : : :\",custom)\r",
											"                        let countCustom = custom.length;\r",
											"\r",
											"                        // [\"db.ClientsCollection\"]\r",
											"                        let dataEndPointName = LogDefaultValue.OtherSummary.stepEndpointSummary.endPointName_InquiryUserSystem;\r",
											"                        // [\"Success:InquiryClients was successfully.\"]\r",
											"                        let dataResponseStatus = LogDefaultValue.OtherSummary.stepEndpointSummary.responseStatus_InquiryUserSystem;\r",
											"                        let countCustomStep = dataEndPointName.length;\r",
											"                        pm.expect(countCustom).to.eql(countCustomStep); \r",
											"                        for(let i=0;i<countCustomStep;i++){\r",
											"                            let no = custom[i].no;\r",
											"                            let valueEndPointName = custom[i].endPointName;\r",
											"                            let valueResponseStatus = custom[i].responseStatus;\r",
											"                            // console.log(\"i\",i);\r",
											"                            // console.log(\"valueEndPointName\",valueEndPointName);\r",
											"                            // console.log(\"valueResponseStatus\",valueResponseStatus);\r",
											"                           \r",
											"                            console.log(\"custom.length : \" + countCustom + \" = \" + countCustomStep );\r",
											"                            console.log(\"custom.no : \" + no + \" = \" + (i+1).toString() );\r",
											"                            console.log(\"custom.endPointName : \" + valueEndPointName + \" = \" + dataEndPointName[i] );\r",
											"                            console.log(\"custom.responseStatus : \" + valueResponseStatus + \" = \" + dataResponseStatus[i] );\r",
											"                           \r",
											"                            pm.expect(no).to.eql((i+1).toString()); \r",
											"                            pm.expect(valueEndPointName).to.eql(dataEndPointName[i]); \r",
											"                            pm.expect(valueResponseStatus).to.eql(dataResponseStatus[i]);  \r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                   pm.test(\"Check Detail Log : \" + endPointNameValue + \" [InquirySystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [InquirySystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                            // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/InquirySystemUser\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"InquirySystemUser_202104231404532\\\",\\\"x-ais-orderdesc\\\":\\\"InquirySystemUser\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAGP3PDNBW/95Kz2dLDjWjSzgfeuOE1HCw6+SEMwRTU8OQ==\\\"},\\\"body\\\":{\\\"SystemUserId\\\":\\\"608270f24252b400016e6466\\\"}}\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging;  \r",
											"                            let x_ais_orderref = x_ais_OrderRef_InquirySystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_InquirySystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"                            let AccountId = pm.environment.get(\"GetResponse_AccountId\");\r",
											"                            let AuthenInfo_Username = pm.environment.get(\"AuthenInfo_Username\"); \r",
											"                            let AuthenInfo_Password = pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\"); \r",
											"                            let UserRole = pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);                      \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"                                              \r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPost);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPost);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"      \r",
											"                          \r",
											"                            // check responseObject\r",
											"                            //  \"responseObject\":\"{\\\"PartnerInfo\\\":[{\\\"SystemUserId\\\":\\\"608270f24252b400016e6466\\\",\\\"AccountId\\\":[\\\"608270f14252b400016e6464\\\"],\\\"AuthenInfo\\\":{\\\"Username\\\":\\\"QATester0002\\\"},\\\"UserRole\\\":[\\\"RootAdmin\\\"],\\\"CreatedDate\\\":\\\"2021-04-23T14:02:10.376+07:00\\\"}],\\\"_Metadata\\\":{\\\"TotalCount\\\":1,\\\"Limit\\\":10000,\\\"OffSet\\\":0},\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20000\\\",\\\"Description\\\":\\\"InquirySystemUser is Success\\\"}\r",
											"\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)\r",
											"\r",
											"\r",
											"                            pm.expect(jsonParseResponseObject.PartnerInfo[0].SystemUserId).to.eql(SystemUserId);       \r",
											"                            pm.expect(jsonParseResponseObject.PartnerInfo[0].AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseResponseObject.PartnerInfo[0].AuthenInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseResponseObject.PartnerInfo[0].UserRole).to.eql(UserRole);\r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeSuccess);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionInquirySystemUser);  \r",
											"\r",
											"                            console.log(\"response.PartnerInfo.PartnerInfo[0].SystemUserId : \" + jsonParseResponseObject.PartnerInfo[0].SystemUserId + \" = \" + SystemUserId);\r",
											"                            console.log(\"response.PartnerInfo.AccountId : \" + jsonParseResponseObject.PartnerInfo[0].AccountId[0] + \" = \" + AccountId);  \r",
											"                            console.log(\"response.PartnerInfo.AuthenInfo.Username : \" + jsonParseResponseObject.PartnerInfo[0].AuthenInfo.Username + \" = \" + AuthenInfo_Username); \r",
											"                            console.log(\"response.PartnerInfo.UserRole : \" + jsonParseResponseObject.PartnerInfo[0].UserRole + \" = \" + UserRole); \r",
											"                            console.log(\"response.OperationStatus.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeSuccess);\r",
											"                            console.log(\"response.OperationStatus.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionInquirySystemUser);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 20000); \r",
											"setTimeout(function(){RemoveSystemUser();}, 30000);\r",
											"setTimeout(function(){RemoveAccount();}, 40000);  \r",
											"setTimeout(function(){RemovePartner();}, 50000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"AuthenInfo_Username\");\r",
											"\r",
											"\r",
											"}, 60000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_InquirySystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_InquirySystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SystemUserId\": \"{{GetResponse_SystemUserId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/InquirySystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"InquirySystemUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "InquirySystemUser_TST_F34_1_1_002_Success_SupplierAdmin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"var Username2 = pm.environment.get(\"Username_SupplierAdmin\");\r",
											"var Password2 = pm.environment.get(\"Password_SupplierAdmin\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username2,\r",
											"                password:Password2\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        // setUserRoleUserRole\r",
											"        await pm.environment.set(\"UserRole\" , jsonDataSignin.UserRole);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"accountId_role_other\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    pm.environment.get(\"UserRole\")\r",
											"                    \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"      \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreateSystemUser();}, 6000);  \r",
											"setTimeout(async function(){}, 7000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"InquirySystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"    pm.response.to.have.status(statusCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('InquirySystemUser : operationStatus code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('InquirySystemUser : operationStatus description is '+'\"'+ resultDescriptionInquirySystemUser+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionInquirySystemUser);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPost = LogDefaultValue.Other.methodPost;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameInquirySystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlInquirySystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_InquirySystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_InquirySystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : InquirySystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [InquirySystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeSuccess);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionInquirySystemUser);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        //  console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeSuccess); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionInquirySystemUser); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        // pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"                        let custom = resultDataLog.custom.endPointSummary;\r",
											"                        console.log(\"custom : : :\",custom)\r",
											"                        let countCustom = custom.length;\r",
											"\r",
											"                        // [\"db.ClientsCollection\"]\r",
											"                        let dataEndPointName = LogDefaultValue.OtherSummary.stepEndpointSummary.endPointName_InquiryUserSystem;\r",
											"                        // [\"Success:InquiryClients was successfully.\"]\r",
											"                        let dataResponseStatus = LogDefaultValue.OtherSummary.stepEndpointSummary.responseStatus_InquiryUserSystem;\r",
											"                        let countCustomStep = dataEndPointName.length;\r",
											"                        pm.expect(countCustom).to.eql(countCustomStep); \r",
											"                        for(let i=0;i<countCustomStep;i++){\r",
											"                            let no = custom[i].no;\r",
											"                            let valueEndPointName = custom[i].endPointName;\r",
											"                            let valueResponseStatus = custom[i].responseStatus;\r",
											"                            // console.log(\"i\",i);\r",
											"                            // console.log(\"valueEndPointName\",valueEndPointName);\r",
											"                            // console.log(\"valueResponseStatus\",valueResponseStatus);\r",
											"                           \r",
											"                            console.log(\"custom.length : \" + countCustom + \" = \" + countCustomStep );\r",
											"                            console.log(\"custom.no : \" + no + \" = \" + (i+1).toString() );\r",
											"                            console.log(\"custom.endPointName : \" + valueEndPointName + \" = \" + dataEndPointName[i] );\r",
											"                            console.log(\"custom.responseStatus : \" + valueResponseStatus + \" = \" + dataResponseStatus[i] );\r",
											"                           \r",
											"                            pm.expect(no).to.eql((i+1).toString()); \r",
											"                            pm.expect(valueEndPointName).to.eql(dataEndPointName[i]); \r",
											"                            pm.expect(valueResponseStatus).to.eql(dataResponseStatus[i]);  \r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                   pm.test(\"Check Detail Log : \" + endPointNameValue + \" [InquirySystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [InquirySystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                            // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/InquirySystemUser\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"InquirySystemUser_202104231404532\\\",\\\"x-ais-orderdesc\\\":\\\"InquirySystemUser\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAGP3PDNBW/95Kz2dLDjWjSzgfeuOE1HCw6+SEMwRTU8OQ==\\\"},\\\"body\\\":{\\\"SystemUserId\\\":\\\"608270f24252b400016e6466\\\"}}\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging;  \r",
											"                            let x_ais_orderref = x_ais_OrderRef_InquirySystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_InquirySystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"                            let AccountId = pm.environment.get(\"accountId_role_other\");\r",
											"                            let AuthenInfo_Username = pm.environment.get(\"AuthenInfo_Username\"); \r",
											"                            let AuthenInfo_Password = pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\"); \r",
											"                            let UserRole = pm.environment.get(\"UserRole\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);                      \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"                                              \r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPost);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPost);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"      \r",
											"                          \r",
											"                            // check responseObject\r",
											"                            //  \"responseObject\":\"{\\\"PartnerInfo\\\":[{\\\"SystemUserId\\\":\\\"608270f24252b400016e6466\\\",\\\"AccountId\\\":[\\\"608270f14252b400016e6464\\\"],\\\"AuthenInfo\\\":{\\\"Username\\\":\\\"QATester0002\\\"},\\\"UserRole\\\":[\\\"RootAdmin\\\"],\\\"CreatedDate\\\":\\\"2021-04-23T14:02:10.376+07:00\\\"}],\\\"_Metadata\\\":{\\\"TotalCount\\\":1,\\\"Limit\\\":10000,\\\"OffSet\\\":0},\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20000\\\",\\\"Description\\\":\\\"InquirySystemUser is Success\\\"}\r",
											"\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)\r",
											"\r",
											"\r",
											"                            pm.expect(jsonParseResponseObject.PartnerInfo[0].SystemUserId).to.eql(SystemUserId);       \r",
											"                            pm.expect(jsonParseResponseObject.PartnerInfo[0].AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseResponseObject.PartnerInfo[0].AuthenInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseResponseObject.PartnerInfo[0].UserRole).to.eql(UserRole);\r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeSuccess);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionInquirySystemUser);  \r",
											"\r",
											"                            console.log(\"response.PartnerInfo.PartnerInfo[0].SystemUserId : \" + jsonParseResponseObject.PartnerInfo[0].SystemUserId + \" = \" + SystemUserId);\r",
											"                            console.log(\"response.PartnerInfo.AccountId : \" + jsonParseResponseObject.PartnerInfo[0].AccountId[0] + \" = \" + AccountId);  \r",
											"                            console.log(\"response.PartnerInfo.AuthenInfo.Username : \" + jsonParseResponseObject.PartnerInfo[0].AuthenInfo.Username + \" = \" + AuthenInfo_Username); \r",
											"                            console.log(\"response.PartnerInfo.UserRole : \" + jsonParseResponseObject.PartnerInfo[0].UserRole + \" = \" + UserRole); \r",
											"                            console.log(\"response.OperationStatus.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeSuccess);\r",
											"                            console.log(\"response.OperationStatus.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionInquirySystemUser);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 20000); \r",
											"setTimeout(function(){RemoveSystemUser();}, 30000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"AuthenInfo_Username\");\r",
											"\r",
											"\r",
											"}, 40000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_InquirySystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_InquirySystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SystemUserId\": \"{{GetResponse_SystemUserId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/InquirySystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"InquirySystemUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "InquirySystemUser_TST_F34_1_1_003_Success_CustomerAdmin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"var Username2 = pm.environment.get(\"Username_CustomerAdmin\");\r",
											"var Password2 = pm.environment.get(\"Password_CustomerAdmin\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username2,\r",
											"                password:Password2\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        // setUserRoleUserRole\r",
											"        await pm.environment.set(\"UserRole\" , jsonDataSignin.UserRole);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"accountId_role_other\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    pm.environment.get(\"UserRole\")\r",
											"                    \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"      \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreateSystemUser();}, 6000);  \r",
											"setTimeout(async function(){}, 7000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"InquirySystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"    pm.response.to.have.status(statusCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('InquirySystemUser : operationStatus code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('InquirySystemUser : operationStatus description is '+'\"'+ resultDescriptionInquirySystemUser+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionInquirySystemUser);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPost = LogDefaultValue.Other.methodPost;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameInquirySystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlInquirySystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_InquirySystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_InquirySystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : InquirySystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [InquirySystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeSuccess);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionInquirySystemUser);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        //  console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeSuccess); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionInquirySystemUser); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        // pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"                        let custom = resultDataLog.custom.endPointSummary;\r",
											"                        console.log(\"custom : : :\",custom)\r",
											"                        let countCustom = custom.length;\r",
											"\r",
											"                        // [\"db.ClientsCollection\"]\r",
											"                        let dataEndPointName = LogDefaultValue.OtherSummary.stepEndpointSummary.endPointName_InquiryUserSystem;\r",
											"                        // [\"Success:InquiryClients was successfully.\"]\r",
											"                        let dataResponseStatus = LogDefaultValue.OtherSummary.stepEndpointSummary.responseStatus_InquiryUserSystem;\r",
											"                        let countCustomStep = dataEndPointName.length;\r",
											"                        pm.expect(countCustom).to.eql(countCustomStep); \r",
											"                        for(let i=0;i<countCustomStep;i++){\r",
											"                            let no = custom[i].no;\r",
											"                            let valueEndPointName = custom[i].endPointName;\r",
											"                            let valueResponseStatus = custom[i].responseStatus;\r",
											"                            // console.log(\"i\",i);\r",
											"                            // console.log(\"valueEndPointName\",valueEndPointName);\r",
											"                            // console.log(\"valueResponseStatus\",valueResponseStatus);\r",
											"                           \r",
											"                            console.log(\"custom.length : \" + countCustom + \" = \" + countCustomStep );\r",
											"                            console.log(\"custom.no : \" + no + \" = \" + (i+1).toString() );\r",
											"                            console.log(\"custom.endPointName : \" + valueEndPointName + \" = \" + dataEndPointName[i] );\r",
											"                            console.log(\"custom.responseStatus : \" + valueResponseStatus + \" = \" + dataResponseStatus[i] );\r",
											"                           \r",
											"                            pm.expect(no).to.eql((i+1).toString()); \r",
											"                            pm.expect(valueEndPointName).to.eql(dataEndPointName[i]); \r",
											"                            pm.expect(valueResponseStatus).to.eql(dataResponseStatus[i]);  \r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                   pm.test(\"Check Detail Log : \" + endPointNameValue + \" [InquirySystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [InquirySystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                            // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/InquirySystemUser\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"InquirySystemUser_202104231404532\\\",\\\"x-ais-orderdesc\\\":\\\"InquirySystemUser\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAGP3PDNBW/95Kz2dLDjWjSzgfeuOE1HCw6+SEMwRTU8OQ==\\\"},\\\"body\\\":{\\\"SystemUserId\\\":\\\"608270f24252b400016e6466\\\"}}\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging;  \r",
											"                            let x_ais_orderref = x_ais_OrderRef_InquirySystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_InquirySystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"                            let AccountId = pm.environment.get(\"accountId_role_other\");\r",
											"                            let AuthenInfo_Username = pm.environment.get(\"AuthenInfo_Username\"); \r",
											"                            let AuthenInfo_Password = pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\"); \r",
											"                            let UserRole = pm.environment.get(\"UserRole\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);                      \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"                                              \r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPost);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPost);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"      \r",
											"                          \r",
											"                            // check responseObject\r",
											"                            //  \"responseObject\":\"{\\\"PartnerInfo\\\":[{\\\"SystemUserId\\\":\\\"608270f24252b400016e6466\\\",\\\"AccountId\\\":[\\\"608270f14252b400016e6464\\\"],\\\"AuthenInfo\\\":{\\\"Username\\\":\\\"QATester0002\\\"},\\\"UserRole\\\":[\\\"RootAdmin\\\"],\\\"CreatedDate\\\":\\\"2021-04-23T14:02:10.376+07:00\\\"}],\\\"_Metadata\\\":{\\\"TotalCount\\\":1,\\\"Limit\\\":10000,\\\"OffSet\\\":0},\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20000\\\",\\\"Description\\\":\\\"InquirySystemUser is Success\\\"}\r",
											"\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)\r",
											"\r",
											"\r",
											"                            pm.expect(jsonParseResponseObject.PartnerInfo[0].SystemUserId).to.eql(SystemUserId);       \r",
											"                            pm.expect(jsonParseResponseObject.PartnerInfo[0].AccountId[0]).to.eql(AccountId);\r",
											"                            pm.expect(jsonParseResponseObject.PartnerInfo[0].AuthenInfo.Username).to.eql(AuthenInfo_Username);\r",
											"                            pm.expect(jsonParseResponseObject.PartnerInfo[0].UserRole).to.eql(UserRole);\r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeSuccess);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionInquirySystemUser);  \r",
											"\r",
											"                            console.log(\"response.PartnerInfo.PartnerInfo[0].SystemUserId : \" + jsonParseResponseObject.PartnerInfo[0].SystemUserId + \" = \" + SystemUserId);\r",
											"                            console.log(\"response.PartnerInfo.AccountId : \" + jsonParseResponseObject.PartnerInfo[0].AccountId[0] + \" = \" + AccountId);  \r",
											"                            console.log(\"response.PartnerInfo.AuthenInfo.Username : \" + jsonParseResponseObject.PartnerInfo[0].AuthenInfo.Username + \" = \" + AuthenInfo_Username); \r",
											"                            console.log(\"response.PartnerInfo.UserRole : \" + jsonParseResponseObject.PartnerInfo[0].UserRole + \" = \" + UserRole); \r",
											"                            console.log(\"response.OperationStatus.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeSuccess);\r",
											"                            console.log(\"response.OperationStatus.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionInquirySystemUser);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 20000); \r",
											"setTimeout(function(){RemoveSystemUser();}, 30000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"AuthenInfo_Username\");\r",
											"\r",
											"\r",
											"}, 40000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_InquirySystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_InquirySystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SystemUserId\": \"{{GetResponse_SystemUserId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/InquirySystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"InquirySystemUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "InquirySystemUser_TST_F34_0_2_002_Error_SystemUserIdNotObjectId",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"pm.environment.set(\"Value_InquirySystemUser_TST_F34_0_2_002_SystemUserId\",fieldDataValue.Provisioning.SystemUser.InquirySystemUser.Value_InquirySystemUser_TST_F34_0_2_002_SystemUserId)\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"//set global variable to statusCode 403\r",
											"pm.globals.set(\"statusCodeForbidden\", statusCodeList.statusCodeForbidden);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"//set global variable to resultCode \"40300\"\r",
											"pm.globals.set(\"resultCodeForbiddenMissingOrInvalidParameter\", resultCodeList.resultCodeForbiddenMissingOrInvalidParameter);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionErrorList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionErrorList = JSON.parse(pm.environment.get(\"resultDescriptionErrorList\"));\r",
											"//set global variable to resultDescription \"The SystemUserId field is not Object Id.\"\r",
											"pm.globals.set(\"resultDescriptionTheSystemUserIdFieldIsNotObjectId\", resultDescriptionErrorList.resultDescriptionTheSystemUserIdFieldIsNotObjectId)\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Create\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"      \r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"\r",
											"        console.log('jsonDataCreateAccount : :',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"GetResponse_AccountId\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username_Create\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\")\r",
											"                \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"        // console.log(\"TEST : : : : :\",pm.environment.get(\"GetResponse_SystemUserId\"))\r",
											"      \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 5000); \r",
											"setTimeout(async function(){await CreateAccount();}, 6000);\r",
											"setTimeout(async function(){await CreateSystemUser();}, 7000);  \r",
											"setTimeout(async function(){}, 8000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"//get global variable to statusCode 403\r",
											"var statusCodeForbidden = pm.globals.get(\"statusCodeForbidden\");\r",
											"//get global variable to resultCode \"40300\"\r",
											"var resultCodeForbiddenMissingOrInvalidParameter = pm.globals.get(\"resultCodeForbiddenMissingOrInvalidParameter\");\r",
											"//get global variable to resultDescription \"The SystemUserId field is not Object Id.\"\r",
											"var resultDescriptionTheSystemUserIdFieldIsNotObjectId = pm.globals.get(\"resultDescriptionTheSystemUserIdFieldIsNotObjectId\");\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"InquirySystemUser : Status code is \" + statusCodeForbidden, function () {\r",
											"    pm.response.to.have.status(statusCodeForbidden);\r",
											"});\r",
											"\r",
											"pm.test('InquirySystemUser : operationStatus code is '+'\"'+ resultCodeForbiddenMissingOrInvalidParameter +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeForbiddenMissingOrInvalidParameter);\r",
											"});\r",
											"\r",
											"pm.test('InquirySystemUser : operationStatus description is '+'\"'+ resultDescriptionTheSystemUserIdFieldIsNotObjectId+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionTheSystemUserIdFieldIsNotObjectId);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        // console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        // console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPost = LogDefaultValue.Other.methodPost;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameInquirySystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlInquirySystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_InquirySystemUser_fail + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_InquirySystemUser_fail + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : InquirySystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [InquirySystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeForbiddenMissingOrInvalidParameter);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionTheSystemUserIdFieldIsNotObjectId);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeForbiddenMissingOrInvalidParameter); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionTheSystemUserIdFieldIsNotObjectId); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"          \r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [InquirySystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [InquirySystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                            // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/InquirySystemUser\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"InquirySystemUserfail_202104231704205\\\",\\\"x-ais-orderdesc\\\":\\\"InquirySystemUser\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAGP3PDNBW/95EMJHyOwb8eaF/GHv2/kIakLJG3c2Ik+TEIlAkkY2KW0\\\"},\\\"body\\\":{\\\"SystemUserId\\\":\\\"60829de74252b400016e7245xx\\\"}}\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging;\r",
											"                            let x_ais_orderref = x_ais_OrderRef_InquirySystemUser_fail + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_InquirySystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\") + pm.environment.get(\"Value_InquirySystemUser_TST_F34_0_2_002_SystemUserId\");\r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);\r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPost);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"\r",
											"                            \r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPost);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"\r",
											"      \r",
											"                          \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"OperationStatus\\\":{\\\"Code\\\":\\\"40300\\\",\\\"Description\\\":\\\"The SystemUserId field is not Object Id.\\\"}      \r",
											"           \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\",jsonParseResponseObject)  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeForbiddenMissingOrInvalidParameter);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionTheSystemUserIdFieldIsNotObjectId);  \r",
											"\r",
											"                            console.log(\"response.OperationStatus.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeForbiddenMissingOrInvalidParameter);\r",
											"                            console.log(\"response.OperationStatus.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionTheSystemUserIdFieldIsNotObjectId);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 20000); \r",
											"setTimeout(function(){RemoveSystemUser();}, 30000);\r",
											"setTimeout(function(){RemoveAccount();}, 40000);  \r",
											"setTimeout(function(){RemovePartner();}, 50000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"Value_InquirySystemUser_TST_F34_0_2_002_SystemUserId\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Create\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"}, 60000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_InquirySystemUser_fail}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_InquirySystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SystemUserId\": \"{{GetResponse_SystemUserId}}{{Value_InquirySystemUser_TST_F34_0_2_002_SystemUserId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/InquirySystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"InquirySystemUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "InquirySystemUser_TST_F34_0_2_003_Error_Supplier",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"var Username2 = pm.environment.get(\"Username_Supplier\");\r",
											"var Password2 = pm.environment.get(\"Password_Supplier\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"//set global variable to statusCode 403\r",
											"pm.globals.set(\"statusCodeForbidden\", statusCodeList.statusCodeForbidden);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"//set global variable to resultCode \"40308\"\r",
											"pm.globals.set(\"resultCodeRoleInvalid\", resultCodeList.resultCodeRoleInvalid);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"\r",
											"//---------------- resultDescriptionErrorList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionErrorList = JSON.parse(pm.environment.get(\"resultDescriptionErrorList\"));\r",
											"//set global variable to resultDescription \"Role Invalid\"\r",
											"pm.globals.set(\"resultDescriptionRoleInvalid\", resultDescriptionErrorList.resultDescriptionRoleInvalid);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"        \r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Create\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"      \r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"\r",
											"        // console.log('jsonDataCreateAccount : :',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"GetResponse_AccountId\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username_Create\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\")\r",
											"                \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"      \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// Signin get token\r",
											"Signin2 = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username2,\r",
											"                password:Password2\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken2\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 5000); \r",
											"setTimeout(async function(){await CreateAccount();}, 8000);\r",
											"setTimeout(async function(){await CreateSystemUser();}, 9000);  \r",
											"setTimeout(async function(){await Signin2();}, 10000);\r",
											"setTimeout(async function(){}, 12000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"//get global variable to statusCode 403\r",
											"var statusCodeForbidden = pm.globals.get(\"statusCodeForbidden\");\r",
											"//get global variable to resultCode \"40308\"\r",
											"var resultCodeRoleInvalid = pm.globals.get(\"resultCodeRoleInvalid\");\r",
											"//get global variable to resultDescription \"Role Invalid\"\r",
											"var resultDescriptionRoleInvalid = pm.globals.get(\"resultDescriptionRoleInvalid\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"InquirySystemUser : Status code is \" + statusCodeForbidden, function () {\r",
											"    pm.response.to.have.status(statusCodeForbidden);\r",
											"});\r",
											"\r",
											"pm.test('InquirySystemUser : operationStatus code is '+'\"'+ resultCodeRoleInvalid +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeRoleInvalid);\r",
											"});\r",
											"\r",
											"pm.test('InquirySystemUser : operationStatus description is '+'\"'+ resultDescriptionRoleInvalid+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        // console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        // console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPost = LogDefaultValue.Other.methodPost;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameInquirySystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlInquirySystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_InquirySystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_InquirySystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : InquirySystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [InquirySystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeRoleInvalid);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"                       \r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                   pm.test(\"Check Detail Log : \" + endPointNameValue + \" [InquirySystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [InquirySystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                            // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/InquirySystemUser\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"InquirySystemUser_202104231404532\\\",\\\"x-ais-orderdesc\\\":\\\"InquirySystemUser\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAGP3PDNBW/95Kz2dLDjWjSzgfeuOE1HCw6+SEMwRTU8OQ==\\\"},\\\"body\\\":{\\\"SystemUserId\\\":\\\"608270f24252b400016e6466\\\"}}\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging;  \r",
											"                            let x_ais_orderref = x_ais_OrderRef_InquirySystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_InquirySystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken2\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);                      \r",
											"                            console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"                                              \r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPost);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPost);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"      \r",
											"                          \r",
											"                            // check responseObject\r",
											"                            //  \"responseObject\":\"{\\\"PartnerInfo\\\":[{\\\"SystemUserId\\\":\\\"608270f24252b400016e6466\\\",\\\"AccountId\\\":[\\\"608270f14252b400016e6464\\\"],\\\"AuthenInfo\\\":{\\\"Username\\\":\\\"QATester0002\\\"},\\\"UserRole\\\":[\\\"RootAdmin\\\"],\\\"CreatedDate\\\":\\\"2021-04-23T14:02:10.376+07:00\\\"}],\\\"_Metadata\\\":{\\\"TotalCount\\\":1,\\\"Limit\\\":10000,\\\"OffSet\\\":0},\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20000\\\",\\\"Description\\\":\\\"InquirySystemUser is Success\\\"}\r",
											"\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)\r",
											"\r",
											"\r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeRoleInvalid);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);  \r",
											"\r",
											"\r",
											"                            console.log(\"response.OperationStatus.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeRoleInvalid);\r",
											"                            console.log(\"response.OperationStatus.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 20000); \r",
											"setTimeout(function(){RemoveSystemUser();}, 30000);\r",
											"setTimeout(function(){RemoveAccount();}, 40000);  \r",
											"setTimeout(function(){RemovePartner();}, 50000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Create\");\r",
											"pm.environment.unset(\"AccessToken2\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"}, 60000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_InquirySystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_InquirySystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken2}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SystemUserId\": \"{{GetResponse_SystemUserId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/InquirySystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"InquirySystemUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "InquirySystemUser_TST_F34_0_2_004_Error_Customer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"var Username2 = pm.environment.get(\"Username_Customer\");\r",
											"var Password2 = pm.environment.get(\"Password_Customer\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"//set global variable to statusCode 403\r",
											"pm.globals.set(\"statusCodeForbidden\", statusCodeList.statusCodeForbidden);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"//set global variable to resultCode \"40308\"\r",
											"pm.globals.set(\"resultCodeRoleInvalid\", resultCodeList.resultCodeRoleInvalid);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionInquirySystemUser\", resultDescriptionSuccessList.resultDescriptionInquirySystemUser);\r",
											"\r",
											"//---------------- resultDescriptionErrorList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionErrorList = JSON.parse(pm.environment.get(\"resultDescriptionErrorList\"));\r",
											"//set global variable to resultDescription \"Role Invalid\"\r",
											"pm.globals.set(\"resultDescriptionRoleInvalid\", resultDescriptionErrorList.resultDescriptionRoleInvalid);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser);\r",
											"//set global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_InquirySystemUser_fail\", HeaderList.SystemUser.x_ais_OrderRef_InquirySystemUser_fail);\r",
											"//set global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_InquirySystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_InquirySystemUser);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"        \r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Create\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"      \r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"\r",
											"        // console.log('jsonDataCreateAccount : :',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"GetResponse_AccountId\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username_Create\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\")\r",
											"                \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"      \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// Signin get token\r",
											"Signin2 = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username2,\r",
											"                password:Password2\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken2\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 5000); \r",
											"setTimeout(async function(){await CreateAccount();}, 8000);\r",
											"setTimeout(async function(){await CreateSystemUser();}, 9000);  \r",
											"setTimeout(async function(){await Signin2();}, 10000);\r",
											"setTimeout(async function(){}, 12000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUser_\"\r",
											"var x_ais_OrderRef_InquirySystemUser = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser\");\r",
											"//get global variable to x_ais_OrderRef \"InquirySystemUserfail_\"\r",
											"var x_ais_OrderRef_InquirySystemUser_fail = pm.globals.get(\"x_ais_OrderRef_InquirySystemUser_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"InquirySystemUser\"\r",
											"var x_ais_OrderDesc_InquirySystemUser = pm.globals.get(\"x_ais_OrderDesc_InquirySystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"InquirySystemUser is Success\"\r",
											"var resultDescriptionInquirySystemUser = pm.globals.get(\"resultDescriptionInquirySystemUser\");\r",
											"\r",
											"//get global variable to statusCode 403\r",
											"var statusCodeForbidden = pm.globals.get(\"statusCodeForbidden\");\r",
											"//get global variable to resultCode \"40308\"\r",
											"var resultCodeRoleInvalid = pm.globals.get(\"resultCodeRoleInvalid\");\r",
											"//get global variable to resultDescription \"Role Invalid\"\r",
											"var resultDescriptionRoleInvalid = pm.globals.get(\"resultDescriptionRoleInvalid\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"InquirySystemUser : Status code is \" + statusCodeForbidden, function () {\r",
											"    pm.response.to.have.status(statusCodeForbidden);\r",
											"});\r",
											"\r",
											"pm.test('InquirySystemUser : operationStatus code is '+'\"'+ resultCodeRoleInvalid +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeRoleInvalid);\r",
											"});\r",
											"\r",
											"pm.test('InquirySystemUser : operationStatus description is '+'\"'+ resultDescriptionRoleInvalid+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        // console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        // console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPost = LogDefaultValue.Other.methodPost;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameInquirySystemUser;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlInquirySystemUserMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_InquirySystemUser + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_InquirySystemUser + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : InquirySystemUser\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [InquirySystemUser] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeRoleInvalid);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"                       \r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                   pm.test(\"Check Detail Log : \" + endPointNameValue + \" [InquirySystemUser]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [InquirySystemUser] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                            // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/InquirySystemUser\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"InquirySystemUser_202104231404532\\\",\\\"x-ais-orderdesc\\\":\\\"InquirySystemUser\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAGP3PDNBW/95Kz2dLDjWjSzgfeuOE1HCw6+SEMwRTU8OQ==\\\"},\\\"body\\\":{\\\"SystemUserId\\\":\\\"608270f24252b400016e6466\\\"}}\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging;  \r",
											"                            let x_ais_orderref = x_ais_OrderRef_InquirySystemUser + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_InquirySystemUser;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken2\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"                            let AccountId = pm.environment.get(\"GetResponse_AccountId\");\r",
											"                            let AuthenInfo_Username = pm.environment.get(\"AuthenInfo_Username_Create\"); \r",
											"                            let AuthenInfo_Password = pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\"); \r",
											"                            let UserRole = pm.environment.get(\"UserRole\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);                      \r",
											"                            console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"                                              \r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPost);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPost);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"      \r",
											"                          \r",
											"                            // check responseObject\r",
											"                            //  \"responseObject\":\"{\\\"PartnerInfo\\\":[{\\\"SystemUserId\\\":\\\"608270f24252b400016e6466\\\",\\\"AccountId\\\":[\\\"608270f14252b400016e6464\\\"],\\\"AuthenInfo\\\":{\\\"Username\\\":\\\"QATester0002\\\"},\\\"UserRole\\\":[\\\"RootAdmin\\\"],\\\"CreatedDate\\\":\\\"2021-04-23T14:02:10.376+07:00\\\"}],\\\"_Metadata\\\":{\\\"TotalCount\\\":1,\\\"Limit\\\":10000,\\\"OffSet\\\":0},\\\"OperationStatus\\\":{\\\"Code\\\":\\\"20000\\\",\\\"Description\\\":\\\"InquirySystemUser is Success\\\"}\r",
											"\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)\r",
											"\r",
											"\r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeRoleInvalid);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);  \r",
											"\r",
											"\r",
											"                            console.log(\"response.OperationStatus.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeRoleInvalid);\r",
											"                            console.log(\"response.OperationStatus.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 20000); \r",
											"setTimeout(function(){RemoveSystemUser();}, 30000);\r",
											"setTimeout(function(){RemoveAccount();}, 40000);  \r",
											"setTimeout(function(){RemovePartner();}, 50000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Create\");\r",
											"pm.environment.unset(\"AccessToken2\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"}, 60000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_InquirySystemUser}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_InquirySystemUser}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken2}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SystemUserId\": \"{{GetResponse_SystemUserId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/InquirySystemUser",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"InquirySystemUser"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ResetPassword",
					"item": [
						{
							"name": "Resetpassword_TST_F35_1_1_001_Success_RootAdmin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"ResetPassword is Success\"\r",
											"pm.globals.set(\"resultDescriptionResetPassword\", resultDescriptionSuccessList.resultDescriptionResetPassword);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"ResetPassword_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_ResetPassword\", HeaderList.SystemUser.x_ais_OrderRef_ResetPassword);\r",
											"//set global variable to x_ais_OrderRef \"ResetPasswordfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_ResetPassword_fail\", HeaderList.SystemUser.x_ais_OrderRef_ResetPassword_fail);\r",
											"//set global variable to x_ais_OrderDesc \"ResetPassword\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_ResetPassword\", HeaderList.SystemUser.x_ais_OrderDesc_ResetPassword);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"        //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Create\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"      \r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"\r",
											"        console.log('jsonDataCreateAccount : :',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"GetResponse_AccountId\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username_Create\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\")\r",
											"                \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"        // console.log(\"TEST : : : : :\",pm.environment.get(\"GetResponse_SystemUserId\"))\r",
											"      \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 5000); \r",
											"setTimeout(async function(){await CreateAccount();}, 6000);\r",
											"setTimeout(async function(){await CreateSystemUser();}, 7000);  \r",
											"setTimeout(async function(){}, 8000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"ResetPassword_\"\r",
											"var x_ais_OrderRef_ResetPassword = pm.globals.get(\"x_ais_OrderRef_ResetPassword\");\r",
											"//get global variable to x_ais_OrderRef \"ResetPasswordfail_\"\r",
											"var x_ais_OrderRef_ResetPassword_fail = pm.globals.get(\"x_ais_OrderRef_ResetPassword_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"ResetPassword\"\r",
											"var x_ais_OrderDesc_ResetPassword = pm.globals.get(\"x_ais_OrderDesc_ResetPassword\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"//---------------- get url Signin --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"ResetPassword is Success\"\r",
											"var resultDescriptionResetPassword = pm.globals.get(\"resultDescriptionResetPassword\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"NewPassword\", jsonData.NewPassword);\r",
											"\r",
											"\r",
											"pm.test(\"ResetPassword : Status code is \" + statusCodeSuccess, function () {\r",
											"    pm.response.to.have.status(statusCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('ResetPassword : operationStatus code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('ResetPassword : operationStatus description is '+'\"'+ resultDescriptionResetPassword+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionResetPassword);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPut = LogDefaultValue.Other.methodPut;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameResetPassword;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlResetPasswordMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_ResetPassword + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_ResetPassword + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : Resetpassword\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [Resetpassword] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeSuccess);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionResetPassword);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        //  console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeSuccess); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionResetPassword); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        // pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"                        let custom = resultDataLog.custom.endPointSummary;\r",
											"                        console.log(\"custom : : :\",custom)\r",
											"                        let countCustom = custom.length;\r",
											"\r",
											"                        // [\"db.ClientsCollection\",\"db.ClientsCollection\"],\r",
											"                        let dataEndPointName = LogDefaultValue.OtherSummary.stepEndpointSummary.endPointName_ResetPassword;\r",
											"                        // [\"Success:InquirySystemUser was successfully.\",\"Success:UpdateClients was successfully.\"],\r",
											"                        let dataResponseStatus = LogDefaultValue.OtherSummary.stepEndpointSummary.responseStatus_ResetPassword;\r",
											"                        let countCustomStep = dataEndPointName.length;\r",
											"                        pm.expect(countCustom).to.eql(countCustomStep); \r",
											"                        for(let i=0;i<countCustomStep;i++){\r",
											"                            let no = custom[i].no;\r",
											"                            let valueEndPointName = custom[i].endPointName;\r",
											"                            let valueResponseStatus = custom[i].responseStatus;\r",
											"                            // console.log(\"i\",i);\r",
											"                            // console.log(\"valueEndPointName\",valueEndPointName);\r",
											"                            // console.log(\"valueResponseStatus\",valueResponseStatus);\r",
											"                           \r",
											"                            console.log(\"custom.length : \" + countCustom + \" = \" + countCustomStep );\r",
											"                            console.log(\"custom.no : \" + no + \" = \" + (i+1).toString() );\r",
											"                            console.log(\"custom.endPointName : \" + valueEndPointName + \" = \" + dataEndPointName[i] );\r",
											"                            console.log(\"custom.responseStatus : \" + valueResponseStatus + \" = \" + dataResponseStatus[i] );\r",
											"                           \r",
											"                            pm.expect(no).to.eql((i+1).toString()); \r",
											"                            pm.expect(valueEndPointName).to.eql(dataEndPointName[i]); \r",
											"                            pm.expect(valueResponseStatus).to.eql(dataResponseStatus[i]);  \r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                     pm.test(\"Check Detail Log : \" + endPointNameValue + \" [Resetpassword]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [Resetpassword] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                            // \"requestObject\":\"{ \\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/Resetpassword\\\", \\\"method\\\":\\\"POST\\\", \\\"headers\\\":{ \\\"x-ais-username\\\":\\\"AisPartner\\\", \\\"x-ais-orderref\\\":\\\"ResetPassword_202104271804412\\\", \\\"x-ais-orderdesc\\\":\\\"ResetPassword\\\", \\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAGz3tsie+KV1NOoUFtf5OqmfYEwvlCwKy1GJW8SXArxaUIlAkkY2KW0\\\", \\\"x-ais-accountkey\\\":\\\"6087f42f1b7f730001d14cad\\\" }, \\\"body\\\":{ \\\"SystemUserId\\\":\\\"6087f4301b7f730001d14caf\\\" } }\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_ResetPassword + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_ResetPassword;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\");\r",
											"\r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);  \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPut);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);  \r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPut);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"                          \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{ \\\"NewPassword\\\":\\\"RGtaaXNEUzlFYw==\\\", \\\"OperationStatus\\\":{ \\\"Code\\\":\\\"20000\\\", \\\"Description\\\":\\\"ResetPassword is Success\\\" }\r",
											"\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)   \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeSuccess);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionResetPassword);  \r",
											"\r",
											"                            console.log(\"response.OperationStatus.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeSuccess);\r",
											"                            console.log(\"response.OperationStatus.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionResetPassword);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// Signin get token\r",
											"SigninNewPassword = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:pm.environment.get(\"AuthenInfo_Username_Create\"),\r",
											"                password:pm.environment.get(\"NewPassword\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        // await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        console.log(\"operationStatusSignin : : :\", operationStatusSignin)\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"SigninNewPassword : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('SigninNewPassword : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('SigninNewPassword : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 20000); \r",
											"setTimeout(function(){SigninNewPassword();}, 40000); \r",
											"setTimeout(function(){RemoveSystemUser();}, 60000);\r",
											"setTimeout(function(){RemoveAccount();}, 70000);  \r",
											"setTimeout(function(){RemovePartner();}, 90000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"NewPassword\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Create\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"}, 100000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_ResetPassword}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_ResetPassword}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-ais-AccountKey",
										"value": "{{GetResponse_AccountId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SystemUserId\": \"{{GetResponse_SystemUserId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/Resetpassword",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"Resetpassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Resetpassword_TST_F35_0_2_002_Error_x_ais_AccountKeyMissing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"//set global variable to statusCode 403\r",
											"pm.globals.set(\"statusCodeForbidden\", statusCodeList.statusCodeForbidden);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"//set global variable to resultCode \"40300\"\r",
											"pm.globals.set(\"resultCodeForbiddenMissingOrInvalidParameter\", resultCodeList.resultCodeForbiddenMissingOrInvalidParameter);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"ResetPassword is Success\"\r",
											"pm.globals.set(\"resultDescriptionResetPasswordIsSuccess\", resultDescriptionSuccessList.resultDescriptionResetPasswordIsSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionErrorList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionErrorList = JSON.parse(pm.environment.get(\"resultDescriptionErrorList\"));\r",
											"//set global variable to resultDescription \"The x_ais_AccountKey field is required.\"\r",
											"pm.globals.set(\"resultDescriptionThexaisAccountKeyFieldIsRequired\", resultDescriptionErrorList.resultDescriptionThexaisAccountKeyFieldIsRequired)\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"ResetPassword_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_ResetPassword\", HeaderList.SystemUser.x_ais_OrderRef_ResetPassword);\r",
											"//set global variable to x_ais_OrderRef \"ResetPasswordfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_ResetPassword_fail\", HeaderList.SystemUser.x_ais_OrderRef_ResetPassword_fail);\r",
											"//set global variable to x_ais_OrderDesc \"ResetPassword\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_ResetPassword\", HeaderList.SystemUser.x_ais_OrderDesc_ResetPassword);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"                //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Create\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"      \r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"\r",
											"        console.log('jsonDataCreateAccount : :',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"GetResponse_AccountId\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username_Create\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\")\r",
											"                \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"\r",
											"        // console.log(\"TEST : : : : :\",pm.environment.get(\"GetResponse_SystemUserId\"))\r",
											"      \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 5000); \r",
											"setTimeout(async function(){await CreateAccount();}, 6000);\r",
											"setTimeout(async function(){await CreateSystemUser();}, 7000);  \r",
											"setTimeout(async function(){}, 8000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"ResetPassword_\"\r",
											"var x_ais_OrderRef_ResetPassword = pm.globals.get(\"x_ais_OrderRef_ResetPassword\");\r",
											"//get global variable to x_ais_OrderRef \"ResetPasswordfail_\"\r",
											"var x_ais_OrderRef_ResetPassword_fail = pm.globals.get(\"x_ais_OrderRef_ResetPassword_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"ResetPassword\"\r",
											"var x_ais_OrderDesc_ResetPassword = pm.globals.get(\"x_ais_OrderDesc_ResetPassword\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"\r",
											"\r",
											"\r",
											"//get global variable to statusCode 403\r",
											"var statusCodeForbidden = pm.globals.get(\"statusCodeForbidden\");\r",
											"//get global variable to resultCode \"40300\"\r",
											"var resultCodeForbiddenMissingOrInvalidParameter = pm.globals.get(\"resultCodeForbiddenMissingOrInvalidParameter\");\r",
											"//get global variable to resultDescription \"The x_ais_AccountKey field is required.\"\r",
											"var resultDescriptionThexaisAccountKeyFieldIsRequired = pm.globals.get(\"resultDescriptionThexaisAccountKeyFieldIsRequired\");\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"ResetPassword : Status code is \" + statusCodeForbidden, function () {\r",
											"    pm.response.to.have.status(statusCodeForbidden);\r",
											"});\r",
											"\r",
											"pm.test('ResetPassword : operationStatus code is '+'\"'+ resultCodeForbiddenMissingOrInvalidParameter +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeForbiddenMissingOrInvalidParameter);\r",
											"});\r",
											"\r",
											"pm.test('ResetPassword : operationStatus description is '+'\"'+ resultDescriptionThexaisAccountKeyFieldIsRequired+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionThexaisAccountKeyFieldIsRequired);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        // console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        // console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPut = LogDefaultValue.Other.methodPut;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameResetPassword_02;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlResetPasswordMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_ResetPassword_fail + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_ResetPassword_fail + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : Resetpassword\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [Resetpassword] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeForbiddenMissingOrInvalidParameter);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionThexaisAccountKeyFieldIsRequired);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        //  console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeForbiddenMissingOrInvalidParameter); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionThexaisAccountKeyFieldIsRequired); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"                        \r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                    pm.test(\"Check Detail Log : \" + endPointNameValue + \" [Resetpassword]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [Resetpassword] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                            // \"requestObject\":\"{\\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/Resetpassword\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"x-ais-username\\\":\\\"AisPartner\\\",\\\"x-ais-orderref\\\":\\\"ResetPasswordfail_202104231704180\\\",\\\"x-ais-orderdesc\\\":\\\"ResetPassword\\\",\\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAGP3PDNBW/95NPknAyDL3CBbumkws7wZD6DoYgnNvJATUIlAkkY2KW0\\\",\\\"x-ais-accountkey\\\":\\\"\\\"},\\\"body\\\":{\\\"SystemUserId\\\":\\\"6082a3274252b400016e74b5\\\"}\r",
											"                            \r",
											"                           \r",
											"                            let url = urlCheckLog + requestObjectUrlStaging;  \r",
											"                            let x_ais_orderref = x_ais_OrderRef_ResetPassword_fail + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_ResetPassword;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");                    \r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\");\r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);\r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPut);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);\r",
											"\r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPut);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"      \r",
											"                          \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{\\\"OperationStatus\\\":{\\\"Code\\\":\\\"40300\\\",\\\"Description\\\":\\\"The x_ais_AccountKey field is required.\\\"}\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)  \r",
											"       \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeForbiddenMissingOrInvalidParameter);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionThexaisAccountKeyFieldIsRequired);  \r",
											"\r",
											"                            \r",
											"                            console.log(\"response.OperationStatus.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeForbiddenMissingOrInvalidParameter);\r",
											"                            console.log(\"response.OperationStatus.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionThexaisAccountKeyFieldIsRequired);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 20000); \r",
											"setTimeout(function(){RemoveSystemUser();}, 30000);\r",
											"setTimeout(function(){RemoveAccount();}, 40000);  \r",
											"setTimeout(function(){RemovePartner();}, 50000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Create\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"}, 60000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_ResetPassword_fail}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_ResetPassword}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-ais-AccountKey",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SystemUserId\": \"{{GetResponse_SystemUserId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/Resetpassword",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"Resetpassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Resetpassword_TST_F35_0_2_003_Error_SupplierAdmin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"ResetPassword is Success\"\r",
											"pm.globals.set(\"resultDescriptionResetPassword\", resultDescriptionSuccessList.resultDescriptionResetPassword);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"ResetPassword_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_ResetPassword\", HeaderList.SystemUser.x_ais_OrderRef_ResetPassword);\r",
											"//set global variable to x_ais_OrderRef \"ResetPasswordfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_ResetPassword_fail\", HeaderList.SystemUser.x_ais_OrderRef_ResetPassword_fail);\r",
											"//set global variable to x_ais_OrderDesc \"ResetPassword\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_ResetPassword\", HeaderList.SystemUser.x_ais_OrderDesc_ResetPassword);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"                //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Create\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"      \r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"\r",
											"        console.log('jsonDataCreateAccount : :',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"GetResponse_AccountId\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username_Create\") ,\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    [\"SupplierAdmin\"]\r",
											"                \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"       \r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"        // GetResponse_SystemUserUsername\r",
											"         pm.environment.set(\"UsernameSystemuser\", jsonDataCreateSystemUser.SystemUserInfo.AuthenInfo.Username);\r",
											"\r",
											"      \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 5000); \r",
											"setTimeout(async function(){await CreateAccount();}, 6000);\r",
											"setTimeout(async function(){await CreateSystemUser();}, 7000);  \r",
											"setTimeout(async function(){}, 8000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"ResetPassword_\"\r",
											"var x_ais_OrderRef_ResetPassword = pm.globals.get(\"x_ais_OrderRef_ResetPassword\");\r",
											"//get global variable to x_ais_OrderRef \"ResetPasswordfail_\"\r",
											"var x_ais_OrderRef_ResetPassword_fail = pm.globals.get(\"x_ais_OrderRef_ResetPassword_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"ResetPassword\"\r",
											"var x_ais_OrderDesc_ResetPassword = pm.globals.get(\"x_ais_OrderDesc_ResetPassword\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"//---------------- get url Signin --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"ResetPassword is Success\"\r",
											"var resultDescriptionResetPassword = pm.globals.get(\"resultDescriptionResetPassword\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"NewPassword\", jsonData.NewPassword);\r",
											"\r",
											"\r",
											"pm.test(\"ResetPassword : Status code is \" + statusCodeSuccess, function () {\r",
											"    pm.response.to.have.status(statusCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('ResetPassword : operationStatus code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('ResetPassword : operationStatus description is '+'\"'+ resultDescriptionResetPassword+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionResetPassword);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPut = LogDefaultValue.Other.methodPut;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameResetPassword;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlResetPasswordMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_ResetPassword + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_ResetPassword + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : Resetpassword\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [Resetpassword] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeSuccess);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionResetPassword);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        //  console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeSuccess); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionResetPassword); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        // pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"                        let custom = resultDataLog.custom.endPointSummary;\r",
											"                        console.log(\"custom : : :\",custom)\r",
											"                        let countCustom = custom.length;\r",
											"\r",
											"                        // [\"db.ClientsCollection\",\"db.ClientsCollection\"],\r",
											"                        let dataEndPointName = LogDefaultValue.OtherSummary.stepEndpointSummary.endPointName_ResetPassword;\r",
											"                        // [\"Success:InquirySystemUser was successfully.\",\"Success:UpdateClients was successfully.\"],\r",
											"                        let dataResponseStatus = LogDefaultValue.OtherSummary.stepEndpointSummary.responseStatus_ResetPassword;\r",
											"                        let countCustomStep = dataEndPointName.length;\r",
											"                        pm.expect(countCustom).to.eql(countCustomStep); \r",
											"                        for(let i=0;i<countCustomStep;i++){\r",
											"                            let no = custom[i].no;\r",
											"                            let valueEndPointName = custom[i].endPointName;\r",
											"                            let valueResponseStatus = custom[i].responseStatus;\r",
											"                            // console.log(\"i\",i);\r",
											"                            // console.log(\"valueEndPointName\",valueEndPointName);\r",
											"                            // console.log(\"valueResponseStatus\",valueResponseStatus);\r",
											"                           \r",
											"                            console.log(\"custom.length : \" + countCustom + \" = \" + countCustomStep );\r",
											"                            console.log(\"custom.no : \" + no + \" = \" + (i+1).toString() );\r",
											"                            console.log(\"custom.endPointName : \" + valueEndPointName + \" = \" + dataEndPointName[i] );\r",
											"                            console.log(\"custom.responseStatus : \" + valueResponseStatus + \" = \" + dataResponseStatus[i] );\r",
											"                           \r",
											"                            pm.expect(no).to.eql((i+1).toString()); \r",
											"                            pm.expect(valueEndPointName).to.eql(dataEndPointName[i]); \r",
											"                            pm.expect(valueResponseStatus).to.eql(dataResponseStatus[i]);  \r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                     pm.test(\"Check Detail Log : \" + endPointNameValue + \" [Resetpassword]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [Resetpassword] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                            // \"requestObject\":\"{ \\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/Resetpassword\\\", \\\"method\\\":\\\"POST\\\", \\\"headers\\\":{ \\\"x-ais-username\\\":\\\"AisPartner\\\", \\\"x-ais-orderref\\\":\\\"ResetPassword_202104271804412\\\", \\\"x-ais-orderdesc\\\":\\\"ResetPassword\\\", \\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAGz3tsie+KV1NOoUFtf5OqmfYEwvlCwKy1GJW8SXArxaUIlAkkY2KW0\\\", \\\"x-ais-accountkey\\\":\\\"6087f42f1b7f730001d14cad\\\" }, \\\"body\\\":{ \\\"SystemUserId\\\":\\\"6087f4301b7f730001d14caf\\\" } }\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_ResetPassword + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_ResetPassword;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\");\r",
											"\r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);  \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPut);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);  \r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPut);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"                          \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{ \\\"NewPassword\\\":\\\"RGtaaXNEUzlFYw==\\\", \\\"OperationStatus\\\":{ \\\"Code\\\":\\\"20000\\\", \\\"Description\\\":\\\"ResetPassword is Success\\\" }\r",
											"\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)   \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeSuccess);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionResetPassword);  \r",
											"\r",
											"                            console.log(\"response.OperationStatus.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeSuccess);\r",
											"                            console.log(\"response.OperationStatus.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionResetPassword);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// Signin get token\r",
											"SigninNewPassword = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:pm.environment.get(\"UsernameSystemuser\"),\r",
											"                password:pm.environment.get(\"NewPassword\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        // await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        console.log(\"operationStatusSignin : : :\", operationStatusSignin)\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"SigninNewPassword : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('SigninNewPassword : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('SigninNewPassword : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 20000); \r",
											"setTimeout(function(){SigninNewPassword();}, 40000); \r",
											"setTimeout(function(){RemoveSystemUser();}, 60000);\r",
											"setTimeout(function(){RemoveAccount();}, 70000);  \r",
											"setTimeout(function(){RemovePartner();}, 90000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"NewPassword\");\r",
											"pm.environment.unset(\"UsernameSystemuser\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Create\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"}, 100000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_ResetPassword}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_ResetPassword}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-ais-AccountKey",
										"value": "{{GetResponse_AccountId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SystemUserId\": \"{{GetResponse_SystemUserId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/Resetpassword",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"Resetpassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Resetpassword_TST_F35_0_2_004_Error_CustomerAdmin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"ResetPassword is Success\"\r",
											"pm.globals.set(\"resultDescriptionResetPassword\", resultDescriptionSuccessList.resultDescriptionResetPassword);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"ResetPassword_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_ResetPassword\", HeaderList.SystemUser.x_ais_OrderRef_ResetPassword);\r",
											"//set global variable to x_ais_OrderRef \"ResetPasswordfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_ResetPassword_fail\", HeaderList.SystemUser.x_ais_OrderRef_ResetPassword_fail);\r",
											"//set global variable to x_ais_OrderDesc \"ResetPassword\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_ResetPassword\", HeaderList.SystemUser.x_ais_OrderDesc_ResetPassword);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"                //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Create\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"      \r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"\r",
											"        console.log('jsonDataCreateAccount : :',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"GetResponse_AccountId\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username_Create\") ,\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    [\"CustomerAdmin\"]\r",
											"                \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"       \r",
											"\r",
											"     \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"        // GetResponse_SystemUserUsername\r",
											"         pm.environment.set(\"UsernameSystemuser\", jsonDataCreateSystemUser.SystemUserInfo.AuthenInfo.Username);\r",
											"\r",
											"      \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 5000); \r",
											"setTimeout(async function(){await CreateAccount();}, 6000);\r",
											"setTimeout(async function(){await CreateSystemUser();}, 7000);  \r",
											"setTimeout(async function(){}, 8000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"ResetPassword_\"\r",
											"var x_ais_OrderRef_ResetPassword = pm.globals.get(\"x_ais_OrderRef_ResetPassword\");\r",
											"//get global variable to x_ais_OrderRef \"ResetPasswordfail_\"\r",
											"var x_ais_OrderRef_ResetPassword_fail = pm.globals.get(\"x_ais_OrderRef_ResetPassword_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"ResetPassword\"\r",
											"var x_ais_OrderDesc_ResetPassword = pm.globals.get(\"x_ais_OrderDesc_ResetPassword\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"//---------------- get url Signin --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"ResetPassword is Success\"\r",
											"var resultDescriptionResetPassword = pm.globals.get(\"resultDescriptionResetPassword\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"NewPassword\", jsonData.NewPassword);\r",
											"\r",
											"\r",
											"pm.test(\"ResetPassword : Status code is \" + statusCodeSuccess, function () {\r",
											"    pm.response.to.have.status(statusCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('ResetPassword : operationStatus code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeSuccess);\r",
											"});\r",
											"\r",
											"pm.test('ResetPassword : operationStatus description is '+'\"'+ resultDescriptionResetPassword+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionResetPassword);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPut = LogDefaultValue.Other.methodPut;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameResetPassword;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlResetPasswordMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_ResetPassword + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_ResetPassword + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : Resetpassword\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [Resetpassword] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeSuccess);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionResetPassword);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        //  console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeSuccess); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionResetPassword); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        // pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"                        let custom = resultDataLog.custom.endPointSummary;\r",
											"                        console.log(\"custom : : :\",custom)\r",
											"                        let countCustom = custom.length;\r",
											"\r",
											"                        // [\"db.ClientsCollection\",\"db.ClientsCollection\"],\r",
											"                        let dataEndPointName = LogDefaultValue.OtherSummary.stepEndpointSummary.endPointName_ResetPassword;\r",
											"                        // [\"Success:InquirySystemUser was successfully.\",\"Success:UpdateClients was successfully.\"],\r",
											"                        let dataResponseStatus = LogDefaultValue.OtherSummary.stepEndpointSummary.responseStatus_ResetPassword;\r",
											"                        let countCustomStep = dataEndPointName.length;\r",
											"                        pm.expect(countCustom).to.eql(countCustomStep); \r",
											"                        for(let i=0;i<countCustomStep;i++){\r",
											"                            let no = custom[i].no;\r",
											"                            let valueEndPointName = custom[i].endPointName;\r",
											"                            let valueResponseStatus = custom[i].responseStatus;\r",
											"                            // console.log(\"i\",i);\r",
											"                            // console.log(\"valueEndPointName\",valueEndPointName);\r",
											"                            // console.log(\"valueResponseStatus\",valueResponseStatus);\r",
											"                           \r",
											"                            console.log(\"custom.length : \" + countCustom + \" = \" + countCustomStep );\r",
											"                            console.log(\"custom.no : \" + no + \" = \" + (i+1).toString() );\r",
											"                            console.log(\"custom.endPointName : \" + valueEndPointName + \" = \" + dataEndPointName[i] );\r",
											"                            console.log(\"custom.responseStatus : \" + valueResponseStatus + \" = \" + dataResponseStatus[i] );\r",
											"                           \r",
											"                            pm.expect(no).to.eql((i+1).toString()); \r",
											"                            pm.expect(valueEndPointName).to.eql(dataEndPointName[i]); \r",
											"                            pm.expect(valueResponseStatus).to.eql(dataResponseStatus[i]);  \r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                     pm.test(\"Check Detail Log : \" + endPointNameValue + \" [Resetpassword]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [Resetpassword] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                            // \"requestObject\":\"{ \\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/Resetpassword\\\", \\\"method\\\":\\\"POST\\\", \\\"headers\\\":{ \\\"x-ais-username\\\":\\\"AisPartner\\\", \\\"x-ais-orderref\\\":\\\"ResetPassword_202104271804412\\\", \\\"x-ais-orderdesc\\\":\\\"ResetPassword\\\", \\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAGz3tsie+KV1NOoUFtf5OqmfYEwvlCwKy1GJW8SXArxaUIlAkkY2KW0\\\", \\\"x-ais-accountkey\\\":\\\"6087f42f1b7f730001d14cad\\\" }, \\\"body\\\":{ \\\"SystemUserId\\\":\\\"6087f4301b7f730001d14caf\\\" } }\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_ResetPassword + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_ResetPassword;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\");\r",
											"\r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);  \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPut);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);  \r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPut);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"                          \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{ \\\"NewPassword\\\":\\\"RGtaaXNEUzlFYw==\\\", \\\"OperationStatus\\\":{ \\\"Code\\\":\\\"20000\\\", \\\"Description\\\":\\\"ResetPassword is Success\\\" }\r",
											"\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)   \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeSuccess);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionResetPassword);  \r",
											"\r",
											"                            console.log(\"response.OperationStatus.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeSuccess);\r",
											"                            console.log(\"response.OperationStatus.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionResetPassword);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// Signin get token\r",
											"SigninNewPassword = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:pm.environment.get(\"UsernameSystemuser\"),\r",
											"                password:pm.environment.get(\"NewPassword\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        // await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        console.log(\"operationStatusSignin : : :\", operationStatusSignin)\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"SigninNewPassword : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('SigninNewPassword : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('SigninNewPassword : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 20000); \r",
											"setTimeout(function(){SigninNewPassword();}, 40000); \r",
											"setTimeout(function(){RemoveSystemUser();}, 60000);\r",
											"setTimeout(function(){RemoveAccount();}, 70000);  \r",
											"setTimeout(function(){RemovePartner();}, 90000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"NewPassword\");\r",
											"pm.environment.unset(\"UsernameSystemuser\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Create\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"}, 100000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_ResetPassword}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_ResetPassword}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-ais-AccountKey",
										"value": "{{GetResponse_AccountId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SystemUserId\": \"{{GetResponse_SystemUserId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/Resetpassword",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"Resetpassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Resetpassword_TST_F35_0_2_005_Error_Supplier",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"//set global variable to statusCode 403\r",
											"pm.globals.set(\"statusCodeForbidden\", statusCodeList.statusCodeForbidden);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"//set global variable to resultCode \"40308\"\r",
											"pm.globals.set(\"resultCodeRoleInvalid\", resultCodeList.resultCodeRoleInvalid);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"ResetPassword is Success\"\r",
											"pm.globals.set(\"resultDescriptionResetPassword\", resultDescriptionSuccessList.resultDescriptionResetPassword);\r",
											"\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionErrorList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionErrorList = JSON.parse(pm.environment.get(\"resultDescriptionErrorList\"));\r",
											"//set global variable to resultDescription \"Role Invalid\"\r",
											"pm.globals.set(\"resultDescriptionRoleInvalid\", resultDescriptionErrorList.resultDescriptionRoleInvalid);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"ResetPassword_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_ResetPassword\", HeaderList.SystemUser.x_ais_OrderRef_ResetPassword);\r",
											"//set global variable to x_ais_OrderRef \"ResetPasswordfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_ResetPassword_fail\", HeaderList.SystemUser.x_ais_OrderRef_ResetPassword_fail);\r",
											"//set global variable to x_ais_OrderDesc \"ResetPassword\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_ResetPassword\", HeaderList.SystemUser.x_ais_OrderDesc_ResetPassword);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"                //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Create\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"      \r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"\r",
											"        // console.log('jsonDataCreateAccount : :',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"GetResponse_AccountId\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username_Create\"),\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    [\"Supplier\"]\r",
											"             \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"   \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"        // GetResponse_SystemUserUsername\r",
											"         pm.environment.set(\"UsernameSystemuser\", jsonDataCreateSystemUser.SystemUserInfo.AuthenInfo.Username);\r",
											"\r",
											"\r",
											"      \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// Signin get token\r",
											"Signin2 = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:pm.environment.get(\"UsernameSystemuser\"),\r",
											"                password:pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken2\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 5000); \r",
											"setTimeout(async function(){await CreateAccount();}, 6000);\r",
											"setTimeout(async function(){await CreateSystemUser();}, 7000);  \r",
											"setTimeout(async function(){await Signin2();}, 8000);  \r",
											"setTimeout(async function(){}, 9000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"ResetPassword_\"\r",
											"var x_ais_OrderRef_ResetPassword = pm.globals.get(\"x_ais_OrderRef_ResetPassword\");\r",
											"//get global variable to x_ais_OrderRef \"ResetPasswordfail_\"\r",
											"var x_ais_OrderRef_ResetPassword_fail = pm.globals.get(\"x_ais_OrderRef_ResetPassword_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"ResetPassword\"\r",
											"var x_ais_OrderDesc_ResetPassword = pm.globals.get(\"x_ais_OrderDesc_ResetPassword\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"//---------------- get url Signin --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"ResetPassword is Success\"\r",
											"var resultDescriptionResetPassword = pm.globals.get(\"resultDescriptionResetPassword\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"\r",
											"\r",
											"//get global variable to statusCode 403\r",
											"var statusCodeForbidden = pm.globals.get(\"statusCodeForbidden\");\r",
											"//get global variable to resultCode \"40308\"\r",
											"var resultCodeRoleInvalid = pm.globals.get(\"resultCodeRoleInvalid\");\r",
											"//get global variable to resultDescription \"Role Invalid\"\r",
											"var resultDescriptionRoleInvalid = pm.globals.get(\"resultDescriptionRoleInvalid\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"ResetPassword : Status code is \" + statusCodeForbidden, function () {\r",
											"    pm.response.to.have.status(statusCodeForbidden);\r",
											"});\r",
											"\r",
											"pm.test('ResetPassword : operationStatus code is '+'\"'+ resultCodeRoleInvalid +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeRoleInvalid);\r",
											"});\r",
											"\r",
											"pm.test('ResetPassword : operationStatus description is '+'\"'+ resultDescriptionRoleInvalid+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPut = LogDefaultValue.Other.methodPut;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameResetPassword_02;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlResetPasswordMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_ResetPassword + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_ResetPassword + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : Resetpassword\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [Resetpassword] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeRoleInvalid);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"                        \r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                     pm.test(\"Check Detail Log : \" + endPointNameValue + \" [Resetpassword]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [Resetpassword] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                            // \"requestObject\":\"{ \\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/Resetpassword\\\", \\\"method\\\":\\\"POST\\\", \\\"headers\\\":{ \\\"x-ais-username\\\":\\\"AisPartner\\\", \\\"x-ais-orderref\\\":\\\"ResetPassword_202104271804412\\\", \\\"x-ais-orderdesc\\\":\\\"ResetPassword\\\", \\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAGz3tsie+KV1NOoUFtf5OqmfYEwvlCwKy1GJW8SXArxaUIlAkkY2KW0\\\", \\\"x-ais-accountkey\\\":\\\"6087f42f1b7f730001d14cad\\\" }, \\\"body\\\":{ \\\"SystemUserId\\\":\\\"6087f4301b7f730001d14caf\\\" } }\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_ResetPassword + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_ResetPassword;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken2\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\");\r",
											"\r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);  \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPut);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);  \r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPut);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"                          \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{ \\\"NewPassword\\\":\\\"RGtaaXNEUzlFYw==\\\", \\\"OperationStatus\\\":{ \\\"Code\\\":\\\"20000\\\", \\\"Description\\\":\\\"ResetPassword is Success\\\" }\r",
											"\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)   \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeRoleInvalid);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);  \r",
											"\r",
											"                            console.log(\"response.OperationStatus.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeRoleInvalid);\r",
											"                            console.log(\"response.OperationStatus.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 10000); \r",
											"setTimeout(function(){CheckLog();}, 40000); \r",
											"setTimeout(function(){RemoveSystemUser();}, 60000);\r",
											"setTimeout(function(){RemoveAccount();}, 70000);  \r",
											"setTimeout(function(){RemovePartner();}, 90000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"NewPassword\");\r",
											"pm.environment.unset(\"UsernameSystemuser\");\r",
											"pm.environment.unset(\"PasswordSystemuser\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Create\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"}, 100000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_ResetPassword}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_ResetPassword}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken2}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-ais-AccountKey",
										"value": "{{GetResponse_AccountId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SystemUserId\": \"{{GetResponse_SystemUserId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/Resetpassword",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"Resetpassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Resetpassword_TST_F35_0_2_006_Error_Customer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var Username = pm.environment.get(\"Username\");\r",
											"var Password = pm.environment.get(\"Password\");\r",
											"\r",
											"\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"pm.environment.set(\"PartnerTypeValue\",fieldDataValue.Partner.PartnerTypeValue)\r",
											"pm.environment.set(\"PropertyRouteEngineValue\",fieldDataValue.Partner.PropertyRouteEngineValue)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password)\r",
											"pm.environment.set(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\",fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_UserRole)\r",
											"\r",
											"\r",
											"\r",
											"//format YYYYMMDDHHMMSSS\r",
											"var currentTmestamp = moment().format(fieldDataValue.Other.format_current_timestamp);\r",
											"// console.log('currentTmestamp',currentTmestamp);\r",
											"pm.environment.set(\"current_timestamp\", currentTmestamp);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- statusCodeList --------------//\r",
											"//set variable to statusCodeList JSON.parse\r",
											"var statusCodeList = JSON.parse(pm.environment.get(\"statusCodeList\"));\r",
											"//set global variable to statusCode 200\r",
											"pm.globals.set(\"statusCodeSuccess\", statusCodeList.statusCodeSuccess);\r",
											"//set global variable to statusCode 201\r",
											"pm.globals.set(\"statusCodeCreatedSuccess\", statusCodeList.statusCodeCreatedSuccess);\r",
											"//set global variable to statusCode 403\r",
											"pm.globals.set(\"statusCodeForbidden\", statusCodeList.statusCodeForbidden);\r",
											"\r",
											"\r",
											"//---------------- resultCodeList --------------//\r",
											"//set variable to resultCodeList JSON.parse\r",
											"var resultCodeList = JSON.parse(pm.environment.get(\"resultCodeList\"));\r",
											"//set global variable to resultCode \"20000\"\r",
											"pm.globals.set(\"resultCodeSuccess\", resultCodeList.resultCodeSuccess);\r",
											"//set global variable to resultCode \"20100\"\r",
											"pm.globals.set(\"resultCodeCreatedSuccess\", resultCodeList.resultCodeCreatedSuccess);\r",
											"//set global variable to resultCode \"40308\"\r",
											"pm.globals.set(\"resultCodeRoleInvalid\", resultCodeList.resultCodeRoleInvalid);\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionSuccessList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionSuccessList = JSON.parse(pm.environment.get(\"resultDescriptionSuccessList\"));\r",
											"//set global variable to resultDescription \"SignInProcess is Success\"\r",
											"pm.globals.set(\"resultDescriptionSuccessSignIn\", resultDescriptionSuccessList.resultDescriptionSuccessSignIn);\r",
											"//set global variable to resultDescription \"CreatePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreatePartner\", resultDescriptionSuccessList.resultDescriptionCreatePartner);\r",
											"//set global variable to resultDescription \"RemovePartner is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemovePartner\", resultDescriptionSuccessList.resultDescriptionRemovePartner);\r",
											"//set global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateSystemUser\", resultDescriptionSuccessList.resultDescriptionCreateSystemUser);\r",
											"//set global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveSystemUser\", resultDescriptionSuccessList.resultDescriptionRemoveSystemUser);\r",
											"//set global variable to resultDescription \"CreateAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionCreateAccount\", resultDescriptionSuccessList.resultDescriptionCreateAccount);\r",
											"//set global variable to resultDescription \"RemoveAccount is Success\"\r",
											"pm.globals.set(\"resultDescriptionRemoveAccount\", resultDescriptionSuccessList.resultDescriptionRemoveAccount);\r",
											"//set global variable to resultDescription \"ResetPassword is Success\"\r",
											"pm.globals.set(\"resultDescriptionResetPassword\", resultDescriptionSuccessList.resultDescriptionResetPassword);\r",
											"\r",
											"\r",
											"\r",
											"//---------------- resultDescriptionErrorList --------------//\r",
											"//set variable to resultDescriptionList JSON.parse\r",
											"var resultDescriptionErrorList = JSON.parse(pm.environment.get(\"resultDescriptionErrorList\"));\r",
											"//set global variable to resultDescription \"Role Invalid\"\r",
											"pm.globals.set(\"resultDescriptionRoleInvalid\", resultDescriptionErrorList.resultDescriptionRoleInvalid);\r",
											"                                                                                        \r",
											"\r",
											"//---------------- HeaderList --------------//\r",
											"//set variable to HeaderList JSON.parse\r",
											"var HeaderList = JSON.parse(pm.environment.get(\"HeaderList\"));\r",
											"//---------------- set globals Other --------------//\r",
											"//set global variable to x_ais_OrderRef \"AisPartner\"\r",
											"pm.globals.set(\"x_ais_UserName_AisPartner\", HeaderList.Other.x_ais_UserName_AisPartner);\r",
											"//set global variable to x_ais_OrderRef \"User Authentication\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_UserAuthentication\", HeaderList.Other.x_ais_OrderDesc_UserAuthentication);\r",
											"//set global variable to kbn-versio \"7.5.1\"\r",
											"pm.globals.set(\"kbn_version\", HeaderList.Other.kbn_version);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals Signin_ --------------//\r",
											"//set global variable to x_ais_OrderRef \"Signin_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_Signin\", HeaderList.Signin.x_ais_OrderRef_Signin);\r",
											"//------------------------------------------------------------//\r",
											"//---------------- set globals CreatePartner --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreatePartner\", HeaderList.Partner.x_ais_OrderRef_CreatePartner);\r",
											"//set global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreatePartner\", HeaderList.Partner.x_ais_OrderDesc_CreatePartner);\r",
											"//set global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemovePartner\", HeaderList.Partner.x_ais_OrderRef_RemovePartner);\r",
											"//set global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemovePartner\", HeaderList.Partner.x_ais_OrderDesc_RemovePartner);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- set globals CreateAccount --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateAccount\", HeaderList.Account.x_ais_OrderRef_CreateAccount);\r",
											"//set global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateAccount\", HeaderList.Account.x_ais_OrderDesc_CreateAccount);\r",
											"//set global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveAccount\", HeaderList.Account.x_ais_OrderRef_RemoveAccount);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveAccount\", HeaderList.Account.x_ais_OrderDesc_RemoveAccount);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals CreateSystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"CreateSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_CreateSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_CreateSystemUser);\r",
											"//set global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderRef_RemoveSystemUser);\r",
											"//set global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_RemoveSystemUser\", HeaderList.SystemUser.x_ais_OrderDesc_RemoveSystemUser);\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- set globals SystemUser --------------//\r",
											"//set global variable to x_ais_OrderRef \"ResetPassword_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_ResetPassword\", HeaderList.SystemUser.x_ais_OrderRef_ResetPassword);\r",
											"//set global variable to x_ais_OrderRef \"ResetPasswordfail_\"\r",
											"pm.globals.set(\"x_ais_OrderRef_ResetPassword_fail\", HeaderList.SystemUser.x_ais_OrderRef_ResetPassword_fail);\r",
											"//set global variable to x_ais_OrderDesc \"ResetPassword\"\r",
											"pm.globals.set(\"x_ais_OrderDesc_ResetPassword\", HeaderList.SystemUser.x_ais_OrderDesc_ResetPassword);\r",
											"\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to statusCode 201\r",
											"var statusCodeCreatedSuccess = pm.globals.get(\"statusCodeCreatedSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultCode \"20100\"\r",
											"var resultCodeCreatedSuccess = pm.globals.get(\"resultCodeCreatedSuccess\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"//get global variable to resultDescription \"CreatePartner is Success\"\r",
											"var resultDescriptionCreatePartner = pm.globals.get(\"resultDescriptionCreatePartner\");\r",
											"//get global variable to resultDescription \"CreateAccount is Success\"\r",
											"var resultDescriptionCreateAccount = pm.globals.get(\"resultDescriptionCreateAccount\");\r",
											"//get global variable to resultDescription \"CreateSystemUser is Success\"\r",
											"var resultDescriptionCreateSystemUser = pm.globals.get(\"resultDescriptionCreateSystemUser\");\r",
											"\r",
											"//---------------- urlRouteList --------------//\r",
											"//set variable to urlRouteList JSON.parse\r",
											"var urlRouteList = JSON.parse(pm.environment.get(\"urlRouteList\"));\r",
											"//---------------- set url Create --------------//\r",
											"//set global variable to url \"/api/v1/auth/signin\"\r",
											"pm.globals.set(\"urlSignin\", urlRouteList.Signin.urlSignin);\r",
											"//set global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"pm.globals.set(\"urlPartnerCreatePartner\", urlRouteList.Partner.urlPartnerCreatePartner);\r",
											"//set global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"pm.globals.set(\"urlAccountCreateAccount\", urlRouteList.Account.urlAccountCreateAccount);\r",
											"//set global variable to url \"/api/v1/Account/CreateSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserCreateSystemUser\", urlRouteList.SystemUser.urlSystemUserCreateSystemUser);\r",
											"\r",
											"//---------------- get url Create --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"//get global variable to url \"/api/v1/Partner/CreatePartner\"\r",
											"var urlPartnerCreatePartner = pm.globals.get(\"urlPartnerCreatePartner\");\r",
											"//get global variable to url \"/api/v1/Account/CreateAccount\"\r",
											"var urlAccountCreateAccount = pm.globals.get(\"urlAccountCreateAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/CreateSystemUser\"\r",
											"var urlSystemUserCreateSystemUser = pm.globals.get(\"urlSystemUserCreateSystemUser\");\r",
											"\r",
											"//---------------- set url Remove --------------//\r",
											"//set global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"pm.globals.set(\"urlPartnerRemovePartner\", urlRouteList.Partner.urlPartnerRemovePartner);\r",
											"//set global variable to url \"/api/v1/Remove/RemoveAccount\"\r",
											"pm.globals.set(\"urlAccountRemoveAccount\", urlRouteList.Account.urlAccountRemoveAccount);\r",
											"//set global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"pm.globals.set(\"urlSystemUserRemoveSystemUser\", urlRouteList.SystemUser.urlSystemUserRemoveSystemUser);\r",
											"\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"//---------------- get globals Signin_ --------------//\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreatePartner_\"\r",
											"var x_ais_OrderRef_CreatePartner = pm.globals.get(\"x_ais_OrderRef_CreatePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"CreatePartner\"\r",
											"var x_ais_OrderDesc_CreatePartner = pm.globals.get(\"x_ais_OrderDesc_CreatePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateAccount_\"\r",
											"var x_ais_OrderRef_CreateAccount = pm.globals.get(\"x_ais_OrderRef_CreateAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateAccount\"\r",
											"var x_ais_OrderDesc_CreateAccount = pm.globals.get(\"x_ais_OrderDesc_CreateAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"CreateSystemUer_\"\r",
											"var x_ais_OrderRef_CreateSystemUser = pm.globals.get(\"x_ais_OrderRef_CreateSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"CreateSystemUser\"\r",
											"var x_ais_OrderDesc_CreateSystemUser = pm.globals.get(\"x_ais_OrderDesc_CreateSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"// Signin get token\r",
											" Signin = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:Username,\r",
											"                password:Password\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"\r",
											"        //set random_number\r",
											"        pm.environment.set(\"random_number\", pm.variables.replaceIn('{{$randomInt}}{{$randomInt}}'))\r",
											"        //set PartnerName\r",
											"         let partnerNameValue = fieldDataValue.Partner.PartnerNameValue; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"PartnerName\", partnerNameValue + pm.environment.get(\"random_number\"))\r",
											"        //set MerchantContact\r",
											"        let merchantContactValue = fieldDataValue.Partner.MerchantContactValue; // \"Jida_TestMerchantContact@ais.co.th\"\r",
											"        pm.environment.set(\"MerchantContact\", merchantContactValue)\r",
											"        // set CPID\r",
											"        let CPIDValue = fieldDataValue.Partner.CPIDValue; // \"Jida_TesCPID@ais.co.th\"\r",
											"        pm.environment.set(\"CPID\", CPIDValue)\r",
											"\r",
											"                //set Username\r",
											"        let userNameValue = fieldDataValue.Provisioning.SystemUser.CreateSystemUser.Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username; // \"Jida_TestPartnerName\"\r",
											"        pm.environment.set(\"AuthenInfo_Username_Create\", userNameValue + pm.environment.get(\"random_number\"))\r",
											"        \r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreatePartner\r",
											" CreatePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreatePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreatePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreatePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreatePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerName\": pm.environment.get(\"PartnerName\"),\r",
											"                \"PartnerType\": pm.environment.get(\"PartnerTypeValue\"),\r",
											"                \"PartnerDetail\": {\r",
											"                    \"MerchantContact\": pm.environment.get(\"MerchantContact\"),\r",
											"                    \"CPID\": pm.environment.get(\"CPID\")\r",
											"                },\r",
											"                \"Property\": {\r",
											"                    \"RouteEngine\": pm.environment.get(\"PropertyRouteEngineValue\") //false\r",
											"                }\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsCreatePartner = {\r",
											"            url: url + provisioningapis + urlPartnerCreatePartner,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreatePartner,\r",
											"            body: httpRequestCreatePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsCreatePartner);\r",
											"        let jsonDataCreatePartner = await response.json();\r",
											"        // console.log('jsonDataCreatePartner',jsonDataCreatePartner)\r",
											"    \r",
											"        let operationStatusCreatePartner = await jsonDataCreatePartner.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreatePartner : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreatePartner : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreatePartner is Success\r",
											"        pm.test('CreatePartner : OperationStatus Description is '+'\"'+ resultDescriptionCreatePartner+'\"', function () {\r",
											"            pm.expect(operationStatusCreatePartner).to.have.property('Description', resultDescriptionCreatePartner);\r",
											"        });\r",
											"\r",
											"      \r",
											"        //GetResponse_PartnerId\r",
											"        pm.environment.set(\"GetResponse_PartnerId\", jsonDataCreatePartner.PartnerInfo.PartnerId);\r",
											"\r",
											"        //GetResponse_CustomerId\r",
											"        pm.environment.set(\"GetResponse_CustomerId\", jsonDataCreatePartner.PartnerInfo.CustomerId);\r",
											"\r",
											"        //Accountname\r",
											"        let accountNameValue = fieldDataValue.Account.AccountNameValue; // \"Jida_TestAccountname\"\r",
											"        pm.environment.set(\"AccountName\", accountNameValue + pm.environment.get(\"random_number\"))\r",
											"\r",
											"        \r",
											"        \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateAccount\r",
											" CreateAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountName\": pm.environment.get(\"AccountName\")\r",
											"                })\r",
											"        };\r",
											"\r",
											"        // console.log(\"httpRequestCreateAccount : : : :\", httpRequestCreateAccount)\r",
											"        \r",
											"        let optionsCreateAccount = {\r",
											"            url: url + provisioningapis + urlAccountCreateAccount,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateAccount,\r",
											"            body: httpRequestCreateAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request CreateAccount');\r",
											"        let response = await reqPromise(optionsCreateAccount);\r",
											"        let jsonDataCreateAccount = await response.json();\r",
											"\r",
											"        // console.log('jsonDataCreateAccount : :',jsonDataCreateAccount)\r",
											"    \r",
											"        let operationStatusCreateAccount = await jsonDataCreateAccount.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateAccount : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateAccount : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateAccount is Success\r",
											"        pm.test('CreateAccount : OperationStatus Description is '+'\"'+ resultDescriptionCreateAccount+'\"', function () {\r",
											"            pm.expect(operationStatusCreateAccount).to.have.property('Description', resultDescriptionCreateAccount);\r",
											"        });\r",
											"        // GetResponse_AccountName\r",
											"        pm.environment.set(\"GetResponse_AccountName\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountName)\r",
											"        // GetResponse_AccountId\r",
											"        pm.environment.set(\"GetResponse_AccountId\",jsonDataCreateAccount.PartnerInfo.AccountInfo[0].AccountId)\r",
											"\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// CreateSystemUser\r",
											" CreateSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCreateSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_CreateSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_CreateSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestCreateSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({         \r",
											"                \"AccountId\": [\r",
											"                    pm.environment.get(\"GetResponse_AccountId\")\r",
											"                ],\r",
											"                \"AuthenInfo\": {\r",
											"                    \"Username\": pm.environment.get(\"AuthenInfo_Username_Create\") ,\r",
											"                    \"Password\": pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"                },\r",
											"                \"UserRole\": \r",
											"                    [\"Customer\"]\r",
											"             \r",
											"                }\r",
											"            )};\r",
											"      \r",
											"        let optionsCreateSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserCreateSystemUser,\r",
											"            method: 'POST',\r",
											"            header: headersOptCreateSystemUser,\r",
											"            body: httpRequestCreateSystemUser\r",
											"        };\r",
											"\r",
											"        let response = await reqPromise(optionsCreateSystemUser);\r",
											"        let jsonDataCreateSystemUser = await response.json();\r",
											"\r",
											"   \r",
											"        let operationStatusCreateSystemUser = await jsonDataCreateSystemUser.OperationStatus;\r",
											"\r",
											"        //201\r",
											"        pm.test(\"CreateSystemUser : Status code is \" + statusCodeCreatedSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeCreatedSuccess);\r",
											"        });\r",
											"        //20100\r",
											"        pm.test('CreateSystemUser : OperationStatus Code is '+'\"'+ resultCodeCreatedSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Code', resultCodeCreatedSuccess);\r",
											"        });\r",
											"        //CreateSystemUser is Success\r",
											"        pm.test('CreateSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionCreateSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusCreateSystemUser).to.have.property('Description', resultDescriptionCreateSystemUser);\r",
											"        });\r",
											"\r",
											"        // GetResponse_SystemUserId\r",
											"        pm.environment.set(\"GetResponse_SystemUserId\",jsonDataCreateSystemUser.SystemUserInfo.SystemUserId)\r",
											"        // GetResponse_SystemUserUsername\r",
											"         pm.environment.set(\"UsernameSystemuser\", jsonDataCreateSystemUser.SystemUserInfo.AuthenInfo.Username);\r",
											"\r",
											"\r",
											"      \r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// Signin get token\r",
											"Signin2 = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSignin = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_Signin + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_UserAuthentication,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestSignin = {\r",
											"            mode: 'raw',\r",
											"            raw: \r",
											"            JSON.stringify({\r",
											"                username:pm.environment.get(\"UsernameSystemuser\"),\r",
											"                password:pm.environment.get(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsSignin = {\r",
											"            url: url + provisioningapis + urlSignin,\r",
											"            method: 'POST',\r",
											"            header: headersOptSignin,\r",
											"            body: httpRequestSignin\r",
											"        };\r",
											"        // console.log('request Signin');\r",
											"        let response = await reqPromise(optionsSignin);\r",
											"        let jsonDataSignin = await response.json();\r",
											"\r",
											"        // setAccessToken\r",
											"        await pm.environment.set(\"AccessToken2\" , jsonDataSignin.AccessToken);\r",
											"\r",
											"\r",
											"        let operationStatusSignin = await jsonDataSignin.OperationStatus;\r",
											"\r",
											"        // 200\r",
											"        pm.test(\"Signin : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        // 20000\r",
											"        pm.test('Signin : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        // SignInProcess is Success\r",
											"        pm.test('Signin : OperationStatus Description is '+'\"'+ resultDescriptionSuccessSignIn+'\"', function () {\r",
											"            pm.expect(operationStatusSignin).to.have.property('Description', resultDescriptionSuccessSignIn);\r",
											"        });\r",
											"        \r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"Signin();\r",
											"setTimeout(async function(){await CreatePartner();}, 5000); \r",
											"setTimeout(async function(){await CreateAccount();}, 6000);\r",
											"setTimeout(async function(){await CreateSystemUser();}, 7000);  \r",
											"setTimeout(async function(){await Signin2();}, 8000);  \r",
											"setTimeout(async function(){}, 9000);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"var url = pm.environment.get(\"url\");\r",
											"var provisioningapis = pm.environment.get(\"provisioningapis\");\r",
											"\r",
											"//---------------- fieldDataValue --------------//\r",
											"//set variable to fieldDataValue JSON.parse\r",
											"var fieldDataValue = JSON.parse(pm.environment.get(\"fieldDataValue\"));\r",
											"// console.log('fieldDataValue',fieldDataValue);\r",
											"\r",
											"var Bearer = pm.environment.get(\"Bearer\");\r",
											"var ContentType_ApplicationJson = pm.environment.get(\"ContentType_ApplicationJson\");\r",
											"var current_timestamp = pm.environment.get(\"current_timestamp\");\r",
											"var Accept = pm.environment.get(\"Accept\");\r",
											"\r",
											"//---------------- get globals HeaderList --------------//\r",
											"//---------------- get globals Other --------------//\r",
											"//get global variable to x_ais_UserName \"AisPartner\"\r",
											"var x_ais_UserName_AisPartner = pm.globals.get(\"x_ais_UserName_AisPartner\");\r",
											"//get global variable to x_ais_OrderDesc \"User Authentication\"\r",
											"var x_ais_OrderDesc_UserAuthentication = pm.globals.get(\"x_ais_OrderDesc_UserAuthentication\");\r",
											"\r",
											"//---------------- get globals Partner --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemovePartner_\"\r",
											"var x_ais_OrderRef_RemovePartner = pm.globals.get(\"x_ais_OrderRef_RemovePartner\");\r",
											"//get global variable to x_ais_OrderDesc \"RemovePartner\"\r",
											"var x_ais_OrderDesc_RemovePartner = pm.globals.get(\"x_ais_OrderDesc_RemovePartner\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveSystemUser_\"\r",
											"var x_ais_OrderRef_RemoveSystemUser = pm.globals.get(\"x_ais_OrderRef_RemoveSystemUser\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveSystemUser\"\r",
											"var x_ais_OrderDesc_RemoveSystemUser = pm.globals.get(\"x_ais_OrderDesc_RemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"\r",
											"//---------------- get globals Account --------------//\r",
											"//get global variable to x_ais_OrderRef \"RemoveAccount_\"\r",
											"var x_ais_OrderRef_RemoveAccount = pm.globals.get(\"x_ais_OrderRef_RemoveAccount\");\r",
											"//get global variable to x_ais_OrderDesc \"RemoveAccount\"\r",
											"var x_ais_OrderDesc_RemoveAccount = pm.globals.get(\"x_ais_OrderDesc_RemoveAccount\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get globals SystemUser --------------//\r",
											"//get global variable to x_ais_OrderRef \"ResetPassword_\"\r",
											"var x_ais_OrderRef_ResetPassword = pm.globals.get(\"x_ais_OrderRef_ResetPassword\");\r",
											"//get global variable to x_ais_OrderRef \"ResetPasswordfail_\"\r",
											"var x_ais_OrderRef_ResetPassword_fail = pm.globals.get(\"x_ais_OrderRef_ResetPassword_fail\");\r",
											"//get global variable to x_ais_OrderDesc \"ResetPassword\"\r",
											"var x_ais_OrderDesc_ResetPassword = pm.globals.get(\"x_ais_OrderDesc_ResetPassword\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//get global variable to x_ais_OrderRef \"Signin_\"\r",
											"var x_ais_OrderRef_Signin = pm.globals.get(\"x_ais_OrderRef_Signin\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"//---------------- get url Remove --------------//\r",
											"//get global variable to url \"/api/v1/Partner/RemovePartner\"\r",
											"var urlPartnerRemovePartner = pm.globals.get(\"urlPartnerRemovePartner\");\r",
											"//get global variable to url \"/api/v1/Account/RemoveAccount\"\r",
											"var urlAccountRemoveAccount = pm.globals.get(\"urlAccountRemoveAccount\");\r",
											"//get global variable to url \"/api/v1/SystemUser/RemoveSystemUser\"\r",
											"var urlSystemUserRemoveSystemUser = pm.globals.get(\"urlSystemUserRemoveSystemUser\");\r",
											"//------------------------------------------------------------//\r",
											"//---------------- get url Signin --------------//\r",
											"//get global variable to url \"/api/v1/auth/signin\"\r",
											"var urlSignin = pm.globals.get(\"urlSignin\");\r",
											"\r",
											"\r",
											"//get global variable to statusCode 200\r",
											"var statusCodeSuccess = pm.globals.get(\"statusCodeSuccess\");\r",
											"//get global variable to resultCode \"20000\"\r",
											"var resultCodeSuccess = pm.globals.get(\"resultCodeSuccess\");\r",
											"//get global variable to resultDescription \"RemovePartner is Success\"\r",
											"var resultDescriptionRemovePartner = pm.globals.get(\"resultDescriptionRemovePartner\");\r",
											"//get global variable to resultDescription \"RemoveAccount is Success\"\r",
											"var resultDescriptionRemoveAccount = pm.globals.get(\"resultDescriptionRemoveAccount\");\r",
											"//get global variable to resultDescription \"RemoveSystemUser is Success\"\r",
											"var resultDescriptionRemoveSystemUser = pm.globals.get(\"resultDescriptionRemoveSystemUser\");\r",
											"//get global variable to resultDescription \"ResetPassword is Success\"\r",
											"var resultDescriptionResetPassword = pm.globals.get(\"resultDescriptionResetPassword\");\r",
											"//get global variable to resultDescription \"SignInProcess is Success\"\r",
											"var resultDescriptionSuccessSignIn = pm.globals.get(\"resultDescriptionSuccessSignIn\");\r",
											"\r",
											"\r",
											"//get global variable to statusCode 403\r",
											"var statusCodeForbidden = pm.globals.get(\"statusCodeForbidden\");\r",
											"//get global variable to resultCode \"40308\"\r",
											"var resultCodeRoleInvalid = pm.globals.get(\"resultCodeRoleInvalid\");\r",
											"//get global variable to resultDescription \"Role Invalid\"\r",
											"var resultDescriptionRoleInvalid = pm.globals.get(\"resultDescriptionRoleInvalid\");\r",
											"//------------------------------------------------------------//\r",
											"\r",
											"let jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"ResetPassword : Status code is \" + statusCodeForbidden, function () {\r",
											"    pm.response.to.have.status(statusCodeForbidden);\r",
											"});\r",
											"\r",
											"pm.test('ResetPassword : operationStatus code is '+'\"'+ resultCodeRoleInvalid +'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Code).to.eql(resultCodeRoleInvalid);\r",
											"});\r",
											"\r",
											"pm.test('ResetPassword : operationStatus description is '+'\"'+ resultDescriptionRoleInvalid+'\"', function () {\r",
											"    pm.expect(jsonData.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);\r",
											"});\r",
											"\r",
											"const reqPromise = (options) => {\r",
											"    return new Promise ((resolve, reject) => {\r",
											"        pm.sendRequest(options, function (err, response) {\r",
											"            if (err) reject(err);\r",
											"            resolve(response);\r",
											"        });\r",
											"    });\r",
											"}\r",
											"\r",
											"// RemovePartner\r",
											" RemovePartner = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemovePartner = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemovePartner + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemovePartner,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemovePartner = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerID\": pm.environment.get(\"GetResponse_PartnerId\")\r",
											"            })\r",
											"        };\r",
											"        \r",
											"        let optionsRemovePartner = {\r",
											"            url: url + provisioningapis + urlPartnerRemovePartner,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemovePartner,\r",
											"            body: httpRequestRemovePartner\r",
											"        };\r",
											"\r",
											"        // console.log('request RemovePartner');\r",
											"        let response = await reqPromise(optionsRemovePartner);\r",
											"        let jsonDataRemovePartner = await response.json();\r",
											"        console.log('jsonDataRemovePartner',jsonDataRemovePartner)\r",
											"    \r",
											"        let operationStatusRemovePartner = await jsonDataRemovePartner.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemovePartner : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemovePartner : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemovePartner is Success\r",
											"        pm.test('RemovePartner : OperationStatus Description is '+'\"'+ resultDescriptionRemovePartner+'\"', function () {\r",
											"            pm.expect(operationStatusRemovePartner).to.have.property('Description', resultDescriptionRemovePartner);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"// RemoveAccount\r",
											" RemoveAccount = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveAccount = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveAccount + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveAccount,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveAccount = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"PartnerId\": pm.environment.get(\"GetResponse_PartnerId\"),\r",
											"                \"AccountId\": pm.environment.get(\"GetResponse_AccountId\")\r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveAccount : : :\",httpRequestRemoveAccount)\r",
											"        \r",
											"        let optionsRemoveAccount = {\r",
											"            url: url + provisioningapis + urlAccountRemoveAccount,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveAccount,\r",
											"            body: httpRequestRemoveAccount\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveAccount');\r",
											"        let response = await reqPromise(optionsRemoveAccount);\r",
											"        let jsonDataRemoveAccount = await response.json();\r",
											"        console.log('jsonDataRemoveAccount',jsonDataRemoveAccount)\r",
											"    \r",
											"        let operationStatusRemoveAccount = await jsonDataRemoveAccount.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveAccount : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveAccount : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveAccount is Success\r",
											"        pm.test('RemoveAccount : OperationStatus Description is '+'\"'+ resultDescriptionRemoveAccount+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveAccount).to.have.property('Description', resultDescriptionRemoveAccount);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"// RemoveSystemUser\r",
											" RemoveSystemUser = async () =>  {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptRemoveSystemUser = {\r",
											"            'Content-Type':ContentType_ApplicationJson,\r",
											"            'x-ais-OrderRef':x_ais_OrderRef_RemoveSystemUser + current_timestamp,\r",
											"            'x-ais-OrderDesc':x_ais_OrderDesc_RemoveSystemUser,\r",
											"            'x-ais-AccessToken':Bearer + ' ' + pm.environment.get(\"AccessToken\"),\r",
											"            'x-ais-UserName':x_ais_UserName_AisPartner,\r",
											"            'Accept':Accept\r",
											"        };\r",
											"\r",
											"        \r",
											"        // body\r",
											"        let httpRequestRemoveSystemUser = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"SystemUserId\": pm.environment.get(\"GetResponse_SystemUserId\")\r",
											"                                                    \r",
											"            })\r",
											"        };\r",
											"        // console.log(\"httpRequestRemoveSystemUser : : :\",httpRequestRemoveSystemUser)\r",
											"        \r",
											"        let optionsRemoveSystemUser = {\r",
											"            url: url + provisioningapis + urlSystemUserRemoveSystemUser,\r",
											"            method: 'DELETE',\r",
											"            header: headersOptRemoveSystemUser,\r",
											"            body: httpRequestRemoveSystemUser\r",
											"        };\r",
											"\r",
											"        // console.log('request RemoveSystemUser');\r",
											"        let response = await reqPromise(optionsRemoveSystemUser);\r",
											"        let jsonDataRemoveSystemUser = await response.json();\r",
											"        // console.log('jsonDataRemoveSystemUser',jsonDataRemoveSystemUser)\r",
											"    \r",
											"        let operationStatusRemoveSystemUser = await jsonDataRemoveSystemUser.OperationStatus;\r",
											"\r",
											"        //200\r",
											"        pm.test(\"RemoveSystemUser : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"        //20000\r",
											"        pm.test('RemoveSystemUser : OperationStatus Code is '+'\"'+ resultCodeSuccess +'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Code', resultCodeSuccess);\r",
											"        });\r",
											"        //RemoveSystemUser is Success\r",
											"        pm.test('RemoveSystemUser : OperationStatus Description is '+'\"'+ resultDescriptionRemoveSystemUser+'\"', function () {\r",
											"            pm.expect(operationStatusRemoveSystemUser).to.have.property('Description', resultDescriptionRemoveSystemUser);\r",
											"        });\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err',err);\r",
											"    }\r",
											"}\r",
											"\r",
											"//---------------- LogDefaultValue --------------//\r",
											"//set variable to LogDefaultValue JSON.parse\r",
											"var LogDefaultValue = JSON.parse(pm.environment.get(\"LogDefaultValue\"));\r",
											"// console.log('LogDefaultValue',LogDefaultValue);\r",
											"//---------------- set globals Other --------------//\r",
											"\r",
											"var SearchLog = LogDefaultValue.SearchLog;\r",
											"// console.log('SearchLog',SearchLog);\r",
											"var url_staging_azure_cauldron = SearchLog.url.log_url_staging_azure_cauldron;\r",
											"var urlCheckLog = LogDefaultValue.SearchLog.url.urlCheckLog;\r",
											"var kbn_version = SearchLog.header.kbn_version;\r",
											"var authorization = SearchLog.header.Authorization;\r",
											"var log_numberSubGTE = SearchLog.log_numberSubGTE;\r",
											"var log_timeStringSubGTE = SearchLog.log_timeStringSubGTE;\r",
											"var namespace = LogDefaultValue.Other.namespace;\r",
											"var header_x_ais_orderref = LogDefaultValue.Other.header_x_ais_orderref;\r",
											"var header_x_ais_orderdesc = LogDefaultValue.Other.header_x_ais_orderdesc;\r",
											"var header_x_ais_accesstoken = LogDefaultValue.Other.header_x_ais_accesstoken;\r",
											"var methodPut = LogDefaultValue.Other.methodPut;\r",
											"\r",
											"// Detail\r",
											"var logTypeDetail = LogDefaultValue.OtherDetail.logTypeDetail;\r",
											"var logLevelDetail = LogDefaultValue.OtherDetail.logLevel;\r",
											"var custom2Detail = LogDefaultValue.OtherDetail.custom2;\r",
											"\r",
											"// Summary\r",
											"var logTypeSummary = LogDefaultValue.OtherSummary.logTypeSummary;\r",
											"var identitySummary = LogDefaultValue.OtherSummary.identity;\r",
											"var customSummary = LogDefaultValue.OtherSummary.custom;\r",
											"\r",
											"// ProvisioningAPIs [SystemUser]\r",
											"var applicationName = LogDefaultValue.Provisioning.applicationName;\r",
											"var cmdName = LogDefaultValue.Provisioning.SystemUser.cmdNameResetPassword_02;\r",
											"var endPointNameProvisioningAPIs = LogDefaultValue.Provisioning.endPointName;\r",
											"var containerId = LogDefaultValue.Provisioning.containerId;\r",
											"var requestObjectUrlStaging = LogDefaultValue.Provisioning.SystemUser.requestObjectUrlResetPasswordMgStaging;\r",
											"\r",
											"// Check CDR (Summary Log) and EDR (Detail Log)\r",
											"SearchLogFindTid = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptSearchLogFindTid = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization' : authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = x_ais_OrderRef_ResetPassword + current_timestamp;\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        console.log(\"valueSearch : : :1\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestSearchLogFindTid = {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\"version\":\"true\",\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":\"true\"}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"\r",
											"        let optionsSearchLogFindTid = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptSearchLogFindTid,\r",
											"            body: httpRequestSearchLogFindTid\r",
											"        };\r",
											"\r",
											"        // console.log('request CreatePartner');\r",
											"        let response = await reqPromise(optionsSearchLogFindTid);\r",
											"        let jsonDataSearchLogFindTid = await response.json();\r",
											"        // console.log('jsonDataSearchLogFindTid',jsonDataSearchLogFindTid)\r",
											"\r",
											"        // //200\r",
											"        pm.test(\"Search Log Find Tid : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });\r",
											"\r",
											"        let hits = jsonDataSearchLogFindTid.hits.hits\r",
											"        console.log('hits : : : 1',hits)\r",
											"  \r",
											"        // find tid\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            // let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"        \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"\r",
											"            if(applicationNameValue == applicationName){\r",
											"                let tid = hits[i]._source.cauldron.tid;\r",
											"                pm.environment.set(\"tid\", tid);\r",
											"                break;\r",
											"           }\r",
											"        }\r",
											"\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"CheckLog = async () => {\r",
											"    try {\r",
											"        // header\r",
											"        let headersOptCheckLog = {\r",
											"            'Content-Type': ContentType_ApplicationJson,\r",
											"            'kbn-version': kbn_version,\r",
											"            'Authorization': authorization\r",
											"        };\r",
											"\r",
											"        let setRangeGTE = moment().subtract(log_numberSubGTE, log_timeStringSubGTE).toJSON();\r",
											"        let setRangeLTE = moment().toJSON();\r",
											"        let valueSearch = pm.environment.get(\"tid\");\r",
											"\r",
											"        // console.log(setRangeGTE)\r",
											"        // console.log(setRangeLTE)\r",
											"        // console.log(\"valueSearch : : 2\",valueSearch)\r",
											"            \r",
											"        // body\r",
											"        let httpRequestCheckLog = {\r",
											"            mode: 'raw',\r",
											"           raw: JSON.stringify({\"version\":true,\"size\":500,\"sort\":[{\"@timestamp_es\":{\"order\":\"desc\",\"unmapped_type\":\"boolean\"}}],\"_source\":{\"excludes\":[]},\"aggs\":{\"2\":{\"date_histogram\":{\"field\":\"@timestamp_es\",\"fixed_interval\":\"30s\",\"time_zone\":\"Asia/Bangkok\",\"min_doc_count\":1}}},\"stored_fields\":[\"*\"],\"script_fields\":{},\"docvalue_fields\":[{\"field\":\"@timestamp_es\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.endTime\",\"format\":\"date_time\"},{\"field\":\"cauldron.custom1.activityLog.startTime\",\"format\":\"date_time\"},{\"field\":\"time\",\"format\":\"date_time\"}],\"query\":{\"bool\":{\"must\":[],\"filter\":[{\"multi_match\":{\"type\":\"best_fields\",\"query\":'\"'+valueSearch+'\"',\"lenient\":true}},{\"range\":{\"@timestamp_es\":{\"format\":\"strict_date_optional_time\",\"gte\":setRangeGTE,\"lte\":setRangeLTE}}}],\"should\":[],\"must_not\":[]}},\"highlight\":{\"pre_tags\":[\"@kibana-highlighted-field@\"],\"post_tags\":[\"@/kibana-highlighted-field@\"],\"fields\":{\"*\":{}},\"fragment_size\":2147483647}})\r",
											"        };\r",
											"        let optionsCheckLog = {\r",
											"            url: url_staging_azure_cauldron ,\r",
											"            method: 'POST',\r",
											"            header: headersOptCheckLog,\r",
											"            body: httpRequestCheckLog\r",
											"        }; \r",
											"        let response = await reqPromise(optionsCheckLog);\r",
											"        let jsonDataCheckLog = await response.json();\r",
											"        // console.log('jsonDataCheckLog',jsonDataCheckLog)\r",
											"        \r",
											"        // //200\r",
											"        pm.test(\"Check Log : Status code is \" + statusCodeSuccess, function () {\r",
											"            pm.expect(response).to.have.property('code', statusCodeSuccess);\r",
											"        });     \r",
											"        \r",
											"        let hits = jsonDataCheckLog.hits.hits\r",
											"        // console.log('hits',hits)\r",
											"  \r",
											"        // find logType\r",
											"        for(let i=0;i<hits.length;i++){\r",
											"            //  let logType = hits[i]._source.cauldron.logType\r",
											"            let logType = hits[i]._source.cauldron.logType;\r",
											"            let applicationNameValue = hits[i]._source.cauldron.applicationName;\r",
											"           \r",
											"            // console.log('logType',logType)\r",
											"            // console.log('applicationNameValue',applicationNameValue)\r",
											"            // console.log('applicationName',applicationName)\r",
											"            \r",
											"            let resultDataLog = JSON.parse(hits[i]._source.log);\r",
											"            // console.log('resultDataLog',resultDataLog)\r",
											"            // console.log(logType)\r",
											"            // console.log(logTypeDetail)\r",
											"            // console.log(logTypeSummary)\r",
											"\r",
											"            let tidControl = x_ais_OrderRef_ResetPassword + current_timestamp;\r",
											"            // console.log(tidControl);\r",
											"            if(applicationNameValue == applicationName){\r",
											"                 \r",
											"                if(logType == logTypeSummary && applicationNameValue == applicationName){ // 'Summary' and ProvisioningAPIs\r",
											"                    pm.test(\"Check Summary Log : Resetpassword\" , function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Summary Log ( Expected = Actual) [Resetpassword] ==================\");\r",
											"                        console.log(\"reqTimestamp : \" + resultDataLog.reqTimestamp + \" = \" + resultDataLog.reqTimestamp);\r",
											"                        console.log(\"cmdName : \" + resultDataLog.cmdName + \" = \" + cmdName);\r",
											"                        console.log(\"resultCode : \" + resultDataLog.resultCode + \" = \" + resultCodeRoleInvalid);\r",
											"                        console.log(\"resultDesc : \" + resultDataLog.resultDesc + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        console.log(\"resTimestamp : \" + resultDataLog.resTimestamp + \" = \" + resultDataLog.resTimestamp);\r",
											"                        console.log(\"usageTime : \" + resultDataLog.usageTime + \" = \" + resultDataLog.usageTime);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeSummary);\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                         // console.log(\"containerId : \" + resultDataLog.containerId + \" = \" + containerId );\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"identity : \" + resultDataLog.identity + \" = \" + identitySummary);\r",
											"                        console.log(\"custom : \" + resultDataLog.custom + \" = \" + customSummary);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.reqTimestamp).to.eql(resultDataLog.reqTimestamp); \r",
											"                        pm.expect(resultDataLog.cmdName).to.eql(cmdName); \r",
											"                        pm.expect(resultDataLog.resultCode).to.eql(resultCodeRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resultDesc).to.eql(resultDescriptionRoleInvalid); \r",
											"                        pm.expect(resultDataLog.resTimestamp).to.eql(resultDataLog.resTimestamp); \r",
											"                        pm.expect(resultDataLog.usageTime).to.eql(resultDataLog.usageTime); \r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeSummary); \r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.identity).to.eql(identitySummary);\r",
											"                        pm.expect(resultDataLog.custom).to.eql(customSummary);\r",
											"\r",
											"\r",
											"                        \r",
											"                    }); \r",
											"                }\r",
											"\r",
											"                if(logType == logTypeDetail && applicationNameValue == applicationName ){ //'Detail' and ProvisioningAPIs\r",
											"\r",
											"                    let endPointNameValue = hits[i]._source.cauldron.custom1.endPointName;\r",
											"                    // console.log('endPointNameValue ',endPointNameValue)\r",
											"                    // console.log('endPointNameProvisioningAPIs ',endPointNameProvisioningAPIs)\r",
											"                     pm.test(\"Check Detail Log : \" + endPointNameValue + \" [Resetpassword]\", function () {\r",
											"                        console.log(\"===============================================================================================================\")\r",
											"                        console.log(\"======== Check Detail Log ( Expected = Actual) [Resetpassword] ==================\");\r",
											"                        console.log(\"systemTimestamp : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"logType : \" + resultDataLog.logType + \" = \" + logTypeDetail);\r",
											"                        console.log(\"logLevel : \" + resultDataLog.logLevel + \" = \" + logLevelDetail);\r",
											"                        console.log(\"namespace : \" + resultDataLog.namespace + \" = \" + namespace);\r",
											"                        console.log(\"applicationName : \" + resultDataLog.applicationName + \" = \" + applicationName);\r",
											"                        console.log(\"sessionId : \" + resultDataLog.sessionId + \" = \" + resultDataLog.sessionId);\r",
											"                        console.log(\"tid : \" + resultDataLog.tid + \" = \" + tidControl);\r",
											"                        console.log(\"custom1.activityLog.startTime : \" + resultDataLog.custom1.activityLog.startTime + \" = \" + resultDataLog.custom1.activityLog.startTime);\r",
											"                        console.log(\"custom1.activityLog.endTime : \" + resultDataLog.custom1.activityLog.endTime + \" = \" + resultDataLog.custom1.activityLog.endTime);\r",
											"                        console.log(\"custom1.activityLog.processTime : \" + resultDataLog.systemTimestamp + \" = \" + resultDataLog.systemTimestamp);\r",
											"                        console.log(\"custom2 : \" + resultDataLog.custom2 + \" = \" + custom2Detail);\r",
											"\r",
											"\r",
											"                        pm.expect(resultDataLog.systemTimestamp).to.eql(resultDataLog.systemTimestamp);\r",
											"                        pm.expect(resultDataLog.logType).to.eql(logTypeDetail); \r",
											"                        pm.expect(resultDataLog.logLevel).to.eql(logLevelDetail); \r",
											"                        pm.expect(resultDataLog.namespace).to.eql(namespace); \r",
											"                        pm.expect(resultDataLog.applicationName).to.eql(applicationName); \r",
											"                        // pm.expect(resultDataLog.containerId).to.eql(containerId); \r",
											"                        pm.expect(resultDataLog.sessionId).to.eql(resultDataLog.sessionId); \r",
											"                        pm.expect(resultDataLog.tid).to.eql(tidControl);\r",
											"                        pm.expect(resultDataLog.custom1.activityLog.startTime).to.eql(resultDataLog.custom1.activityLog.startTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.endTime).to.eql(resultDataLog.custom1.activityLog.endTime); \r",
											"                        pm.expect(resultDataLog.custom1.activityLog.processTime).to.eql(resultDataLog.custom1.activityLog.processTime); \r",
											"                        pm.expect(resultDataLog.custom2).to.eql(custom2Detail); \r",
											"\r",
											"                        if( endPointNameValue == endPointNameProvisioningAPIs){     //\"endPointName\":\"ProvisioningAPIs\"\r",
											"                            pm.expect(resultDataLog.custom1.endPointName).to.eql(endPointNameProvisioningAPIs); \r",
											"                            \r",
											"                            // console.log(\"resultDataLog :\",resultDataLog)\r",
											"                            // console.log(\"resultDataLog.custom1 :\",resultDataLog.custom1)\r",
											"                            // console.log(\"resultDataLog.custom1.requestObject :\",resultDataLog.custom1.requestObject)\r",
											"\r",
											"                            // check requestObject\r",
											"                            // \"requestObject\":\"{ \\\"url\\\":\\\"mg-staging.sandais.com/api/v1/SystemUser/Resetpassword\\\", \\\"method\\\":\\\"POST\\\", \\\"headers\\\":{ \\\"x-ais-username\\\":\\\"AisPartner\\\", \\\"x-ais-orderref\\\":\\\"ResetPassword_202104271804412\\\", \\\"x-ais-orderdesc\\\":\\\"ResetPassword\\\", \\\"x-ais-accesstoken\\\":\\\"Bearer Q2fLUj3Go/nOqZyrJ6FnhSYfeOn1ZSwT0V0ycpecp/S8G3Vu9DD/qLF6WJcjQMRlKIO1U/gfXg2C7HYTAUve2kWbxBhqkK8ml+8QQAvQKleSf2pe/jHMMMPgj8E1ekdRNRNHSXYJnvN9GOENjUqqw26onqTUlbuLceqgzLAVpRUoVVsksNP5MSpSmIGP3BkbUhxxQFXQuZW8W/AtN7G/RjbcKaYarVLhK/s8BSZ0SAGz3tsie+KV1NOoUFtf5OqmfYEwvlCwKy1GJW8SXArxaUIlAkkY2KW0\\\", \\\"x-ais-accountkey\\\":\\\"6087f42f1b7f730001d14cad\\\" }, \\\"body\\\":{ \\\"SystemUserId\\\":\\\"6087f4301b7f730001d14caf\\\" } }\",\r",
											"                            \r",
											"\r",
											"                            let url = urlCheckLog + requestObjectUrlStaging; \r",
											"                            let x_ais_orderref = x_ais_OrderRef_ResetPassword + current_timestamp;\r",
											"                            let x_ais_orderdesc = x_ais_OrderDesc_ResetPassword;\r",
											"                            let x_ais_accesstoken = Bearer + ' ' + pm.environment.get(\"AccessToken2\");\r",
											"                            let SystemUserId = pm.environment.get(\"GetResponse_SystemUserId\");\r",
											"\r",
											"                           \r",
											"                            let jsonParseRequestObject = JSON.parse(resultDataLog.custom1.requestObject);  \r",
											"                            // console.log('jsonParseRequestObject',jsonParseRequestObject);\r",
											"                            pm.expect(jsonParseRequestObject.url).to.eql(url); \r",
											"                            pm.expect(jsonParseRequestObject.method).to.eql(methodPut);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderref]).to.eql(x_ais_orderref);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_orderdesc]).to.eql(x_ais_orderdesc);\r",
											"                            pm.expect(jsonParseRequestObject.headers[header_x_ais_accesstoken]).to.eql(x_ais_accesstoken);\r",
											"                            pm.expect(jsonParseRequestObject.body.SystemUserId).to.eql(SystemUserId);  \r",
											"\r",
											"                            console.log(\"url : \" + jsonParseRequestObject.url + \" = \" + url);\r",
											"                            console.log(\"method : \" + jsonParseRequestObject.method + \" = \" + methodPut);\r",
											"                            console.log(\"headers.x_ais_orderref : \" + jsonParseRequestObject.headers[header_x_ais_orderref] + \" = \" + x_ais_orderref);\r",
											"                            console.log(\"headers.x_ais_orderdesc : \" + jsonParseRequestObject.headers[header_x_ais_orderdesc] + \" = \" + x_ais_orderdesc);\r",
											"                            console.log(\"headers.x_ais_accesstoken : \" + jsonParseRequestObject.headers[header_x_ais_accesstoken] + \" = \" + x_ais_accesstoken);\r",
											"                            console.log(\"resquest.body.SystemUserId : \" + jsonParseRequestObject.body.SystemUserId + \" = \" + SystemUserId);\r",
											"                          \r",
											"                            // check responseObject\r",
											"                            // \"responseObject\":\"{ \\\"NewPassword\\\":\\\"RGtaaXNEUzlFYw==\\\", \\\"OperationStatus\\\":{ \\\"Code\\\":\\\"20000\\\", \\\"Description\\\":\\\"ResetPassword is Success\\\" }\r",
											"\r",
											"                         \r",
											"                            let jsonParseResponseObject = JSON.parse(resultDataLog.custom1.responseObject);\r",
											"                            // console.log(\"jsonParseResponseObject:\", jsonParseResponseObject)   \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Code).to.eql(resultCodeRoleInvalid);  \r",
											"                            pm.expect(jsonParseResponseObject.OperationStatus.Description).to.eql(resultDescriptionRoleInvalid);  \r",
											"\r",
											"                            console.log(\"response.OperationStatus.Code : \" + jsonParseResponseObject.OperationStatus.Code + \" = \" + resultCodeRoleInvalid);\r",
											"                            console.log(\"response.OperationStatus.Description : \" + jsonParseResponseObject.OperationStatus.Description + \" = \" + resultDescriptionRoleInvalid);\r",
											"                        }\r",
											"\r",
											"                    }); \r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    } catch (err) {\r",
											"        console.log('err', err);\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"setTimeout(function(){SearchLogFindTid();}, 9000); \r",
											"setTimeout(function(){CheckLog();}, 20000); \r",
											"setTimeout(function(){RemoveSystemUser();}, 60000);\r",
											"setTimeout(function(){RemoveAccount();}, 70000);  \r",
											"setTimeout(function(){RemovePartner();}, 90000);\r",
											"setTimeout(function(){\r",
											"pm.environment.unset(\"random_number\");\r",
											"pm.environment.unset(\"PartnerName\");\r",
											"pm.environment.unset(\"MerchantContact\");\r",
											"pm.environment.unset(\"CPID\");\r",
											"pm.environment.unset(\"sessionId\");\r",
											"pm.environment.unset(\"current_timestamp\");\r",
											"pm.environment.unset(\"AccessToken\");\r",
											"pm.environment.unset(\"GetResponse_PartnerId\");\r",
											"pm.environment.unset(\"GetResponse_CustomerId\");\r",
											"pm.environment.unset(\"AccountName\");\r",
											"pm.environment.unset(\"PartnerTypeValue\");\r",
											"pm.environment.unset(\"PropertyRouteEngineValue\");\r",
											"pm.environment.unset(\"tid\");\r",
											"pm.environment.unset(\"Value_CreateAccount_TST_F2_0_2_003_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountName\");\r",
											"pm.environment.unset(\"GetResponse_AccountId\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Username\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_AuthenInfo_Password\");\r",
											"pm.environment.unset(\"Value_CreateSystemUser_TST_F31_1_1_001_UserRole\");\r",
											"pm.environment.unset(\"GetResponse_SystemUserId\");\r",
											"pm.environment.unset(\"NewPassword\");\r",
											"pm.environment.unset(\"UsernameSystemuser\");\r",
											"pm.environment.unset(\"PasswordSystemuser\");\r",
											"pm.environment.unset(\"AuthenInfo_Username_Create\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"}, 100000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-ais-UserName",
										"value": "{{x_ais_UserName_AisPartner}}",
										"type": "text"
									},
									{
										"key": "x-ais-OrderRef",
										"value": "{{x_ais_OrderRef_ResetPassword}}{{current_timestamp}}"
									},
									{
										"key": "x-ais-OrderDesc",
										"value": "{{x_ais_OrderDesc_ResetPassword}}",
										"type": "text"
									},
									{
										"key": "x-ais-AccessToken",
										"value": "{{Bearer}} {{AccessToken2}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-ais-AccountKey",
										"value": "{{GetResponse_AccountId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SystemUserId\": \"{{GetResponse_SystemUserId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}{{provisioningapis}}/api/v1/SystemUser/Resetpassword",
									"host": [
										"{{url}}{{provisioningapis}}"
									],
									"path": [
										"api",
										"v1",
										"SystemUser",
										"Resetpassword"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}